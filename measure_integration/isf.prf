(isf
 (nonzero_measurable 0
  (nonzero_measurable-2 "" 3789903937
   ("" (skosimp)
    (("" (typepred "g!1")
      (("" (expand "measurable_function?")
        (("" (lemma "singleton_is_borel" ("x" "0"))
          (("" (lemma "fullset_is_borel[real,metric_induced_topology]")
            ((""
              (lemma "difference_is_borel[real,metric_induced_topology]"
               ("a" "fullset[real]" "b" "singleton[real](0)"))
              ((""
                (inst - "difference[real](fullset[real], singleton[real](0))")
                (("" (expand "measurable_set?")
                  ((""
                    (case-replace "inverse_image(g!1,
                      difference[real](fullset[real], singleton[real](0))) = nonzero_set?(g!1)")
                    (("" (hide-all-but 1)
                      (("" (apply-extensionality :hide? t)
                        (("" (expand "nonzero_set?")
                          (("" (expand "singleton")
                            (("" (expand "fullset")
                              (("" (expand "difference")
                                (("" (expand "member")
                                  (("" (expand "inverse_image")
                                    (("" (expand "member")
                                      ((""
                                        (expand "/=")
                                        (("" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (singleton_is_borel formula-decl nil hausdorff_borel nil)
    (subset_algebra_fullset name-judgement "(borel?)" measure_space_def nil)
    (real_is_complete name-judgement "metric_complete" real_topology
     metric_space)
    (fullset_is_clopen name-judgement
     "clopen[real, (metric_induced_topology)]" convergence_aux metric_space)
    (singleton_is_closed application-judgement
     "closed[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[real]" integral_def analysis)
    (singleton_is_compact application-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[nat]" countability sets_aux)
    (difference_is_borel formula-decl nil borel nil)
    (borel? const-decl "sigma_algebra" borel nil)
    (borel nonempty-type-eq-decl nil borel nil)
    (set type-eq-decl nil sets nil) (fullset const-decl "set" sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (member const-decl "bool" sets nil) (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (difference const-decl "set" sets nil)
    (open_diff_closed_is_open application-judgement
     "open[real, (metric_induced_topology)]" convergence_aux metric_space)
    (fullset_is_borel formula-decl nil borel nil))
   shostak)
  (nonzero_measurable-1 nil 3390787726
   ("" (skosimp)
    (("" (typepred "g!1")
      (("" (expand "measurable_function?")
        (("" (lemma "singleton_is_borel" ("x" "0"))
          (("" (lemma "fullset_is_borel[real,metric_induced_topology]")
            ((""
              (lemma "difference_is_borel[real,metric_induced_topology]"
               ("a" "fullset[real]" "b" "singleton[real](0)"))
              (("1"
                (inst - "difference[real](fullset[real], singleton[real](0))")
                (("1" (expand "measurable_set?")
                  (("1"
                    (case-replace "inverse_image(g!1,
                      difference[real](fullset[real], singleton[real](0))) = nonzero_set?(g!1)")
                    (("1" (hide-all-but 1)
                      (("1" (apply-extensionality :hide? t)
                        (("1" (expand "nonzero_set?")
                          (("1" (expand "singleton")
                            (("1" (expand "fullset")
                              (("1" (expand "difference")
                                (("1" (expand "member")
                                  (("1" (expand "inverse_image")
                                    (("1" (expand "member")
                                      (("1"
                                        (expand "/=")
                                        (("1" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (singleton_is_borel formula-decl nil hausdorff_borel nil)
    (real_is_complete name-judgement "metric_complete" real_topology
     metric_space)
    (difference_is_borel formula-decl nil borel nil)
    (borel? const-decl "sigma_algebra" borel nil)
    (borel nonempty-type-eq-decl nil borel nil)
    (set type-eq-decl nil sets nil) (fullset const-decl "set" sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (member const-decl "bool" sets nil) (difference const-decl "set" sets nil)
    (fullset_is_borel formula-decl nil borel nil))
   shostak))
 (nonzero_set_phi 0
  (nonzero_set_phi-1 nil 3390785835
   ("" (skosimp)
    (("" (typepred "X!1")
      (("" (apply-extensionality 1 :hide? t)
        (("" (expand "nonzero_set?")
          (("" (expand "phi")
            (("" (expand "member")
              (("" (case-replace "X!1(x!1)")
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (member const-decl "bool" sets nil)
    (phi_is_simple application-judgement "simple" isf nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (set type-eq-decl nil sets nil) (nonzero_set? const-decl "set[T]" isf nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (phi const-decl "nat" measure_space nil))
   shostak))
 (isf?_TCC1 0
  (isf?_TCC1-1 nil 3390785367
   ("" (skosimp*)
    (("" (expand "simple?")
      (("" (flatten)
        (("" (lemma "nonzero_measurable" ("g" "f!1"))
          (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   ((simple? const-decl "bool" measure_space nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (nonzero_measurable formula-decl nil isf nil))
   nil (isf? subtype "isf.nonzero_set?(isf.f)" "measurable_set[T, S]")))
 (isf_zero 0
  (isf_zero-1 nil 3395229959
   ("" (expand "isf?")
    (("" (lemma "simple_const" ("c" "0"))
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "nonzero_set?")
            (("" (expand "mu_fin?")
              (("" (lemma "m_emptyset")
                (("" (expand "emptyset")
                  (("" (replace -1) (("" (assert) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (simple_const formula-decl nil measure_space nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (emptyset const-decl "set" sets nil)
    (m_emptyset formula-decl nil measure_props nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (isf? const-decl "bool" isf nil))
   shostak))
 (isf_TCC1 0
  (isf_TCC1-1 nil 3390785367
   ("" (expand "isf?")
    (("" (split)
      (("1" (expand "simple?")
        (("1" (split)
          (("1" (expand "measurable_function?")
            (("1" (skosimp)
              (("1" (case "B!1(0)")
                (("1"
                  (case-replace
                   "inverse_image(LAMBDA (x: T): 0, B!1)=fullset[T]")
                  (("1" (expand "measurable_set?") (("1" (propax) nil nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (apply-extensionality 1 :hide? t)
                      (("2" (expand "fullset")
                        (("2" (expand "inverse_image")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (case-replace
                   "inverse_image(LAMBDA (x: T): 0, B!1)=emptyset[T]")
                  (("1" (expand "measurable_set?") (("1" (propax) nil nil))
                    nil)
                   ("2" (hide 3)
                    (("2" (apply-extensionality :hide? t)
                      (("2" (expand "emptyset")
                        (("2" (expand "inverse_image")
                          (("2" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (case "empty?(fullset[T])")
            (("1"
              (case-replace
               "image(LAMBDA (x: T): 0, fullset[T]) = emptyset[real]")
              (("1" (assert) nil nil)
               ("2" (apply-extensionality :hide? t)
                (("2" (expand "emptyset")
                  (("2" (expand "fullset")
                    (("2" (hide 1)
                      (("2" (expand "image")
                        (("2" (skolem - ("TT"))
                          (("2" (expand "empty?")
                            (("2" (inst - "TT")
                              (("2" (expand "member") (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2"
              (case-replace
               "image[T,real](LAMBDA (x: T): 0, fullset[T]) = singleton[real](0)")
              (("1" (assert) nil nil)
               ("2" (hide 3)
                (("2" (expand "singleton")
                  (("2" (apply-extensionality :hide? t)
                    (("2" (case-replace "x!1=0")
                      (("1" (expand "fullset")
                        (("1" (expand "image")
                          (("1" (expand "empty?")
                            (("1" (skosimp) (("1" (inst + "x!2") nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (expand "fullset")
                          (("2" (expand "image") (("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (expand "nonzero_set?")
        (("2" (typepred "m")
          (("2" (expand "measure?")
            (("2" (flatten)
              (("2" (expand "mu_fin?")
                (("2" (assert)
                  (("2" (expand "measure_empty?")
                    (("2" (expand "emptyset")
                      (("2" (replace -1) (("2" (assert) nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((emptyset const-decl "set" sets nil)
    (subset_algebra_emptyset name-judgement "(S)" isf nil)
    (null_emptyset name-judgement "null_set" isf nil)
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     sets_aux)
    (finite_emptyset name-judgement "finite_set[T]" countable_props sets_aux)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (T formal-type-decl nil isf nil) (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (fullset const-decl "set" sets nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (member const-decl "bool" sets nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (borel? const-decl "sigma_algebra" borel nil)
    (borel nonempty-type-eq-decl nil borel nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (singleton_is_closed application-judgement
     "closed[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[real]" integral_def analysis)
    (singleton_is_compact application-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[nat]" countability sets_aux)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (image const-decl "set[R]" function_image nil)
    (finite_emptyset name-judgement "finite_set[T]" step_fun_props analysis)
    (subset_algebra_emptyset name-judgement "(S)" measure_space_def nil)
    (finite_emptyset name-judgement "finite_set[real]" integral_def analysis)
    (emptyset_is_clopen name-judgement
     "clopen[real, (metric_induced_topology)]" convergence_aux metric_space)
    (emptyset_is_compact name-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (TRUE const-decl "bool" booleans nil) (empty? const-decl "bool" sets nil)
    (simple? const-decl "bool" measure_space nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (isf? const-decl "bool" isf nil))
   nil (isf subtype "(LAMBDA x: 0)" "isf")))
 (isf_add 0
  (isf_add-1 nil 3390785367
   ("" (skosimp)
    (("" (typepred "i1!1")
      (("" (typepred "i2!1")
        (("" (expand "isf?")
          (("" (flatten)
            (("" (lemma "simple_add" ("h1" "i1!1" "h2" "i2!1"))
              (("" (assert)
                (("" (expand "+")
                  (("" (expand "simple?")
                    (("" (flatten)
                      (("" (hide-all-but (-5 -8 1))
                        ((""
                          (lemma "union_difference"
                           ("a" "nonzero_set?(i1!1)" "b"
                            "nonzero_set?(i2!1)"))
                          ((""
                            (lemma "difference_disjoint"
                             ("a" "nonzero_set?(i1!1)" "b"
                              "nonzero_set?(i2!1)"))
                            ((""
                              (lemma "m_disjoint_union"
                               ("a" "nonzero_set?(i1!1)" "b"
                                "difference(nonzero_set?(i2!1), nonzero_set?(i1!1))"))
                              (("1" (replace -2 -1)
                                (("1" (replace -3 -1 rl)
                                  (("1" (expand "mu_fin?")
                                    (("1" (expand "x_eq")
                                      (("1"
                                        (expand "x_add")
                                        (("1"
                                          (replace -5)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (hide -2)
                                              (("1"
                                                (lemma
                                                 "m_monotone"
                                                 ("a"
                                                  "difference(nonzero_set?(i2!1), nonzero_set?(i1!1))"
                                                  "b"
                                                  "nonzero_set?(i2!1)"))
                                                (("1"
                                                  (split -1)
                                                  (("1"
                                                    (expand "x_le")
                                                    (("1"
                                                      (replace -5)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -2)
                                                            (("1"
                                                              (hide-all-but
                                                               (-2 1))
                                                              (("1"
                                                                (lemma
                                                                 "m_monotone"
                                                                 ("a"
                                                                  "nonzero_set?(LAMBDA (x: T): i1!1(x) + i2!1(x))"
                                                                  "b"
                                                                  "union(nonzero_set?(i1!1), nonzero_set?(i2!1))"))
                                                                (("1"
                                                                  (split -1)
                                                                  (("1"
                                                                    (expand
                                                                     "x_le")
                                                                    (("1"
                                                                      (replace
                                                                       -2)
                                                                      (("1"
                                                                        (flatten)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "nonzero_set?")
                                                                      (("2"
                                                                        (expand
                                                                         "union")
                                                                        (("2"
                                                                          (expand
                                                                           "subset?")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (skosimp*)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("2"
                                                                    (lemma
                                                                     "nonzero_measurable"
                                                                     ("g"
                                                                      "i1!1"))
                                                                    (("2"
                                                                      (lemma
                                                                       "nonzero_measurable"
                                                                       ("g"
                                                                        "i2!1"))
                                                                      (("2"
                                                                        (expand
                                                                         "measurable_set?")
                                                                        (("2"
                                                                          (lemma
                                                                           "sigma_algebra_union"
                                                                           ("x"
                                                                            "nonzero_set?(i1!1)"
                                                                            "y"
                                                                            "nonzero_set?(i2!1)"))
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (propax)
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (hide-all-but
                                                                   1)
                                                                  (("3"
                                                                    (lemma
                                                                     "nonzero_measurable"
                                                                     ("g"
                                                                      "LAMBDA (x: T): i1!1(x) + i2!1(x)"))
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (hide 2)
                                                                      (("2"
                                                                        (lemma
                                                                         "sum_measurable"
                                                                         ("g1"
                                                                          "i1!1"
                                                                          "g2"
                                                                          "i2!1"))
                                                                        (("2"
                                                                          (expand
                                                                           "+")
                                                                          (("2"
                                                                            (propax)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (expand "nonzero_set?")
                                                      (("2"
                                                        (expand "difference")
                                                        (("2"
                                                          (expand "subset?")
                                                          (("2"
                                                            (expand "member")
                                                            (("2"
                                                              (skosimp*)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (lemma
                                                   "nonzero_measurable"
                                                   ("g" "i2!1"))
                                                  (("2" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (lemma "sigma_algebra_difference"
                                 ("x" "nonzero_set?(i2!1)" "y"
                                  "nonzero_set?(i1!1)"))
                                (("1" (expand "measurable_set?")
                                  (("1" (expand "member")
                                    (("1" (propax) nil nil)) nil))
                                  nil)
                                 ("2"
                                  (lemma "nonzero_measurable" ("g" "i1!1"))
                                  (("2" (expand "measurable_set?")
                                    (("2" (propax) nil nil)) nil))
                                  nil)
                                 ("3"
                                  (lemma "nonzero_measurable" ("g" "i2!1"))
                                  (("3" (expand "measurable_set?")
                                    (("3" (propax) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (simple_add application-judgement "simple" isf nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (simple_add judgement-tcc nil measure_space nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (union_difference formula-decl nil sets_lemmas nil)
    (set type-eq-decl nil sets nil) (nonzero_set? const-decl "set[T]" isf nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (difference const-decl "set" sets nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (m_disjoint_union formula-decl nil measure_props nil)
    (x_eq const-decl "bool" extended_nnreal extended_nnreal)
    (sum_measurable judgement-tcc nil measure_space_def nil)
    (sigma_algebra_union formula-decl nil sigma_algebra nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (nonzero_measurable formula-decl nil isf nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (union const-decl "set" sets nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (m_monotone formula-decl nil measure_props nil)
    (x_add const-decl "extended_nnreal" extended_nnreal extended_nnreal)
    (mu_fin? const-decl "bool" measure_props nil)
    (sigma_algebra_difference formula-decl nil sigma_algebra nil)
    (difference_disjoint formula-decl nil sets_lemmas nil)
    (real_plus_real_is_real application-judgement "real" reals nil))
   nil (isf_add subtype "(real_fun_ops[isf.T].+)(isf.i1, isf.i2)" "isf")))
 (isf_scal 0
  (isf_scal-1 nil 3390785367
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (expand "*")
        (("" (expand "isf?")
          (("" (flatten)
            (("" (lemma "simple_scal" ("c" "c!1" "h" "i!1"))
              (("" (expand "*")
                (("" (split)
                  (("1" (propax) nil nil)
                   ("2" (hide -1 -2)
                    (("2" (case-replace "c!1=0")
                      (("1"
                        (case-replace
                         "nonzero_set?(LAMBDA (x: T): 0 * i!1(x)) = emptyset[T]")
                        (("1" (expand "mu_fin?")
                          (("1" (typepred "m")
                            (("1" (expand "measure?")
                              (("1" (flatten)
                                (("1" (assert)
                                  (("1" (expand "measure_empty?")
                                    (("1" (replace -1)
                                      (("1" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1)
                          (("2" (apply-extensionality :hide? t)
                            (("2" (expand "emptyset")
                              (("2" (expand "nonzero_set?")
                                (("2" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (case-replace
                         "nonzero_set?(LAMBDA (x: T): c!1 * i!1(x)) = nonzero_set?(i!1)")
                        (("2" (hide-all-but (1 2))
                          (("2" (apply-extensionality :hide? t)
                            (("2" (expand "nonzero_set?")
                              (("2" (expand "/=")
                                (("2" (assert)
                                  (("2" (case-replace "i!1(x!1) = 0")
                                    (("1" (assert) nil nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (simple_scal judgement-tcc nil measure_space nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (subset_algebra_emptyset name-judgement "(S)" isf nil)
    (null_emptyset name-judgement "null_set" isf nil)
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     sets_aux)
    (finite_emptyset name-judgement "finite_set[T]" countable_props sets_aux)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (set type-eq-decl nil sets nil) (nonzero_set? const-decl "set[T]" isf nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (emptyset const-decl "set" sets nil)
    (/= const-decl "boolean" notequal nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (isf_scal subtype "real_fun_ops[isf.T].*(isf.c, isf.i)" "isf")))
 (isf_opp 0
  (isf_opp-1 nil 3390790565
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (lemma "isf_scal" ("c" "-1" "i" "i!1"))
        (("" (expand "*") (("" (expand "-" 1) (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (isf_scal judgement-tcc nil isf nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil))
   nil (isf_opp subtype "(real_fun_ops[isf.T].-)(isf.i)" "isf")))
 (isf_diff 0
  (isf_diff-1 nil 3390790565
   ("" (skosimp)
    (("" (lemma "isf_opp" ("i" "i2!1"))
      (("" (lemma "isf_add" ("i1" "i1!1" "i2" "-i2!1"))
        (("" (expand "-") (("" (expand "+") (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil) (isf_opp judgement-tcc nil isf nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (isf_opp application-judgement "isf" isf nil)
    (isf_add judgement-tcc nil isf nil)
    (- const-decl "[T -> real]" real_fun_ops reals))
   nil (isf_diff subtype "(real_fun_ops[isf.T].-)(isf.i1, isf.i2)" "isf")))
 (isf_abs 0
  (isf_abs-1 nil 3390785367
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (expand "isf?")
        (("" (flatten)
          (("" (lemma "simple_abs" ("h" "i!1"))
            (("" (expand "simple?")
              (("" (flatten)
                ((""
                  (lemma "m_monotone"
                   ("a" "nonzero_set?(abs[T](i!1))" "b" "nonzero_set?(i!1)"))
                  (("" (split -1)
                    (("1" (expand "x_le")
                      (("1" (expand "mu_fin?")
                        (("1" (replace -6) (("1" (flatten) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (hide-all-but 1)
                      (("2" (expand "nonzero_set?")
                        (("2" (expand "abs")
                          (("2" (expand "subset?")
                            (("2" (expand "member")
                              (("2" (skosimp*)
                                (("2" (replace -1)
                                  (("2" (expand "abs")
                                    (("2" (propax) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (set type-eq-decl nil sets nil)
    (m_monotone formula-decl nil measure_props nil)
    (member const-decl "bool" sets nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (subset? const-decl "bool" sets nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (mu_fin? const-decl "bool" measure_props nil)
    (simple_abs judgement-tcc nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (simple_abs application-judgement "simple" isf nil))
   nil (isf_abs subtype "real_fun_ops[isf.T].abs(isf.i)" "isf")))
 (isf_min 0
  (isf_min-1 nil 3390785367
   ("" (skosimp)
    (("" (typepred "i1!1")
      (("" (typepred "i2!1")
        (("" (expand "isf?")
          (("" (flatten)
            (("" (lemma "simple_min" ("h1" "i1!1" "h2" "i2!1"))
              (("" (expand "min")
                (("" (hide -1 -2 -4)
                  (("" (expand "mu_fin?")
                    ((""
                      (case "subset?(nonzero_set?(LAMBDA (x: T): min(i1!1(x), i2!1(x))),union(nonzero_set?(i1!1),nonzero_set?(i2!1)))")
                      (("1"
                        (lemma "m_union"
                         ("a" "nonzero_set?(i1!1)" "b" "nonzero_set?(i2!1)"))
                        (("1"
                          (lemma "m_monotone"
                           ("a"
                            "nonzero_set?(LAMBDA (x: T): min(i1!1(x), i2!1(x)))"
                            "b"
                            "union(nonzero_set?(i1!1), nonzero_set?(i2!1))"))
                          (("1" (replace -3 -1 LR)
                            (("1"
                              (name-replace "NZM"
                               "nonzero_set?(LAMBDA (x: T): min(i1!1(x), i2!1(x)))")
                              (("1" (hide -3)
                                (("1" (expand "x_le")
                                  (("1" (assert)
                                    (("1" (expand "x_add")
                                      (("1" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (expand "measurable_set?")
                            (("2"
                              (lemma "sigma_algebra_union"
                               ("x" "nonzero_set?(i1!1)" "y"
                                "nonzero_set?(i2!1)"))
                              (("2" (assert) nil nil)) nil))
                            nil)
                           ("3" (rewrite "nonzero_measurable")
                            (("3"
                              (lemma "min_measurable"
                               ("g1" "i1!1" "g2" "i2!1"))
                              (("3" (expand "min" -1) (("3" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (lemma "nonzero_measurable" ("g" "i2!1"))
                          (("2" (propax) nil nil)) nil)
                         ("3" (lemma "nonzero_measurable" ("g" "i1!1"))
                          (("3" (propax) nil nil)) nil))
                        nil)
                       ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (simple_min application-judgement "simple" isf nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (simple_min judgement-tcc nil measure_space nil)
    (set type-eq-decl nil sets nil) (subset? const-decl "bool" sets nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (union const-decl "set" sets nil)
    (m_monotone formula-decl nil measure_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (x_add const-decl "extended_nnreal" extended_nnreal extended_nnreal)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (sigma_algebra_union formula-decl nil sigma_algebra nil)
    (member const-decl "bool" sets nil)
    (min_measurable judgement-tcc nil measure_space nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (nonzero_measurable formula-decl nil isf nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (m_union formula-decl nil measure_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (/= const-decl "boolean" notequal nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (min const-decl "[T -> real]" real_fun_ops_aux reals))
   nil (isf_min subtype "real_fun_ops_aux[isf.T].min(isf.i1, isf.i2)" "isf")))
 (isf_max 0
  (isf_max-2 "" 3789903945
   ("" (skosimp)
    (("" (typepred "i1!1")
      (("" (typepred "i2!1")
        (("" (lemma "isf_scal" ("c" "-1" "i" "i1!1"))
          (("" (lemma "isf_scal" ("c" "-1" "i" "i2!1"))
            ((""
              (lemma "isf_min" ("i1" "*[T](-1, i1!1)" "i2" "*[T](-1, i2!1)"))
              (("" (expand "*")
                (("" (expand "min")
                  ((""
                    (lemma "isf_scal"
                     ("c" "-1" "i"
                      "LAMBDA (x_1: T): min(-1 * i1!1(x_1), -1 * i2!1(x_1))"))
                    (("1" (expand "*" -1)
                      (("1" (expand "min")
                        (("1" (expand "max")
                          (("1" (expand "max")
                            (("1"
                              (case-replace "(LAMBDA (x: T):
             -1 *
              IF -1 * i1!1(x) > -1 * i2!1(x) THEN -1 * i2!1(x)
              ELSE -1 * i1!1(x)
              ENDIF)=(LAMBDA (x: T):
             IF i1!1(x) < i2!1(x) THEN i2!1(x) ELSE i1!1(x) ENDIF)")
                              (("1" (apply-extensionality :hide? t)
                                (("1" (hide-all-but 1) (("1" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (propax) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (isf_scal judgement-tcc nil isf nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (isf_scal application-judgement "isf" isf nil)
    (isf_min judgement-tcc nil isf nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (min const-decl "[T -> real]" real_fun_ops_aux reals)
    (max const-decl "[T -> real]" real_fun_ops_aux reals)
    (< const-decl "bool" reals nil) (> const-decl "bool" reals nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   shostak
   (isf_max subtype "real_fun_ops_aux[isf.T].max(isf.i1, isf.i2)" "isf"))
  (isf_max-1 nil 3390785367
   ("" (skosimp)
    (("" (typepred "i1!1")
      (("" (typepred "i2!1")
        (("" (lemma "isf_scal" ("c" "-1" "i" "i1!1"))
          (("" (lemma "isf_scal" ("c" "-1" "i" "i2!1"))
            ((""
              (lemma "isf_min" ("i1" "*[T](-1, i1!1)" "i2" "*[T](-1, i2!1)"))
              (("" (expand "*")
                (("" (expand "min")
                  ((""
                    (lemma "isf_scal"
                     ("c" "-1" "i"
                      "LAMBDA (x_1: T): min(-1 * i1!1(x_1), -1 * i2!1(x_1))"))
                    (("1" (expand "*" -1)
                      (("1" (expand "min")
                        (("1" (expand "max")
                          (("1" (expand "max")
                            (("1"
                              (case-replace "(LAMBDA (x: T):
             -1 *
              IF -1 * i1!1(x) > -1 * i2!1(x) THEN -1 * i2!1(x)
              ELSE -1 * i1!1(x)
              ENDIF)=(LAMBDA (x: T):
             IF i1!1(x) < i2!1(x) THEN i2!1(x) ELSE i1!1(x) ENDIF)")
                              (("1" (apply-extensionality :hide? t)
                                (("1" (hide-all-but 1) (("1" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((min const-decl "[T -> real]" real_fun_ops_aux reals)
    (max const-decl "[T -> real]" real_fun_ops_aux reals))
   nil (isf_max subtype "real_fun_ops_aux[isf.T].max(isf.i1, isf.i2)" "isf")))
 (isf_minimum 0
  (isf_minimum-1 nil 3409635960
   ("" (induct "n")
    (("1" (expand "minimum") (("1" (propax) nil nil)) nil)
     ("2" (skosimp*)
      (("2" (inst - "w!1")
        (("2" (expand "minimum" 1)
          (("2" (assert) (("2" (rewrite "isf_min") nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((simple_min application-judgement "simple" isf nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (isf_min judgement-tcc nil isf nil)
    (simple_minimum application-judgement "simple[T, S]" isf nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (minimum def-decl "[T -> real]" real_fun_ops_aux reals)
    (sequence type-eq-decl nil sequences nil)
    (isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (T formal-type-decl nil isf nil) (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (isf_minimum subtype "real_fun_ops_aux[isf.T].minimum(isf.w, isf.n)"
    "isf")))
 (isf_maximum 0
  (isf_maximum-1 nil 3409635960
   ("" (induct "n")
    (("1" (expand "maximum") (("1" (propax) nil nil)) nil)
     ("2" (skosimp*)
      (("2" (inst - "w!1")
        (("2" (expand "maximum" 1) (("2" (rewrite "isf_max") nil nil)) nil))
        nil))
      nil))
    nil)
   ((simple_max application-judgement "simple[T, S]" isf nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (simple_maximum application-judgement "simple[T, S]" isf nil)
    (isf_max judgement-tcc nil isf nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (maximum def-decl "[T -> real]" real_fun_ops_aux reals)
    (sequence type-eq-decl nil sequences nil)
    (isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (T formal-type-decl nil isf nil) (pred type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   nil
   (isf_maximum subtype "real_fun_ops_aux[isf.T].maximum(isf.w, isf.n)"
    "isf")))
 (isf_plus 0
  (isf_plus-1 nil 3390785367
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (lemma "isf_max" ("i1" "i!1" "i2" "lambda x: 0"))
        (("1" (expand "max")
          (("1" (expand "plus") (("1" (propax) nil nil)) nil)) nil)
         ("2" (lemma "isf_zero") (("2" (propax) nil nil)) nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (isf_zero formula-decl nil isf nil)
    (max const-decl "[T -> real]" real_fun_ops_aux reals)
    (plus const-decl "[T -> nnreal]" real_fun_ops_aux reals)
    (isf_max judgement-tcc nil isf nil))
   nil (isf_plus subtype "real_fun_ops_aux[isf.T].plus(isf.i)" "isf")))
 (isf_minus 0
  (isf_minus-1 nil 3390785367
   ("" (skosimp)
    (("" (lemma "isf_min" ("i1" "i!1" "i2" "lambda x: 0"))
      (("1" (expand "min")
        (("1"
          (lemma "isf_scal"
           ("c" "-1" "i" "LAMBDA (x_1: T): min(i!1(x_1), 0)"))
          (("1" (expand "*")
            (("1" (expand "minus") (("1" (assert) nil nil)) nil)) nil)
           ("2" (propax) nil nil))
          nil))
        nil)
       ("2" (lemma "isf_zero") (("2" (propax) nil nil)) nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil) (isf_min judgement-tcc nil isf nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (isf_scal judgement-tcc nil isf nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus const-decl "[T -> nnreal]" real_fun_ops_aux reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (min const-decl "[T -> real]" real_fun_ops_aux reals)
    (isf_zero formula-decl nil isf nil))
   nil (isf_minus subtype "real_fun_ops_aux[isf.T].minus(isf.i)" "isf")))
 (isf_sq 0
  (isf_sq-1 nil 3390790771
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (expand "sq")
        (("" (expand "isf?")
          (("" (flatten)
            (("" (split)
              (("1" (hide -2)
                (("1" (expand "simple?")
                  (("1" (flatten)
                    (("1" (split)
                      (("1" (hide -2)
                        (("1"
                          (lemma "prod_measurable" ("g1" "i!1" "g2" "i!1"))
                          (("1" (expand "sq")
                            (("1" (expand "*") (("1" (propax) nil nil)) nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1)
                        (("2" (lemma "finite_image[real,real]")
                          (("2"
                            (inst - "image(i!1, fullset[T])"
                             "lambda (x:real): x*x")
                            (("2"
                              (case-replace "image[real, real]
               (LAMBDA (x: real): x * x, image[T,real](i!1, fullset[T]))=image[T,real](LAMBDA (x: T): sq(i!1(x)), fullset[T])")
                              (("2" (hide-all-but 1)
                                (("2" (apply-extensionality :hide? t)
                                  (("2" (expand "fullset")
                                    (("2" (expand "sq")
                                      (("2"
                                        (expand "image")
                                        (("2"
                                          (case-replace
                                           "(EXISTS (x_1: ({x: T | TRUE})): x!1 = i!1(x_1) * i!1(x_1))")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "i!1(x!2)")
                                              (("1" (inst + "x!2") nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (replace 1 2)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skosimp*)
                                                (("2"
                                                  (typepred "x!2")
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (inst + "x!3")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide -1)
                (("2"
                  (case-replace
                   "nonzero_set?(LAMBDA (x: T): sq(i!1(x))) = nonzero_set?(i!1)")
                  (("2" (hide-all-but 1)
                    (("2" (apply-extensionality 1 :hide? t)
                      (("2" (expand "sq")
                        (("2" (expand "nonzero_set?")
                          (("2" (case-replace "i!1(x!1)=0")
                            (("1" (assert) nil nil)
                             ("2" (assert)
                              (("2" (expand "/=")
                                (("2" (rewrite "sq_eq_0" 1 :dir rl)
                                  (("2" (expand "sq") (("2" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (simple? const-decl "bool" measure_space nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (prod_measurable judgement-tcc nil measure_space nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (sq const-decl "nonneg_real" sq reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (finite_image judgement-tcc nil function_image_aux nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (TRUE const-decl "bool" booleans nil)
    (x!2 skolem-const-decl "({x: T | TRUE})" isf nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (fullset const-decl "set" sets nil) (i!1 skolem-const-decl "isf" isf nil)
    (image const-decl "set[R]" function_image nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (sq_eq_0 formula-decl nil sq reals) (/= const-decl "boolean" notequal nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (int_times_even_is_even application-judgement "even_int" integers nil)
    (sq const-decl "[T -> nnreal]" real_fun_ops_aux reals))
   nil (isf_sq subtype "real_fun_ops_aux[isf.T].sq(isf.i)" "isf")))
 (isf_prod 0
  (isf_prod-1 nil 3390785367
   ("" (skosimp)
    (("" (lemma "isf_add" ("i1" "i1!1" "i2" "i2!1"))
      (("" (lemma "isf_diff" ("i1" "i1!1" "i2" "i2!1"))
        (("" (lemma "isf_sq" ("i" "(+[T])(i1!1, i2!1)"))
          (("" (lemma "isf_sq" ("i" "(-[T])(i1!1, i2!1)"))
            ((""
              (lemma "isf_diff"
               ("i1" "sq[T]((+[T])(i1!1, i2!1))" "i2"
                "sq[T]((-[T])(i1!1, i2!1))"))
              ((""
                (lemma "isf_scal"
                 ("c" "1/4" "i"
                  "(-[T])(sq[T]((+[T])(i1!1, i2!1)), sq[T]((-[T])(i1!1, i2!1)))"))
                ((""
                  (case-replace "*[T]
               (1 / 4,
                (-[T])
                    (sq[T]((+[T])(i1!1, i2!1)), sq[T]((-[T])(i1!1, i2!1)))) = *[T](i1!1, i2!1)")
                  (("" (hide-all-but 1)
                    (("" (apply-extensionality :hide? t)
                      (("" (expand "sq")
                        (("" (expand "*")
                          (("" (expand "-")
                            (("" (expand "+")
                              (("" (expand "sq") (("" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil) (isf_add judgement-tcc nil isf nil)
    (isf_add application-judgement "isf" isf nil)
    (isf_sq judgement-tcc nil isf nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (isf_sq application-judgement "isf" isf nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (sq const-decl "[T -> nnreal]" real_fun_ops_aux reals)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (simple_times application-judgement "simple[T, S]" isf nil)
    (isf_scal application-judgement "isf" isf nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (isf_scal judgement-tcc nil isf nil)
    (posrat_div_posrat_is_posrat application-judgement "posrat" rationals nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (isf_diff application-judgement "isf" isf nil)
    (isf_diff judgement-tcc nil isf nil))
   nil (isf_prod subtype "real_fun_ops[isf.T].*(isf.i1, isf.i2)" "isf")))
 (isf_phi 0
  (isf_phi-1 nil 3390785367
   ("" (skosimp)
    (("" (expand "isf?")
      (("" (typepred "E!1")
        (("" (expand "measurable_set?")
          (("" (rewrite "nonzero_set_phi")
            (("" (assert)
              (("" (lemma "phi_is_simple") (("" (inst - "E!1") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf? const-decl "bool" isf nil)
    (phi_is_simple judgement-tcc nil measure_space nil)
    (nonzero_set_phi formula-decl nil isf nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil isf nil) (set type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil))
   nil (isf_phi subtype "measure_space[isf.T, isf.S].phi(isf.E)" "isf")))
 (isf_expt 0
  (isf_expt-1 nil 3409636311
   ("" (skolem + ("i!1" "_"))
    (("" (induct "pn")
      (("1" (assert) nil nil) ("2" (assert) nil nil)
       ("3" (skosimp)
        (("3" (case-replace "j!1=0")
          (("1" (expand "expt" 1)
            (("1" (expand "expt" 1)
              (("1" (expand "expt" 1)
                (("1" (typepred "i!1") (("1" (rewrite "eta") nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (assert)
            (("2" (expand "expt")
              (("2" (expand "expt" 2)
                (("2"
                  (lemma "isf_prod"
                   ("i1" "i!1" "i2" "LAMBDA (x: T): expt(i!1(x), j!1)"))
                  (("1" (expand "*") (("1" (propax) nil nil)) nil)
                   ("2" (propax) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (> const-decl "bool" reals nil) (T formal-type-decl nil isf nil)
    (isf? const-decl "bool" isf nil)
    (expt const-decl "[T -> real]" real_fun_power power)
    (isf nonempty-type-eq-decl nil isf nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (simple_expt_nat application-judgement "simple[T, S]" isf nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (expt def-decl "real" exponentiation nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (eta formula-decl nil functions nil) (isf_prod judgement-tcc nil isf nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil))
   nil (isf_expt subtype "real_fun_power[isf.T].expt(isf.i, isf.pn)" "isf")))
 (isf_times_simple_is_isf 0
  (isf_times_simple_is_isf-1 nil 3390785367
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (typepred "h!1")
        (("" (expand "isf?")
          (("" (flatten)
            (("" (hide -1 -2)
              ((""
                (case "subset?(nonzero_set?(*[T](i!1, h!1)),nonzero_set?(i!1))")
                (("1"
                  (lemma "m_monotone"
                   ("a" "nonzero_set?(*[T](i!1, h!1))" "b"
                    "nonzero_set?(i!1)"))
                  (("1" (assert)
                    (("1" (expand "mu_fin?")
                      (("1" (expand "x_le")
                        (("1" (replace -3) (("1" (flatten) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (simple_times application-judgement "simple[T, S]" isf nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (/= const-decl "boolean" notequal nil) (member const-decl "bool" sets nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (m_monotone formula-decl nil measure_props nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (set type-eq-decl nil sets nil) (subset? const-decl "bool" sets nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (simple? const-decl "bool" measure_space nil)
    (simple nonempty-type-eq-decl nil measure_space nil))
   nil
   (isf_times_simple_is_isf subtype "real_fun_ops[isf.T].*(isf.i, isf.h)"
    "isf")))
 (isf_induction 0
  (isf_induction-1 nil 3390968503
   (""
    (case "FORALL (P: pred[isf], i1: isf, n:nat): card[real](image[T,real](i1,nonzero_set?(i1)))=n =>
        (P(lambda x: 0) AND
          (FORALL c, E, i: P(i) IMPLIES P(c * phi(E) + i)))
         IMPLIES P(i1)")
    (("1" (skosimp)
      (("1"
        (inst - "P!1" "i1!1"
         "card[real](image[T,real](i1!1,nonzero_set?(i1!1)))")
        (("1" (assert) nil nil)
         ("2" (typepred "i1!1")
          (("2" (expand "isf?")
            (("2" (expand "simple?")
              (("2" (flatten)
                (("2"
                  (lemma "finite_subset[real]"
                   ("s" "image[T, real](i1!1, nonzero_set?(i1!1))" "A"
                    "image(i1!1, fullset[T])"))
                  (("1" (split -1)
                    (("1" (propax) nil nil)
                     ("2" (hide-all-but 1)
                      (("2" (expand "nonzero_set?")
                        (("2" (expand "fullset")
                          (("2" (expand "image")
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (skosimp*)
                                  (("2" (typepred "x!2")
                                    (("2" (inst + "x!2") nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "n")
        (("1" (skosimp*)
          (("1" (rewrite "card_empty?[real]")
            (("1" (case "empty?(nonzero_set?(i1!1))")
              (("1" (case-replace "i1!1=lambda x: 0")
                (("1" (apply-extensionality 1 :hide? t)
                  (("1" (expand "empty?")
                    (("1" (inst - "x!1")
                      (("1" (expand "nonzero_set?")
                        (("1" (expand "member") (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "empty?")
                (("2" (skosimp)
                  (("2" (expand "member")
                    (("2" (inst - "i1!1(x!1)")
                      (("2" (expand "nonzero_set?")
                        (("2" (expand "image") (("2" (inst + "x!1") nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp*)
          (("2" (inst - "P!1" "_")
            (("2" (replace -3)
              (("2" (replace -4 -1)
                (("2"
                  (lemma "nonempty_card[real]"
                   ("S" "image[T, real](i1!1, nonzero_set?(i1!1))"))
                  (("2" (assert)
                    (("2"
                      (lemma "choose_rest[real]"
                       ("a" "image[T, real](i1!1, nonzero_set?(i1!1))"))
                      (("2"
                        (lemma "choose_member[real]"
                         ("a" "image[T, real](i1!1, nonzero_set?(i1!1))"))
                        (("2"
                          (name-replace "CC"
                           "choose[real](image[T, real](i1!1, nonzero_set?(i1!1)))")
                          (("2" (expand "nonempty?")
                            (("2" (replace 1 *)
                              (("2" (expand "member" -1)
                                (("2" (copy -1)
                                  (("2" (expand "nonzero_set?" -1)
                                    (("2" (expand "image" -1)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (typepred "x!1")
                                          (("2"
                                            (replace -2 -1 rl)
                                            (("2"
                                              (hide -2)
                                              (("2"
                                                (name
                                                 "EE"
                                                 "inverse_image[T,real](i1!1,singleton[real](CC))")
                                                (("2"
                                                  (typepred "i1!1")
                                                  (("2"
                                                    (expand "isf?")
                                                    (("2"
                                                      (expand "simple?")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "measurable_function?")
                                                          (("2"
                                                            (lemma
                                                             "singleton_is_borel[real,metric_induced_topology]"
                                                             ("x" "CC"))
                                                            (("2"
                                                              (inst
                                                               -
                                                               "singleton[real](CC)")
                                                              (("2"
                                                                (replace -5)
                                                                (("2"
                                                                  (lemma
                                                                   "card_rest[real]"
                                                                   ("S"
                                                                    "image[T, real](i1!1, nonzero_set?(i1!1))"))
                                                                  (("2"
                                                                    (replace
                                                                     -10)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (name
                                                                         "EEC"
                                                                         "difference(nonzero_set?(i1!1),EE)")
                                                                        (("2"
                                                                          (case
                                                                           "measurable_set?(EEC)")
                                                                          (("1"
                                                                            (case
                                                                             "subset?(EE,nonzero_set?(i1!1))")
                                                                            (("1"
                                                                              (case
                                                                               "mu_fin?(EE)")
                                                                              (("1"
                                                                                (case
                                                                                 "mu_fin?(EEC)")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "isf_phi"
                                                                                   ("E"
                                                                                    "EE"))
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "isf_phi"
                                                                                     ("E"
                                                                                      "EEC"))
                                                                                    (("1"
                                                                                      (lemma
                                                                                       "isf_prod"
                                                                                       ("i1"
                                                                                        "phi(EEC)"
                                                                                        "i2"
                                                                                        "i1!1"))
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "isf_scal"
                                                                                         ("c"
                                                                                          "CC"
                                                                                          "i"
                                                                                          "phi(EE)"))
                                                                                        (("1"
                                                                                          (lemma
                                                                                           "isf_add"
                                                                                           ("i1"
                                                                                            "*[T](CC, phi(EE))"
                                                                                            "i2"
                                                                                            "*[T](phi(EEC), i1!1)"))
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "extensionality"
                                                                                             ("f"
                                                                                              "i1!1"
                                                                                              "g"
                                                                                              "(+[T])(*[T](CC, phi(EE)), *[T](phi(EEC), i1!1))"))
                                                                                            (("1"
                                                                                              (expand
                                                                                               "phi"
                                                                                               -1
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "phi"
                                                                                                 -1
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "+"
                                                                                                   -1
                                                                                                   1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "*"
                                                                                                     -1
                                                                                                     1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "*"
                                                                                                       -1
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "member")
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -20
                                                                                                             "*[T](phi(EEC), i1!1)")
                                                                                                            (("1"
                                                                                                              (split
                                                                                                               -20)
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -23
                                                                                                                 "CC"
                                                                                                                 "EE"
                                                                                                                 "*[T](phi(EEC), i1!1)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (case-replace
                                                                                                                 "image[T, real]
               (*[T](phi(EEC), i1!1), nonzero_set?(*[T](phi(EEC), i1!1))) = rest[real](image[T, real](i1!1, nonzero_set?(i1!1)))")
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   2
                                                                                                                   5
                                                                                                                   -21
                                                                                                                   -22)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "rest"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (reveal
                                                                                                                       -6)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality
                                                                                                                           1
                                                                                                                           :hide?
                                                                                                                           t)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "remove")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "EEC")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "phi")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "*"
                                                                                                                                   1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "difference")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "nonzero_set?")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "image")
                                                                                                                                          (("2"
                                                                                                                                            (case-replace
                                                                                                                                             "x!2=CC")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (skosimp*)
                                                                                                                                                (("1"
                                                                                                                                                  (typepred
                                                                                                                                                   "x!3")
                                                                                                                                                  (("1"
                                                                                                                                                    (case-replace
                                                                                                                                                     "i1!1(x!3)=0")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (case-replace
                                                                                                                                                         "EE(x!3)")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "EE")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "singleton")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "inverse_image")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "member")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (case-replace
                                                                                                                                                 "EXISTS (x_1: ({x | i1!1(x) /= 0})): x!2 = i1!1(x_1)")
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -3
                                                                                                                                                   -4
                                                                                                                                                   -5-6
                                                                                                                                                   -7
                                                                                                                                                   -8
                                                                                                                                                   -9
                                                                                                                                                   -10
                                                                                                                                                   -20
                                                                                                                                                   -21)
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "x!3")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "x!3")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (case-replace
                                                                                                                                                             "EE(x!3)")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "EE")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "singleton")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "inverse_image")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "member")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (expand
                                                                                                                                                           "EE")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "singleton")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "inverse_image")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "member")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replace
                                                                                                                                                   1
                                                                                                                                                   3)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (hide
                                                                                                                                                       -3
                                                                                                                                                       -4
                                                                                                                                                       -5
                                                                                                                                                       -6
                                                                                                                                                       -7
                                                                                                                                                       -8
                                                                                                                                                       -9
                                                                                                                                                       -10
                                                                                                                                                       -13
                                                                                                                                                       -14
                                                                                                                                                       -15
                                                                                                                                                       -17
                                                                                                                                                       -21
                                                                                                                                                       -22)
                                                                                                                                                      (("2"
                                                                                                                                                        (skosimp*)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           -2
                                                                                                                                                           -8)
                                                                                                                                                          (("2"
                                                                                                                                                            (case-replace
                                                                                                                                                             "EE(x!3)")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "EE")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "singleton")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "inverse_image")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "member")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "x!3")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "EE")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (expand
                                                                                                                                                                             "singleton")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "inverse_image")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "member")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "EE")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "singleton")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "inverse_image")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "member")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "x!3")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "EE")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (case-replace
                                                                                                                                                                               "i1!1(x!3)=0")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil)
                                                                                                                                                                               ("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "x!3")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (skosimp)
                                                                                                            (("2"
                                                                                                              (case-replace
                                                                                                               "EE(x!2)")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "EEC")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "nonzero_set?")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "difference")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (hide-all-but
                                                                                                                           (-1
                                                                                                                            1
                                                                                                                            2))
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "EE")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "singleton")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "inverse_image")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("1"
                                                                                                                                    (propax)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "EEC")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "nonzero_set?")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "difference")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (case-replace
                                                                                                                           "i1!1(x!2) = 0")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (lemma
                                                                                   "m_monotone"
                                                                                   ("a"
                                                                                    "EEC"
                                                                                    "b"
                                                                                    "nonzero_set?(i1!1)"))
                                                                                  (("2"
                                                                                    (split
                                                                                     -1)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "x_le")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "mu_fin?")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (expand
                                                                                       "EEC")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "difference_subset")
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (lemma
                                                                                 "m_monotone"
                                                                                 ("a"
                                                                                  "EE"
                                                                                  "b"
                                                                                  "nonzero_set?(i1!1)"))
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "x_le")
                                                                                    (("2"
                                                                                      (expand
                                                                                       "mu_fin?")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide-all-but
                                                                               (1
                                                                                -8
                                                                                2))
                                                                              (("2"
                                                                                (expand
                                                                                 "nonzero_set?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "EE")
                                                                                  (("2"
                                                                                    (hide
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "singleton")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "inverse_image")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "subset?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member")
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide-all-but
                                                                             (-4
                                                                              -5
                                                                              -6
                                                                              1
                                                                              -1))
                                                                            (("2"
                                                                              (lemma
                                                                               "nonzero_measurable"
                                                                               ("g"
                                                                                "i1!1"))
                                                                              (("2"
                                                                                (expand
                                                                                 "measurable_set?")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "sigma_algebra_difference"
                                                                                   ("x"
                                                                                    "nonzero_set?(i1!1)"
                                                                                    "y"
                                                                                    "EE"))
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil)
                                                                                   ("3"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (skosimp) (("3" (rewrite "isf_zero") nil nil)) nil)
         ("4" (skosimp*)
          (("4" (typepred "i1!1")
            (("4" (expand "isf?")
              (("4" (expand "simple?")
                (("4" (flatten)
                  (("4"
                    (lemma "finite_subset[real]"
                     ("s" "image[T, real](i1!1, nonzero_set?(i1!1))" "A"
                      "image(i1!1, fullset[T])"))
                    (("1" (split -1)
                      (("1" (propax) nil nil)
                       ("2" (hide-all-but 1)
                        (("2" (expand "fullset")
                          (("2" (expand "nonzero_set?")
                            (("2" (expand "image")
                              (("2" (expand "subset?")
                                (("2" (expand "member")
                                  (("2" (skosimp*)
                                    (("2" (inst + "x!2") nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (propax) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide 2) (("3" (skosimp) (("3" (rewrite "isf_zero") nil nil)) nil))
      nil)
     ("4" (hide 2)
      (("4" (skosimp)
        (("4" (typepred "i1!1")
          (("4" (expand "isf?")
            (("4" (expand "simple?")
              (("4" (flatten)
                (("4"
                  (lemma "finite_subset[real]"
                   ("s" "image[T, real](i1!1, nonzero_set?(i1!1))" "A"
                    "image(i1!1, fullset[T])"))
                  (("1" (split -1)
                    (("1" (propax) nil nil)
                     ("2" (hide-all-but 1)
                      (("2" (expand "fullset")
                        (("2" (expand "nonzero_set?")
                          (("2" (expand "image")
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (skosimp*)
                                  (("2" (inst + "x!2") nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf_zero formula-decl nil isf nil)
    (nonempty_card formula-decl nil finite_sets nil)
    (choose_rest formula-decl nil sets_lemmas nil)
    (choose const-decl "(p)" sets nil) (nonempty? const-decl "bool" sets nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (singleton_is_closed application-judgement
     "closed[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[real]" integral_def analysis)
    (singleton_is_compact application-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (borel nonempty-type-eq-decl nil borel nil)
    (borel? const-decl "sigma_algebra" borel nil)
    (card_rest formula-decl nil finite_sets nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (m_monotone formula-decl nil measure_props nil)
    (difference_subset formula-decl nil sets_lemmas nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (isf_phi judgement-tcc nil isf nil) (isf_prod judgement-tcc nil isf nil)
    (isf_add judgement-tcc nil isf nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (EE skolem-const-decl "set[T]" isf nil) (remove const-decl "set" sets nil)
    (x!3 skolem-const-decl "({x | i1!1(x) /= 0})" isf nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (int_times_even_is_even application-judgement "even_int" integers nil)
    (rest const-decl "set" sets nil) (i1!1 skolem-const-decl "isf" isf nil)
    (EEC skolem-const-decl "set[T]" isf nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (extensionality formula-decl nil functions nil)
    (isf_scal judgement-tcc nil isf nil)
    (nonzero_measurable formula-decl nil isf nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (sigma_algebra_difference formula-decl nil sigma_algebra nil)
    (difference const-decl "set" sets nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (singleton_is_borel formula-decl nil hausdorff_borel nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (choose_member formula-decl nil sets_lemmas nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (empty? const-decl "bool" sets nil) (x!1 skolem-const-decl "T" isf nil)
    (i1!1 skolem-const-decl "isf" isf nil)
    (card_empty? formula-decl nil finite_sets nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (simple? const-decl "bool" measure_space nil)
    (finite_subset formula-decl nil finite_sets nil)
    (fullset const-decl "set" sets nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (subset? const-decl "bool" sets nil) (TRUE const-decl "bool" booleans nil)
    (/= const-decl "boolean" notequal nil) (member const-decl "bool" sets nil)
    (i1!1 skolem-const-decl "isf" isf nil)
    (isf_phi application-judgement "isf" isf nil)
    (isf_scal application-judgement "isf" isf nil)
    (isf_add application-judgement "isf" isf nil)
    (T formal-type-decl nil isf nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (isf? const-decl "bool" isf nil) (isf nonempty-type-eq-decl nil isf nil)
    (pred type-eq-decl nil defined_types nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (image const-decl "set[R]" function_image nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (phi const-decl "nat" measure_space nil))
   shostak))
 (finite_partition_of?_TCC1 0
  (finite_partition_of?_TCC1-1 nil 3395073229
   ("" (skosimp) (("" (expand "nonempty?") (("" (propax) nil nil)) nil)) nil)
   ((nonempty? const-decl "bool" sets nil)) nil
   (finite_partition_of? subtype "isf.E" "(sets[isf.T].nonempty?)")))
 (finite_partition_of?_TCC2 0
  (finite_partition_of?_TCC2-1 nil 3395073229
   ("" (skosimp*)
    (("" (expand "measurable_set?") (("" (propax) nil nil)) nil)) nil)
   ((measurable_set? const-decl "bool" measure_space_def nil)) nil
   (finite_partition_of? subtype "isf.E" "measurable_set[T, S]")))
 (isf_def 0
  (isf_def-2 "" 3789903956
   ("" (skosimp)
    (("" (expand "isf?")
      (("" (split)
        (("1" (flatten)
          (("1" (rewrite "simple_def2")
            (("1" (skosimp)
              (("1" (inst + "P!1")
                (("1" (expand "finite_partition_of?")
                  (("1" (skosimp)
                    (("1" (typepred "E!1")
                      (("1" (expand "every")
                        (("1" (inst - "E!1")
                          (("1" (inst - "E!1")
                            (("1" (replace -2)
                              (("1" (replace -3)
                                (("1" (flatten)
                                  (("1"
                                    (lemma "m_monotone"
                                     ("a" "E!1" "b" "nonzero_set?(f!1)"))
                                    (("1" (split -1)
                                      (("1"
                                        (expand "mu_fin?")
                                        (("1"
                                          (expand "x_le")
                                          (("1"
                                            (replace -5)
                                            (("1"
                                              (replace 3)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "subset?")
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (expand "nonzero_set?")
                                              (("2"
                                                (expand "constant_over?")
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst-cp - "choose(E!1)")
                                                    (("2"
                                                      (inst - "x!1")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp*)
          (("2" (typepred "p!1")
            (("2" (case-replace "simple?(f!1)")
              (("1" (expand "finite_partition_of?")
                (("1"
                  (name "PP"
                        "{x: set[T] | S(x)& p!1(x) & nonempty?(x) & f!1(choose(x)) /= 0}")
                  (("1"
                    (case "forall (x:(PP)): S(x) & p!1(x)& nonempty?(x) & f!1(choose(x)) /= 0")
                    (("1" (hide -2)
                      (("1"
                        (case "forall (p:setofsets[T],n:nat): subset?(p,PP) & card(p) = n => mu_fin?(Union(p))")
                        (("1" (inst - "PP" "card(PP)")
                          (("1" (split -1)
                            (("1" (case-replace "Union(PP)=nonzero_set?(f!1)")
                              (("1" (hide -1 2)
                                (("1" (apply-extensionality :hide? t)
                                  (("1" (expand "nonzero_set?")
                                    (("1" (case-replace "f!1(x!1)=0")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "Union")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (typepred "a!1")
                                              (("1"
                                                (expand "PP")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (inst -9 "a!1")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand
                                                         "constant_over?")
                                                        (("1"
                                                          (skosimp)
                                                          (("1"
                                                            (inst-cp
                                                             -10
                                                             "x!1")
                                                            (("1"
                                                              (inst
                                                               -10
                                                               "choose(a!1)")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (expand "Union")
                                          (("2"
                                            (expand "finite_partition?")
                                            (("2"
                                              (expand "fullset")
                                              (("2"
                                                (expand "partition?")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (lemma
                                                     "extensionality_postulate"
                                                     ("f"
                                                      "Union(p!1)"
                                                      "g"
                                                      "({x: T | TRUE})"))
                                                    (("2"
                                                      (replace -1 -4 rl)
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (inst -3 "x!1")
                                                          (("2"
                                                            (expand "Union")
                                                            (("2"
                                                              (skosimp)
                                                              (("2"
                                                                (typepred
                                                                 "a!1")
                                                                (("2"
                                                                  (inst
                                                                   -7
                                                                   "a!1")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "a!1")
                                                                      (("2"
                                                                        (expand
                                                                         "PP")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case-replace
                                                                             "nonempty?(a!1)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "/=")
                                                                                (("1"
                                                                                  (expand
                                                                                   "constant_over?")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -10
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -10
                                                                                         "choose(a!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1) (("2" (grind) nil nil))
                              nil))
                            nil)
                           ("2" (expand "finite_partition?")
                            (("2" (flatten)
                              (("2"
                                (lemma "finite_subset[set[T]]"
                                 ("s" "PP" "A" "p!1"))
                                (("2" (assert)
                                  (("2" (expand "subset?")
                                    (("2" (skosimp)
                                      (("2"
                                        (expand "member")
                                        (("2"
                                          (inst - "x!1")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (induct "n")
                            (("1" (skosimp)
                              (("1" (rewrite "card_is_0[set[T]]")
                                (("1" (replace -2)
                                  (("1"
                                    (lemma "Union_empty"
                                     ("A" "emptyset[set[T]]"))
                                    (("1" (expand "emptyset" -1 2)
                                      (("1"
                                        (expand "empty?" -1 2)
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (rewrite "emptyset_is_empty?" -1)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (lemma "m_emptyset")
                                                (("1"
                                                  (expand "mu_fin?")
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skosimp*)
                              (("2"
                                (lemma "nonempty_card[set[T]]" ("S" "p!2"))
                                (("2" (assert)
                                  (("2" (expand "nonempty?")
                                    (("2"
                                      (lemma
                                       "choose_rest[set[T]]"
                                       ("a" "p!2"))
                                      (("2"
                                        (assert)
                                        (("2"
                                          (lemma
                                           "card_rest[set[T]]"
                                           ("S" "p!2"))
                                          (("2"
                                            (assert)
                                            (("2"
                                              (replace -5)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (inst - "rest(p!2)")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (split -3)
                                                      (("1"
                                                        (case-replace
                                                         "Union(p!2)=union(choose(p!2),Union(rest(p!2)))")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (expand "subset?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "choose(p!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "choose(p!2)")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "choose(p!2)")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (replace
                                                                           4)
                                                                          (("1"
                                                                            (replace
                                                                             3)
                                                                            (("1"
                                                                              (lemma
                                                                               "m_union"
                                                                               ("a"
                                                                                "choose(p!2)"
                                                                                "b"
                                                                                "Union(rest(p!2))"))
                                                                              (("1"
                                                                                (expand
                                                                                 "x_add")
                                                                                (("1"
                                                                                  (expand
                                                                                   "x_le")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "mu_fin?")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 3 -1)
                                                          (("2"
                                                            (apply-extensionality
                                                             1
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (case-replace
                                                               "Union(p!2)(x!1)")
                                                              (("1"
                                                                (expand
                                                                 "union")
                                                                (("1"
                                                                  (expand
                                                                   "member")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "Union")
                                                                      (("1"
                                                                        (skosimp)
                                                                        (("1"
                                                                          (typepred
                                                                           "a!1")
                                                                          (("1"
                                                                            (replace
                                                                             -4
                                                                             -1
                                                                             rl)
                                                                            (("1"
                                                                              (expand
                                                                               "add")
                                                                              (("1"
                                                                                (expand
                                                                                 "member")
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (inst
                                                                                     +
                                                                                     "a!1")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (replace 1 2)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "union")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (expand
                                                                         "Union")
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "choose(p!2)")
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "a!1")
                                                                              (("2"
                                                                                (typepred
                                                                                 "a!1")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "rest_subset"
                                                                                   ("a"
                                                                                    "p!2"))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "a!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "subset?")
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (expand "member")
                                                            (("2"
                                                              (lemma
                                                               "rest_subset"
                                                               ("a" "p!2"))
                                                              (("2"
                                                                (expand
                                                                 "subset?")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (skosimp)
                              (("3" (hide 2)
                                (("3" (rewrite "measurable_Union")
                                  (("3" (split)
                                    (("1" (skosimp)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (inst - "x!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst - "x!1")
                                              (("1" (flatten) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide 2)
                                      (("2"
                                        (lemma
                                         "finite_countable[set[T]]"
                                         ("x" "p!2"))
                                        (("2"
                                          (expand "is_countable")
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("4" (skosimp)
                              (("4"
                                (lemma "finite_subset[set[T]]"
                                 ("s" "p!2" "A" "p!1"))
                                (("4" (assert)
                                  (("4" (expand "subset?")
                                    (("4" (skosimp)
                                      (("4"
                                        (expand "member")
                                        (("4"
                                          (inst - "x!1")
                                          (("4"
                                            (assert)
                                            (("4"
                                              (inst - "x!1")
                                              (("4" (flatten) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (skosimp)
                          (("3" (lemma "measurable_Union" ("M" "p!2"))
                            (("1" (expand "restrict")
                              (("1" (expand "Union")
                                (("1"
                                  (case-replace
                                   "{x: T | EXISTS (a: (LAMBDA (s: (S)): p!2(s))): a(x)}={x: T | EXISTS (a: (p!2)): a(x)}")
                                  (("1" (hide -1 2 3)
                                    (("1" (apply-extensionality 1 :hide? t)
                                      (("1"
                                        (case-replace
                                         "EXISTS (a: (p!2)): a(x!1)")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (inst + "a!1")
                                            (("1"
                                              (typepred "a!1")
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (inst - "a!1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst - "a!1")
                                                      (("1"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace 1 2)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (typepred "a!1")
                                                (("2" (inst + "a!1") nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2 3)
                              (("2" (expand "finite_partition?")
                                (("2" (flatten)
                                  (("2" (expand "restrict")
                                    (("2" (case "is_countable[set[T]](p!2)")
                                      (("1"
                                        (expand "is_countable")
                                        (("1"
                                          (skosimp)
                                          (("1" (inst + "f!2") nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (lemma
                                           "finite_countable[set[T]]"
                                           ("x" "p!2"))
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (skosimp)
                          (("4" (hide 2)
                            (("4" (expand "finite_partition?")
                              (("4" (flatten)
                                (("4"
                                  (lemma "finite_subset[set[T]]"
                                   ("s" "p!2" "A" "p!1"))
                                  (("4" (split -1)
                                    (("1" (propax) nil nil)
                                     ("2" (hide 2)
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (inst - "x!1")
                                              (("2"
                                                (inst - "x!1")
                                                (("1" (assert) nil nil)
                                                 ("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skosimp)
                      (("2" (typepred "x!1")
                        (("2" (expand "PP") (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (rewrite "simple_def2")
                  (("2" (inst + "p!1")
                    (("2" (expand "finite_partition_of?")
                      (("2" (split)
                        (("1" (expand "every")
                          (("1" (skosimp)
                            (("1" (inst - "x!1") (("1" (flatten) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "every")
                          (("2" (skosimp)
                            (("2" (inst - "x!1") (("2" (flatten) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf? const-decl "bool" isf nil)
    (simple? const-decl "bool" measure_space nil)
    (/= const-decl "boolean" notequal nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (x!1 skolem-const-decl "set[T]" isf nil)
    (injective? const-decl "bool" functions nil)
    (restrict_of_inj_is_inj application-judgement "(injective?[S, R])"
     restrict nil)
    (a!1 skolem-const-decl "(p!2)" isf nil)
    (p!2 skolem-const-decl "setofsets[T]" isf nil)
    (restrict const-decl "R" restrict nil)
    (countable_set nonempty-type-eq-decl nil countability sets_aux)
    (is_countable const-decl "bool" countability sets_aux)
    (measurable_Union judgement-tcc nil measure_space_def nil)
    (finite_countable judgement-tcc nil countable_props sets_aux)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (choose_rest formula-decl nil sets_lemmas nil)
    (card_rest formula-decl nil finite_sets nil)
    (rest const-decl "set" sets nil) (add const-decl "(nonempty?)" sets nil)
    (a!1 skolem-const-decl "(p!2)" isf nil)
    (a!1 skolem-const-decl "(rest(p!2))" isf nil)
    (rest_subset formula-decl nil sets_lemmas nil)
    (p!2 skolem-const-decl "setofsets[T]" isf nil)
    (m_union formula-decl nil measure_props nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (x_add const-decl "extended_nnreal" extended_nnreal extended_nnreal)
    (union const-decl "set" sets nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nonempty_card formula-decl nil finite_sets nil)
    (m_emptyset formula-decl nil measure_props nil)
    (null_emptyset name-judgement "null_set" isf nil)
    (subset_algebra_emptyset name-judgement "(S)" isf nil)
    (emptyset_is_empty? formula-decl nil sets_lemmas nil)
    (emptyset const-decl "set" sets nil)
    (Union_empty formula-decl nil sets_lemmas nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set[T]" countable_props sets_aux)
    (finite_emptyset name-judgement "finite_set[finite_set[T]]"
     countable_setofsets sets_aux)
    (finite_emptyset name-judgement "finite_set[set[T]]" countable_setofsets
     sets_aux)
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     sets_aux)
    (card_is_0 formula-decl nil finite_sets nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (PP skolem-const-decl "[set[T] -> boolean]" isf nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (Union_surjective name-judgement "(surjective?[setofsets[T], set[T]])"
     sets_lemmas nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (x!1 skolem-const-decl "T" isf nil) (a!1 skolem-const-decl "(PP)" isf nil)
    (p!1 skolem-const-decl "(finite_partition_of?(f!1))" isf nil)
    (a!1 skolem-const-decl "(p!1)" isf nil)
    (empty? const-decl "bool" sets nil) (TRUE const-decl "bool" booleans nil)
    (extensionality_postulate formula-decl nil functions nil)
    (partition? const-decl "bool" partitions nil)
    (x!1 skolem-const-decl "set[T]" isf nil)
    (finite_subset formula-decl nil finite_sets nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Union const-decl "set" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (mu_fin? const-decl "bool" measure_props nil)
    (E!1 skolem-const-decl "(P!1)" isf nil)
    (x!1 skolem-const-decl "T" isf nil) (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (constant_over? const-decl "bool" measure_space nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (m_monotone formula-decl nil measure_props nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (every const-decl "bool" sets nil)
    (f!1 skolem-const-decl "[T -> real]" isf nil)
    (P!1 skolem-const-decl "finite_partition[T]" isf nil)
    (finite_partition_of? const-decl "bool" isf nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (set type-eq-decl nil sets nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (simple_def2 formula-decl nil measure_space nil))
   shostak)
  (isf_def-1 nil 3395074092
   ("" (skosimp)
    (("" (expand "isf?")
      (("" (split)
        (("1" (flatten)
          (("1" (rewrite "simple_def2")
            (("1" (skosimp)
              (("1" (inst + "P!1")
                (("1" (expand "finite_partition_of?")
                  (("1" (skosimp)
                    (("1" (typepred "E!1")
                      (("1" (expand "every")
                        (("1" (inst - "E!1")
                          (("1" (inst - "E!1")
                            (("1" (replace -2)
                              (("1" (replace -3)
                                (("1" (flatten)
                                  (("1"
                                    (lemma "m_monotone"
                                     ("a" "E!1" "b" "nonzero_set?(f!1)"))
                                    (("1" (split -1)
                                      (("1"
                                        (expand "mu_fin?")
                                        (("1"
                                          (expand "x_le")
                                          (("1"
                                            (replace -5)
                                            (("1"
                                              (replace 3)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "subset?")
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (expand "nonzero_set?")
                                              (("2"
                                                (expand "constant_over?")
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst-cp - "choose(E!1)")
                                                    (("2"
                                                      (inst - "x!1")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skosimp*)
          (("2" (typepred "p!1")
            (("2" (case-replace "simple?(f!1)")
              (("1" (expand "finite_partition_of?")
                (("1"
                  (name "PP"
                        "{x: set[T] | S(x)& p!1(x) & nonempty?(x) & f!1(choose(x)) /= 0}")
                  (("1"
                    (case "forall (x:(PP)): S(x) & p!1(x)& nonempty?(x) & f!1(choose(x)) /= 0")
                    (("1" (hide -2)
                      (("1"
                        (case "forall (p:setofsets[T],n:nat): subset?(p,PP) & card(p) = n => mu_fin?(Union(p))")
                        (("1" (inst - "PP" "card(PP)")
                          (("1" (split -1)
                            (("1" (case-replace "Union(PP)=nonzero_set?(f!1)")
                              (("1" (hide -1 2)
                                (("1" (apply-extensionality :hide? t)
                                  (("1" (expand "nonzero_set?")
                                    (("1" (case-replace "f!1(x!1)=0")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "Union")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (typepred "a!1")
                                              (("1"
                                                (expand "PP")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (inst -9 "a!1")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand
                                                         "constant_over?")
                                                        (("1"
                                                          (skosimp)
                                                          (("1"
                                                            (inst-cp
                                                             -10
                                                             "x!1")
                                                            (("1"
                                                              (inst
                                                               -10
                                                               "choose(a!1)")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (expand "Union")
                                          (("2"
                                            (expand "finite_partition?")
                                            (("2"
                                              (expand "fullset")
                                              (("2"
                                                (expand "partition?")
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (lemma
                                                     "extensionality_postulate"
                                                     ("f"
                                                      "Union(p!1)"
                                                      "g"
                                                      "({x: T | TRUE})"))
                                                    (("2"
                                                      (replace -1 -4 rl)
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (inst -3 "x!1")
                                                          (("2"
                                                            (expand "Union")
                                                            (("2"
                                                              (skosimp)
                                                              (("2"
                                                                (typepred
                                                                 "a!1")
                                                                (("2"
                                                                  (inst
                                                                   -7
                                                                   "a!1")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst
                                                                       +
                                                                       "a!1")
                                                                      (("2"
                                                                        (expand
                                                                         "PP")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (case-replace
                                                                             "nonempty?(a!1)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (expand
                                                                                 "/=")
                                                                                (("1"
                                                                                  (expand
                                                                                   "constant_over?")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -10
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -10
                                                                                         "choose(a!1)")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "nonempty?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "empty?")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1) (("2" (grind) nil nil))
                              nil))
                            nil)
                           ("2" (expand "finite_partition?")
                            (("2" (flatten)
                              (("2"
                                (lemma "finite_subset[set[T]]"
                                 ("s" "PP" "A" "p!1"))
                                (("1" (assert)
                                  (("1" (expand "subset?")
                                    (("1" (skosimp)
                                      (("1"
                                        (expand "member")
                                        (("1"
                                          (inst - "x!1")
                                          (("1" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2" (induct "n")
                            (("1" (skosimp)
                              (("1" (rewrite "card_is_0[set[T]]")
                                (("1" (replace -2)
                                  (("1"
                                    (lemma "Union_empty"
                                     ("A" "emptyset[set[T]]"))
                                    (("1" (expand "emptyset" -1 2)
                                      (("1"
                                        (expand "empty?" -1 2)
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (rewrite "emptyset_is_empty?" -1)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (lemma "m_emptyset")
                                                (("1"
                                                  (expand "mu_fin?")
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (skosimp*)
                              (("2"
                                (lemma "nonempty_card[set[T]]" ("S" "p!2"))
                                (("2" (assert)
                                  (("2" (expand "nonempty?")
                                    (("2"
                                      (lemma
                                       "choose_rest[set[T]]"
                                       ("a" "p!2"))
                                      (("2"
                                        (assert)
                                        (("2"
                                          (lemma
                                           "card_rest[set[T]]"
                                           ("S" "p!2"))
                                          (("2"
                                            (assert)
                                            (("2"
                                              (replace -5)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (inst - "rest(p!2)")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (split -3)
                                                      (("1"
                                                        (case-replace
                                                         "Union(p!2)=union(choose(p!2),Union(rest(p!2)))")
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (expand "subset?")
                                                            (("1"
                                                              (inst
                                                               -
                                                               "choose(p!2)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "choose(p!2)")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "choose(p!2)")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (replace
                                                                           4)
                                                                          (("1"
                                                                            (replace
                                                                             3)
                                                                            (("1"
                                                                              (lemma
                                                                               "m_union"
                                                                               ("a"
                                                                                "choose(p!2)"
                                                                                "b"
                                                                                "Union(rest(p!2))"))
                                                                              (("1"
                                                                                (expand
                                                                                 "x_add")
                                                                                (("1"
                                                                                  (expand
                                                                                   "x_le")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "mu_fin?")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide 3 -1)
                                                          (("2"
                                                            (apply-extensionality
                                                             1
                                                             :hide?
                                                             t)
                                                            (("2"
                                                              (case-replace
                                                               "Union(p!2)(x!1)")
                                                              (("1"
                                                                (expand
                                                                 "union")
                                                                (("1"
                                                                  (expand
                                                                   "member")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (expand
                                                                       "Union")
                                                                      (("1"
                                                                        (skosimp)
                                                                        (("1"
                                                                          (typepred
                                                                           "a!1")
                                                                          (("1"
                                                                            (replace
                                                                             -4
                                                                             -1
                                                                             rl)
                                                                            (("1"
                                                                              (expand
                                                                               "add")
                                                                              (("1"
                                                                                (expand
                                                                                 "member")
                                                                                (("1"
                                                                                  (split
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (inst
                                                                                     +
                                                                                     "a!1")
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (replace 1 2)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "union")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (expand
                                                                         "Union")
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (inst
                                                                             +
                                                                             "choose(p!2)")
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (inst
                                                                               +
                                                                               "a!1")
                                                                              (("2"
                                                                                (typepred
                                                                                 "a!1")
                                                                                (("2"
                                                                                  (lemma
                                                                                   "rest_subset"
                                                                                   ("a"
                                                                                    "p!2"))
                                                                                  (("2"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "a!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "subset?")
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (expand "member")
                                                            (("2"
                                                              (lemma
                                                               "rest_subset"
                                                               ("a" "p!2"))
                                                              (("2"
                                                                (expand
                                                                 "subset?")
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (skosimp)
                              (("3" (hide 2)
                                (("3" (rewrite "measurable_Union")
                                  (("3" (split)
                                    (("1" (skosimp)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (inst - "x!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst - "x!1")
                                              (("1" (flatten) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide 2)
                                      (("2"
                                        (lemma
                                         "finite_countable[set[T]]"
                                         ("x" "p!2"))
                                        (("2"
                                          (expand "is_countable")
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("4" (skosimp)
                              (("4"
                                (lemma "finite_subset[set[T]]"
                                 ("s" "p!2" "A" "p!1"))
                                (("1" (assert)
                                  (("1" (expand "subset?")
                                    (("1" (skosimp)
                                      (("1"
                                        (expand "member")
                                        (("1"
                                          (inst - "x!1")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst - "x!1")
                                              (("1" (flatten) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (expand "finite_partition?")
                                  (("2" (flatten) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("3" (skosimp)
                          (("3" (lemma "measurable_Union" ("M" "p!2"))
                            (("1" (expand "restrict")
                              (("1" (expand "Union")
                                (("1"
                                  (case-replace
                                   "{x: T | EXISTS (a: (LAMBDA (s: (S)): p!2(s))): a(x)}={x: T | EXISTS (a: (p!2)): a(x)}")
                                  (("1" (hide -1 2 3)
                                    (("1" (apply-extensionality 1 :hide? t)
                                      (("1"
                                        (case-replace
                                         "EXISTS (a: (p!2)): a(x!1)")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (inst + "a!1")
                                            (("1"
                                              (typepred "a!1")
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (inst - "a!1")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst - "a!1")
                                                      (("1"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace 1 2)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (typepred "a!1")
                                                (("2" (inst + "a!1") nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2 3)
                              (("2" (expand "finite_partition?")
                                (("2" (flatten)
                                  (("2" (expand "restrict")
                                    (("2" (case "is_countable[set[T]](p!2)")
                                      (("1"
                                        (expand "is_countable")
                                        (("1"
                                          (skosimp)
                                          (("1" (inst + "f!2") nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 2)
                                        (("2"
                                          (lemma
                                           "finite_countable[set[T]]"
                                           ("x" "p!2"))
                                          (("2" (propax) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (skosimp)
                          (("4" (hide 2)
                            (("4" (expand "finite_partition?")
                              (("4" (flatten)
                                (("4"
                                  (lemma "finite_subset[set[T]]"
                                   ("s" "p!2" "A" "p!1"))
                                  (("1" (split -1)
                                    (("1" (propax) nil nil)
                                     ("2" (hide 2)
                                      (("2"
                                        (expand "subset?")
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (inst - "x!1")
                                              (("2"
                                                (inst - "x!1")
                                                (("1" (assert) nil nil)
                                                 ("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (skosimp)
                      (("2" (typepred "x!1")
                        (("2" (expand "PP") (("2" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (rewrite "simple_def2")
                  (("2" (inst + "p!1")
                    (("2" (expand "finite_partition_of?")
                      (("2" (split)
                        (("1" (expand "every")
                          (("1" (skosimp)
                            (("1" (inst - "x!1") (("1" (flatten) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "every")
                          (("2" (skosimp)
                            (("2" (inst - "x!1") (("2" (flatten) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((simple? const-decl "bool" measure_space nil)
    (injective? const-decl "bool" functions nil)
    (countable_set nonempty-type-eq-decl nil countability sets_aux)
    (is_countable const-decl "bool" countability sets_aux)
    (measurable_Union judgement-tcc nil measure_space_def nil)
    (finite_countable judgement-tcc nil countable_props sets_aux)
    (card_rest formula-decl nil finite_sets nil)
    (rest const-decl "set" sets nil) (add const-decl "(nonempty?)" sets nil)
    (m_union formula-decl nil measure_props nil)
    (union const-decl "set" sets nil)
    (nonempty_card formula-decl nil finite_sets nil)
    (m_emptyset formula-decl nil measure_props nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (card_is_0 formula-decl nil finite_sets nil)
    (empty? const-decl "bool" sets nil)
    (extensionality_postulate formula-decl nil functions nil)
    (partition? const-decl "bool" partitions nil)
    (finite_subset formula-decl nil finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Union const-decl "set" sets nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (mu_fin? const-decl "bool" measure_props nil)
    (nonempty? const-decl "bool" sets nil) (choose const-decl "(p)" sets nil)
    (constant_over? const-decl "bool" measure_space nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (m_monotone formula-decl nil measure_props nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (set type-eq-decl nil sets nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (simple_def2 formula-decl nil measure_space nil))
   shostak))
 (isf_integral_TCC1 0
  (isf_integral_TCC1-1 nil 3390789911
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (expand "isf?")
        (("" (flatten)
          (("" (expand "simple?")
            (("" (flatten)
              ((""
                (lemma "finite_countable[real]"
                 ("x" "image[T, real](i!1, fullset[T])"))
                (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (finite_countable judgement-tcc nil countable_props sets_aux)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (image const-decl "set[R]" function_image nil)
    (fullset const-decl "set" sets nil)
    (simple? const-decl "bool" measure_space nil))
   nil
   (isf_integral subtype
    "function_image[isf.T, real].image(isf.i, sets[isf.T].fullset)"
    "countable_set[real]")))
 (isf_integral_TCC2 0
  (isf_integral_TCC2-1 nil 3390789911
   ("" (skosimp*)
    (("" (typepred "i!1")
      (("" (split)
        (("1" (expand "isf?")
          (("1" (flatten)
            (("1" (expand "simple?")
              (("1" (flatten)
                (("1" (expand "measurable_function?")
                  (("1"
                    (lemma "singleton_is_borel[real,metric_induced_topology]"
                     ("x" "c!1"))
                    (("1" (inst - " singleton[real](c!1)")
                      (("1" (expand "measurable_set?")
                        (("1" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "isf?")
          (("2" (flatten)
            (("2"
              (case "subset?(inverse_image[T, real](i!1, singleton[real](c!1)),nonzero_set?(i!1))")
              (("1"
                (lemma "m_monotone"
                 ("a" "inverse_image[T, real](i!1, singleton[real](c!1))" "b"
                  "nonzero_set?(i!1)"))
                (("1" (assert)
                  (("1" (expand "x_le")
                    (("1" (expand "mu_fin?")
                      (("1" (replace -4) (("1" (flatten) nil nil)) nil)) nil))
                    nil))
                  nil))
                nil)
               ("2" (hide-all-but (1 3)) (("2" (grind) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (m_monotone formula-decl nil measure_props nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (member const-decl "bool" sets nil) (/= const-decl "boolean" notequal nil)
    (simple? const-decl "bool" measure_space nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (singleton_is_closed application-judgement
     "closed[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[real]" integral_def analysis)
    (singleton_is_compact application-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil) (set type-eq-decl nil sets nil)
    (borel nonempty-type-eq-decl nil borel nil)
    (borel? const-decl "sigma_algebra" borel nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (singleton_is_borel formula-decl nil hausdorff_borel nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil) (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space))
   nil
   (isf_integral subtype
    "function_image[isf.T, real].inverse_image(isf.i, sets[real].singleton(isf.c))"
    "{m1: (isf.S) | measure_props[isf.T, isf.S, isf.m].mu_fin?(m1)}")))
 (isf_integral_TCC3 0
  (isf_integral_TCC3-1 nil 3390789911
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (expand "convergent?")
        (("" (expand "isf?")
          (("" (expand "simple?") (("" (flatten) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (simple? const-decl "bool" measure_space nil)
    (convergent? const-decl "bool" countable_convergence sigma_set))
   nil
   (isf_integral subtype
    "LAMBDA c: IF isf.c = 0 THEN 0 ELSE number_fields.*(isf.c, measure_props[isf.T, isf.S, isf.m].mu(function_image[isf.T, real].inverse_image(isf.i, sets[real].singleton(isf.c)))) ENDIF"
    "(countable_convergence[real].convergent?(function_image[isf.T, real].image(isf.i, sets[isf.T].fullset)))")))
 (isf_integral_phi_TCC1 0
  (isf_integral_phi_TCC1-1 nil 3390837470 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil isf nil) (set type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil))
   nil
   (isf_integral_phi subtype "isf.E"
    "{m1: (isf.S) | measure_props[isf.T, isf.S, isf.m].mu_fin?(m1)}")))
 (isf_integral_phi 0
  (isf_integral_phi-2 "" 3789903967
   ("" (skosimp)
    (("" (expand "isf_integral")
      (("" (case "empty?(fullset[T])")
        (("1"
          (case-replace
           "image[T, real](phi(E!1), fullset[T]) = emptyset[real]")
          (("1" (rewrite "sigma_empty")
            (("1" (typepred "E!1")
              (("1" (rewrite "extensionality_postulate" -3 :dir rl)
                (("1" (expand "emptyset")
                  (("1" (expand "fullset")
                    (("1" (expand "image")
                      (("1" (expand "phi")
                        (("1" (expand "member")
                          (("1" (expand "empty?")
                            (("1" (expand "member")
                              (("1" (case-replace "E!1=emptyset[T]")
                                (("1" (typepred "m")
                                  (("1" (expand "measure?")
                                    (("1" (flatten)
                                      (("1"
                                        (expand "emptyset")
                                        (("1"
                                          (expand "mu")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "measure_empty?")
                                              (("1"
                                                (expand "emptyset")
                                                (("1"
                                                  (replace -1)
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (apply-extensionality 1 :hide? t)
                                  (("2" (expand "emptyset")
                                    (("2" (inst -4 "1")
                                      (("2"
                                        (inst + "x!1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (skosimp)
                (("2" (expand "singleton")
                  (("2" (expand "phi")
                    (("2" (expand "inverse_image")
                      (("2" (expand "member")
                        (("2" (rewrite "extensionality_postulate" -1 :dir rl)
                          (("2" (expand "emptyset")
                            (("2" (expand "fullset")
                              (("2" (expand "image")
                                (("2" (case "empty?(E!1)")
                                  (("1" (case-replace "c!1=1")
                                    (("1" (assert)
                                      (("1"
                                        (case-replace
                                         "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = 1}=E!1")
                                        (("1"
                                          (lemma "emptyset_is_empty?[T]")
                                          (("1"
                                            (inst - "E!1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but 1)
                                          (("2"
                                            (apply-extensionality :hide? t)
                                            (("2"
                                              (lift-if)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case-replace
                                       "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = c!1}=emptyset[T]")
                                      (("1"
                                        (expand "mu_fin?")
                                        (("1"
                                          (typepred "m")
                                          (("1"
                                            (expand "measure?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "measure_empty?")
                                                  (("1"
                                                    (replace -1)
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 -3 1 2 3))
                                        (("2"
                                          (apply-extensionality 1 :hide? t)
                                          (("2"
                                            (expand "emptyset")
                                            (("2"
                                              (lift-if -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (case-replace "c!1=1")
                                    (("1"
                                      (case-replace
                                       "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = 1}=E!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (typepred "E!1")
                                          (("1"
                                            (expand "measurable_set?")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply-extensionality 1 :hide? t)
                                        (("2"
                                          (lift-if 1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case-replace
                                       "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = c!1}=emptyset[T]")
                                      (("1"
                                        (expand "mu_fin?")
                                        (("1"
                                          (typepred "m")
                                          (("1"
                                            (expand "measure?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "measure_empty?")
                                                  (("1"
                                                    (replace -1)
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply-extensionality 1 :hide? t)
                                        (("2"
                                          (expand "emptyset")
                                          (("2"
                                            (lift-if -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (apply-extensionality 1 :hide? t)
              (("2" (expand "emptyset")
                (("2" (expand "fullset")
                  (("2" (expand "image")
                    (("2" (skosimp)
                      (("2" (expand "phi")
                        (("2" (expand "member")
                          (("2" (expand "empty?")
                            (("2" (inst - "x!2") (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (case-replace "E!1=emptyset[T]")
          (("1"
            (case-replace
             "image[T, real](phi(emptyset[T]), fullset[T]) = singleton[real](0)")
            (("1" (rewrite "sigma_singleton")
              (("1" (typepred "m")
                (("1" (expand "measure?")
                  (("1" (flatten)
                    (("1" (expand "mu")
                      (("1" (assert)
                        (("1" (expand "measure_empty?")
                          (("1" (replace -1) (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 3)
                (("2" (skosimp)
                  (("2" (expand "singleton")
                    (("2" (expand "emptyset")
                      (("2" (expand "phi")
                        (("2" (expand "member")
                          (("2" (expand "inverse_image")
                            (("2" (expand "member")
                              (("2"
                                (case-replace "{x: T | 0 = c!1}=emptyset[T]")
                                (("1" (expand "mu_fin?")
                                  (("1" (typepred "m")
                                    (("1" (expand "measure?")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "measure_empty?")
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (apply-extensionality 1 :hide? t) nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide -1 3)
              (("2" (expand "singleton")
                (("2" (expand "fullset")
                  (("2" (expand "emptyset")
                    (("2" (expand "phi")
                      (("2" (expand "image")
                        (("2" (apply-extensionality 1 :hide? t)
                          (("2" (case-replace "x!1=0")
                            (("1" (expand "empty?")
                              (("1" (skosimp) (("1" (inst + "x!2") nil nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (case-replace "E!1=fullset[T]")
            (("1"
              (case-replace
               "image[T, real](phi(fullset[T]), fullset[T]) = singleton[real](1)")
              (("1" (rewrite "sigma_singleton")
                (("1" (expand "singleton" 3)
                  (("1" (expand "phi")
                    (("1" (expand "member")
                      (("1" (expand "inverse_image")
                        (("1" (expand "member")
                          (("1"
                            (case-replace
                             "{x_1: T | IF fullset[T](x_1) THEN 1 ELSE 0 ENDIF = 1}=fullset[T]")
                            (("1" (assert) nil nil)
                             ("2" (apply-extensionality 1 :hide? t)
                              (("2" (expand "fullset")
                                (("2" (propax) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 4)
                  (("2" (skosimp*)
                    (("2" (expand "singleton")
                      (("2" (expand "phi")
                        (("2" (expand "inverse_image")
                          (("2" (expand "member")
                            (("2" (expand "fullset")
                              (("2" (case-replace "1=c!1")
                                (("1" (assert) nil nil)
                                 ("2" (replace 1 3)
                                  (("2" (assert)
                                    (("2" (typepred "m")
                                      (("2"
                                        (expand "measure?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand "mu_fin?")
                                            (("2"
                                              (expand "emptyset")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (typepred "S")
                                                  (("2"
                                                    (expand "sigma_algebra?")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "subset_algebra_empty?")
                                                        (("2"
                                                          (expand "emptyset")
                                                          (("2"
                                                            (expand "member")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "measure_empty?")
                                                                  (("2"
                                                                    (expand
                                                                     "emptyset")
                                                                    (("2"
                                                                      (replace
                                                                       -4)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide-all-but (1 3))
                (("2" (expand "singleton")
                  (("2" (apply-extensionality :hide? t)
                    (("2" (case-replace "x!1=1")
                      (("1" (expand "fullset")
                        (("1" (expand "image")
                          (("1" (expand "empty?")
                            (("1" (skosimp)
                              (("1" (inst + "x!2")
                                (("1" (expand "phi") (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (expand "fullset")
                          (("2" (expand "image")
                            (("2" (expand "phi")
                              (("2" (expand "member") (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2"
              (case-replace
               "image[T, real](phi(E!1), fullset[T]) = add[real](1,singleton[real](0))")
              (("1" (hide -1)
                (("1"
                  (case "FORALL (c:real):
        NOT c = 0 IMPLIES
         measurable_set?(inverse_image[T, real](phi[T, S](E!1), singleton[real](c))) AND S(inverse_image[T, real](phi[T, S](E!1), singleton[real](c))) AND
          mu_fin?[T, S, m]
              (inverse_image[T, real](phi[T, S](E!1), singleton[real](c)))")
                  (("1" (rewrite "sigma_add" 4)
                    (("1" (expand "singleton" 4 1)
                      (("1"
                        (case-replace
                         "inverse_image[T, real](phi(E!1), singleton[real](1)) = E!1")
                        (("1" (hide -1)
                          (("1" (rewrite "sigma_singleton")
                            (("1" (assert) nil nil)
                             ("2" (skosimp)
                              (("2" (inst - "c!1")
                                (("2" (assert)
                                  (("2" (flatten) (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (apply-extensionality 1 :hide? t)
                          (("2" (expand "singleton")
                            (("2" (expand "phi")
                              (("2" (expand "inverse_image")
                                (("2" (expand "member")
                                  (("2" (lift-if 1) (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (rewrite "convergent_singleton" 1)
                      (("2" (hide-all-but (-1 1))
                        (("2" (skosimp)
                          (("2" (inst - "c!1")
                            (("2" (assert)
                              (("2" (flatten) (("2" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (skosimp)
                      (("3" (inst - "c!1")
                        (("3" (assert)
                          (("3" (flatten) (("3" (assert) nil nil)) nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 5)
                    (("2" (skosimp)
                      (("2"
                        (case-replace "inverse_image[T, real]
                          (phi[T, S](E!1), singleton[real](c!1)) = if c!1=1 then E!1 else emptyset[T] endif")
                        (("1" (hide -1)
                          (("1" (case-replace "c!1=1")
                            (("1" (assert)
                              (("1" (typepred "E!1")
                                (("1" (expand "measurable_set?")
                                  (("1" (propax) nil nil)) nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2" (expand "mu_fin?")
                                (("2" (expand "measurable_set?")
                                  (("2" (typepred "m")
                                    (("2" (expand "measure?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "measure_empty?")
                                            (("2"
                                              (replace -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 3)
                          (("2" (apply-extensionality 1 :hide? t)
                            (("2" (expand "emptyset")
                              (("2" (expand "singleton")
                                (("2" (expand "phi")
                                  (("2" (expand "inverse_image")
                                    (("2" (expand "member")
                                      (("2"
                                        (case-replace "E!1(x!1)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (case-replace "c!1=1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 5)
                (("2" (apply-extensionality 1 :hide? t)
                  (("2" (expand "singleton")
                    (("2" (expand "add")
                      (("2" (expand "fullset")
                        (("2" (expand "phi")
                          (("2" (expand "member")
                            (("2" (expand "image")
                              (("2" (case-replace "x!1=0")
                                (("1" (lemma "fullset_is_full?[T]")
                                  (("1" (inst - "E!1")
                                    (("1" (expand "fullset" -1)
                                      (("1"
                                        (replace -1 2 rl)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "full?")
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst + "x!2")
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (case-replace "x!1=1")
                                    (("1" (hide 1 3 5 -1)
                                      (("1"
                                        (rewrite
                                         "emptyset_is_empty?"
                                         2
                                         :dir
                                         rl)
                                        (("1"
                                          (expand "empty?")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "x!2")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (lift-if)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf_integral const-decl "real" isf nil)
    (FALSE const-decl "bool" booleans nil)
    (sigma_singleton formula-decl nil sigma_countable sigma_set)
    (singleton_is_closed application-judgement
     "closed[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[real]" integral_def analysis)
    (singleton_is_compact application-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[nat]" countability sets_aux)
    (nonempty_add_finite application-judgement "non_empty_finite_set[real]"
     integral_def analysis)
    (nonempty_add_finite application-judgement "non_empty_finite_set[nat]"
     countability sets_aux)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (convergent_singleton formula-decl nil countable_convergence sigma_set)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (sigma_add formula-decl nil sigma_countable sigma_set)
    (is_countable const-decl "bool" countability sets_aux)
    (countable_set nonempty-type-eq-decl nil countability sets_aux)
    (convergent? const-decl "bool" countable_convergence sigma_set)
    (fullset_is_full? formula-decl nil sets_lemmas nil)
    (full? const-decl "bool" sets nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[posreal]" metric_continuity metric_space)
    (subset_algebra_empty? const-decl "bool" subset_algebra_def nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (phi_is_simple application-judgement "simple" isf nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (image const-decl "set[R]" function_image nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (phi const-decl "nat" measure_space nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (emptyset const-decl "set" sets nil)
    (emptyset_is_empty? formula-decl nil sets_lemmas nil)
    (member const-decl "bool" sets nil)
    (null_emptyset name-judgement "null_set" isf nil)
    (subset_algebra_emptyset name-judgement "(S)" isf nil)
    (TRUE const-decl "bool" booleans nil)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (extensionality_postulate formula-decl nil functions nil)
    (emptyset_is_compact name-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (emptyset_is_clopen name-judgement
     "clopen[real, (metric_induced_topology)]" convergence_aux metric_space)
    (finite_emptyset name-judgement "finite_set[real]" integral_def analysis)
    (subset_algebra_emptyset name-judgement "(S)" measure_space_def nil)
    (finite_emptyset name-judgement "finite_set[T]" sigma_countable sigma_set)
    (finite_emptyset name-judgement "finite_set[T]" step_fun_props analysis)
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     sets_aux)
    (finite_emptyset name-judgement "finite_set[T]" countable_props sets_aux)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (isf_phi application-judgement "isf" isf nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (mu const-decl "nnreal" measure_props nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (sigma_empty formula-decl nil sigma_countable sigma_set)
    (real_times_real_is_real application-judgement "real" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (T formal-type-decl nil isf nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (empty? const-decl "bool" sets nil)
    (fullset const-decl "set" sets nil))
   shostak)
  (isf_integral_phi-1 nil 3390842272
   ("" (skosimp)
    (("" (expand "isf_integral")
      (("" (case "empty?(fullset[T])")
        (("1"
          (case-replace
           "image[T, real](phi(E!1), fullset[T]) = emptyset[real]")
          (("1" (rewrite "sigma_empty")
            (("1" (typepred "E!1")
              (("1" (rewrite "extensionality_postulate" -3 :dir rl)
                (("1" (expand "emptyset")
                  (("1" (expand "fullset")
                    (("1" (expand "image")
                      (("1" (expand "phi")
                        (("1" (expand "member")
                          (("1" (expand "empty?")
                            (("1" (expand "member")
                              (("1" (case-replace "E!1=emptyset[T]")
                                (("1" (typepred "m")
                                  (("1" (expand "measure?")
                                    (("1" (flatten)
                                      (("1"
                                        (expand "emptyset")
                                        (("1"
                                          (expand "mu")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (expand "measure_empty?")
                                              (("1"
                                                (expand "emptyset")
                                                (("1"
                                                  (replace -1)
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (apply-extensionality 1 :hide? t)
                                  (("2" (expand "emptyset")
                                    (("2" (inst -4 "1")
                                      (("2"
                                        (inst + "x!1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (skosimp)
                (("2" (expand "singleton")
                  (("2" (expand "phi")
                    (("2" (expand "inverse_image")
                      (("2" (expand "member")
                        (("2" (rewrite "extensionality_postulate" -1 :dir rl)
                          (("2" (expand "emptyset")
                            (("2" (expand "fullset")
                              (("2" (expand "image")
                                (("2" (case "empty?(E!1)")
                                  (("1" (case-replace "c!1=1")
                                    (("1" (assert)
                                      (("1"
                                        (case-replace
                                         "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = 1}=E!1")
                                        (("1"
                                          (lemma "emptyset_is_empty?[T]")
                                          (("1"
                                            (inst - "E!1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide-all-but 1)
                                          (("2"
                                            (apply-extensionality :hide? t)
                                            (("2"
                                              (lift-if)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case-replace
                                       "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = c!1}=emptyset[T]")
                                      (("1"
                                        (expand "mu_fin?")
                                        (("1"
                                          (typepred "m")
                                          (("1"
                                            (expand "measure?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "measure_empty?")
                                                  (("1"
                                                    (replace -1)
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide-all-but (-1 -3 1 2 3))
                                        (("2"
                                          (apply-extensionality 1 :hide? t)
                                          (("2"
                                            (expand "emptyset")
                                            (("2"
                                              (lift-if -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (case-replace "c!1=1")
                                    (("1"
                                      (case-replace
                                       "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = 1}=E!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (typepred "E!1")
                                          (("1"
                                            (expand "measurable_set?")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply-extensionality 1 :hide? t)
                                        (("2"
                                          (lift-if 1)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (case-replace
                                       "{x_2: T | IF E!1(x_2) THEN 1 ELSE 0 ENDIF = c!1}=emptyset[T]")
                                      (("1"
                                        (expand "mu_fin?")
                                        (("1"
                                          (typepred "m")
                                          (("1"
                                            (expand "measure?")
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand "measure_empty?")
                                                  (("1"
                                                    (replace -1)
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (apply-extensionality 1 :hide? t)
                                        (("2"
                                          (expand "emptyset")
                                          (("2"
                                            (lift-if -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (apply-extensionality 1 :hide? t)
              (("2" (expand "emptyset")
                (("2" (expand "fullset")
                  (("2" (expand "image")
                    (("2" (skosimp)
                      (("2" (expand "phi")
                        (("2" (expand "member")
                          (("2" (expand "empty?")
                            (("2" (inst - "x!2") (("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (case-replace "E!1=emptyset[T]")
          (("1"
            (case-replace
             "image[T, real](phi(emptyset[T]), fullset[T]) = singleton[real](0)")
            (("1" (rewrite "sigma_singleton")
              (("1" (typepred "m")
                (("1" (expand "measure?")
                  (("1" (flatten)
                    (("1" (expand "mu")
                      (("1" (assert)
                        (("1" (expand "measure_empty?")
                          (("1" (replace -1) (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 3)
                (("2" (skosimp)
                  (("2" (expand "singleton")
                    (("2" (expand "emptyset")
                      (("2" (expand "phi")
                        (("2" (expand "member")
                          (("2" (expand "inverse_image")
                            (("2" (expand "member")
                              (("2"
                                (case-replace "{x: T | 0 = c!1}=emptyset[T]")
                                (("1" (expand "mu_fin?")
                                  (("1" (typepred "m")
                                    (("1" (expand "measure?")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (expand "measure_empty?")
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (apply-extensionality 1 :hide? t) nil
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide -1 3)
              (("2" (expand "singleton")
                (("2" (expand "fullset")
                  (("2" (expand "emptyset")
                    (("2" (expand "phi")
                      (("2" (expand "image")
                        (("2" (apply-extensionality 1 :hide? t)
                          (("2" (case-replace "x!1=0")
                            (("1" (expand "empty?")
                              (("1" (skosimp) (("1" (inst + "x!2") nil nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (case-replace "E!1=fullset[T]")
            (("1"
              (case-replace
               "image[T, real](phi(fullset[T]), fullset[T]) = singleton[real](1)")
              (("1" (rewrite "sigma_singleton")
                (("1" (expand "singleton" 3)
                  (("1" (expand "phi")
                    (("1" (expand "member")
                      (("1" (expand "inverse_image")
                        (("1" (expand "member")
                          (("1"
                            (case-replace
                             "{x_1: T | IF fullset[T](x_1) THEN 1 ELSE 0 ENDIF = 1}=fullset[T]")
                            (("1" (assert) nil nil)
                             ("2" (apply-extensionality 1 :hide? t)
                              (("2" (expand "fullset")
                                (("2" (propax) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 4)
                  (("2" (skosimp*)
                    (("2" (expand "singleton")
                      (("2" (expand "phi")
                        (("2" (expand "inverse_image")
                          (("2" (expand "member")
                            (("2" (expand "fullset")
                              (("2" (case-replace "1=c!1")
                                (("1" (assert) nil nil)
                                 ("2" (replace 1 3)
                                  (("2" (assert)
                                    (("2" (typepred "m")
                                      (("2"
                                        (expand "measure?")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (expand "mu_fin?")
                                            (("2"
                                              (expand "emptyset")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (typepred "S")
                                                  (("2"
                                                    (expand "sigma_algebra?")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (expand
                                                         "subset_algebra_empty?")
                                                        (("2"
                                                          (expand "emptyset")
                                                          (("2"
                                                            (expand "member")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (expand
                                                                   "measure_empty?")
                                                                  (("2"
                                                                    (expand
                                                                     "emptyset")
                                                                    (("2"
                                                                      (replace
                                                                       -4)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide-all-but (1 3))
                (("2" (expand "singleton")
                  (("2" (apply-extensionality :hide? t)
                    (("2" (case-replace "x!1=1")
                      (("1" (expand "fullset")
                        (("1" (expand "image")
                          (("1" (expand "empty?")
                            (("1" (skosimp)
                              (("1" (inst + "x!2")
                                (("1" (expand "phi") (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (assert)
                        (("2" (expand "fullset")
                          (("2" (expand "image")
                            (("2" (expand "phi")
                              (("2" (expand "member") (("2" (propax) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2"
              (case-replace
               "image[T, real](phi(E!1), fullset[T]) = add[real](1,singleton[real](0))")
              (("1" (hide -1)
                (("1"
                  (case "FORALL (c:real):
        NOT c = 0 IMPLIES
         measurable_set?(inverse_image[T, real](phi[T, S](E!1), singleton[real](c))) AND S(inverse_image[T, real](phi[T, S](E!1), singleton[real](c))) AND
          mu_fin?[T, S, m]
              (inverse_image[T, real](phi[T, S](E!1), singleton[real](c)))")
                  (("1" (rewrite "sigma_add" 4)
                    (("1" (expand "singleton" 4 1)
                      (("1"
                        (case-replace
                         "inverse_image[T, real](phi(E!1), singleton[real](1)) = E!1")
                        (("1" (hide -1)
                          (("1" (rewrite "sigma_singleton")
                            (("1" (assert) nil nil)
                             ("2" (skosimp)
                              (("2" (inst - "c!1")
                                (("2" (assert)
                                  (("2" (flatten) (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (apply-extensionality 1 :hide? t)
                          (("2" (expand "singleton")
                            (("2" (expand "phi")
                              (("2" (expand "inverse_image")
                                (("2" (expand "member")
                                  (("2" (lift-if 1) (("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (rewrite "convergent_singleton" 1)
                      (("2" (hide-all-but (-1 1))
                        (("2" (skosimp)
                          (("2" (inst - "c!1")
                            (("2" (assert)
                              (("2" (flatten) (("2" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("3" (skosimp)
                      (("3" (inst - "c!1")
                        (("3" (assert)
                          (("3" (flatten) (("3" (assert) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("4"
                      (lemma "finite_countable[real]"
                       ("x" "singleton[real](0)"))
                      (("4" (propax) nil nil)) nil))
                    nil)
                   ("2" (hide 5)
                    (("2" (skosimp)
                      (("2"
                        (case-replace "inverse_image[T, real]
                          (phi[T, S](E!1), singleton[real](c!1)) = if c!1=1 then E!1 else emptyset[T] endif")
                        (("1" (hide -1)
                          (("1" (case-replace "c!1=1")
                            (("1" (assert)
                              (("1" (typepred "E!1")
                                (("1" (expand "measurable_set?")
                                  (("1" (propax) nil nil)) nil))
                                nil))
                              nil)
                             ("2" (assert)
                              (("2" (expand "mu_fin?")
                                (("2" (expand "measurable_set?")
                                  (("2" (typepred "m")
                                    (("2" (expand "measure?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (expand "measure_empty?")
                                            (("2"
                                              (replace -1)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 3)
                          (("2" (apply-extensionality 1 :hide? t)
                            (("2" (expand "emptyset")
                              (("2" (expand "singleton")
                                (("2" (expand "phi")
                                  (("2" (expand "inverse_image")
                                    (("2" (expand "member")
                                      (("2"
                                        (case-replace "E!1(x!1)")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (case-replace "c!1=1")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 5)
                (("2" (apply-extensionality 1 :hide? t)
                  (("2" (expand "singleton")
                    (("2" (expand "add")
                      (("2" (expand "fullset")
                        (("2" (expand "phi")
                          (("2" (expand "member")
                            (("2" (expand "image")
                              (("2" (case-replace "x!1=0")
                                (("1" (lemma "fullset_is_full?[T]")
                                  (("1" (inst - "E!1")
                                    (("1" (expand "fullset" -1)
                                      (("1"
                                        (replace -1 2 rl)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "full?")
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst + "x!2")
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (case-replace "x!1=1")
                                    (("1" (hide 1 3 5 -1)
                                      (("1"
                                        (rewrite
                                         "emptyset_is_empty?"
                                         2
                                         :dir
                                         rl)
                                        (("1"
                                          (expand "empty?")
                                          (("1"
                                            (skosimp)
                                            (("1"
                                              (inst + "x!2")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert)
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (lift-if)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sigma_singleton formula-decl nil sigma_countable sigma_set)
    (nonempty? const-decl "bool" sets nil)
    (add const-decl "(nonempty?)" sets nil)
    (convergent_singleton formula-decl nil countable_convergence sigma_set)
    (sigma_add formula-decl nil sigma_countable sigma_set)
    (is_countable const-decl "bool" countability sets_aux)
    (countable_set nonempty-type-eq-decl nil countability sets_aux)
    (convergent? const-decl "bool" countable_convergence sigma_set)
    (full? const-decl "bool" sets nil)
    (subset_algebra_empty? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (phi const-decl "nat" measure_space nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (emptyset const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (extensionality_postulate formula-decl nil functions nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (mu const-decl "nnreal" measure_props nil)
    (sigma_empty formula-decl nil sigma_countable sigma_set)
    (set type-eq-decl nil sets nil) (empty? const-decl "bool" sets nil)
    (fullset const-decl "set" sets nil))
   shostak))
 (isf_integral_zero 0
  (isf_integral_zero-1 nil 3390876205
   ("" (expand "isf_integral")
    (("" (case "empty?(fullset[T])")
      (("1"
        (case-replace
         "image[T, real](LAMBDA (x: T): 0, fullset[T])=emptyset[real]")
        (("1" (rewrite "sigma_empty")
          (("1" (hide -1 2)
            (("1" (skosimp)
              (("1" (expand "singleton")
                (("1" (expand "inverse_image")
                  (("1" (expand "member")
                    (("1" (case-replace "{x: T | 0 = c!1}=emptyset[T]")
                      (("1" (expand "mu_fin?")
                        (("1" (typepred "m")
                          (("1" (expand "measure?")
                            (("1" (flatten)
                              (("1" (assert)
                                (("1" (expand "measure_empty?")
                                  (("1" (replace -1) (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (apply-extensionality 1 :hide? t)
                        (("2" (expand "emptyset") (("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (apply-extensionality 1 :hide? t)
          (("2" (expand "emptyset")
            (("2" (expand "fullset")
              (("2" (expand "image")
                (("2" (skosimp)
                  (("2" (expand "empty?")
                    (("2" (inst - "x!2") (("2" (assert) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2"
        (case-replace
         "image[T, real](LAMBDA (x: T): 0, fullset[T])=singleton[real](0)")
        (("1" (rewrite "sigma_singleton")
          (("1" (hide 3)
            (("1" (skosimp)
              (("1" (expand "singleton")
                (("1" (expand "inverse_image")
                  (("1" (expand "member")
                    (("1" (expand "mu_fin?")
                      (("1" (typepred "m")
                        (("1" (expand "measure?")
                          (("1" (flatten)
                            (("1"
                              (case-replace "{x: T | 0 = c!1}=emptyset[T]")
                              (("1" (assert)
                                (("1" (expand "measure_empty?")
                                  (("1" (replace -2) (("1" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (apply-extensionality 1 :hide? t)
                                (("2" (expand "emptyset")
                                  (("2" (propax) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 3)
          (("2" (apply-extensionality 1 :hide? t)
            (("2" (expand "singleton")
              (("2" (expand "fullset")
                (("2" (expand "image")
                  (("2" (case-replace "x!1=0")
                    (("1" (expand "empty?")
                      (("1" (skosimp) (("1" (inst + "x!2") nil nil)) nil))
                      nil)
                     ("2" (replace 1 2) (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((fullset const-decl "set" sets nil) (empty? const-decl "bool" sets nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil isf nil) (TRUE const-decl "bool" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sigma_empty formula-decl nil sigma_countable sigma_set)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (mu const-decl "nnreal" measure_props nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (finite_emptyset name-judgement "finite_set[T]" countable_props sets_aux)
    (finite_emptyset name-judgement "finite_set[T]" countable_setofsets
     sets_aux)
    (finite_emptyset name-judgement "finite_set[T]" step_fun_props analysis)
    (finite_emptyset name-judgement "finite_set[T]" sigma_countable sigma_set)
    (subset_algebra_emptyset name-judgement "(S)" measure_space_def nil)
    (finite_emptyset name-judgement "finite_set[real]" integral_def analysis)
    (emptyset_is_clopen name-judgement
     "clopen[real, (metric_induced_topology)]" convergence_aux metric_space)
    (emptyset_is_compact name-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (measure_empty? const-decl "bool" generalized_measure_def nil)
    (subset_algebra_emptyset name-judgement "(S)" isf nil)
    (null_emptyset name-judgement "null_set" isf nil)
    (member const-decl "bool" sets nil) (emptyset const-decl "set" sets nil)
    (image const-decl "set[R]" function_image nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (sigma_singleton formula-decl nil sigma_countable sigma_set)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[nat]" countability sets_aux)
    (singleton_is_compact application-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[real]" integral_def analysis)
    (singleton_is_closed application-judgement
     "closed[real, (metric_induced_topology)]" convergence_aux metric_space)
    (isf_integral const-decl "real" isf nil))
   shostak))
 (isf_integral_def_TCC1 0
  (isf_integral_def_TCC1-1 nil 3394999213
   ("" (skosimp*) (("" (expand "nonempty?") (("" (propax) nil nil)) nil)) nil)
   ((nonempty? const-decl "bool" sets nil)) nil
   (isf_integral_def subtype "isf.Y" "(sets[isf.T].nonempty?)")))
 (isf_integral_def_TCC2 0
  (isf_integral_def_TCC2-1 nil 3394999213
   ("" (skosimp*)
    (("" (expand "finite_partition_of?")
      (("" (inst - "Y!1") (("" (flatten) (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((finite_partition_of? const-decl "bool" isf nil)
    (T formal-type-decl nil isf nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil) (set type-eq-decl nil sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil)
    (p!1 skolem-const-decl "finite_partition[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil))
   nil
   (isf_integral_def subtype "isf.Y"
    "{m1: (isf.S) | measure_props[isf.T, isf.S, isf.m].mu_fin?(m1)}")))
 (isf_integral_def_TCC3 0
  (isf_integral_def_TCC3-2 "" 3789903968
   ("" (skosimp*)
    (("" (typepred "p!1")
      (("" (expand "fullset")
        (("" (expand "finite_partition?")
          (("" (flatten)
            (("" (hide-all-but (-2 1))
              (("" (expand "is_countable")
                (("" (expand "is_finite")
                  (("" (skosimp) (("" (inst + "f!2") nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_partition nonempty-type-eq-decl nil partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (set type-eq-decl nil sets nil) (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (is_finite const-decl "bool" finite_sets nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (injective? const-decl "bool" functions nil)
    (< const-decl "bool" reals nil) (below type-eq-decl nil nat_types nil)
    (f!2 skolem-const-decl "[(p!1) -> below[N!1]]" isf nil)
    (N!1 skolem-const-decl "nat" isf nil)
    (p!1 skolem-const-decl "finite_partition[T]" isf nil)
    (is_countable const-decl "bool" countability sets_aux))
   shostak (isf_integral_def subtype "isf.p" "countable_set[set[T]]"))
  (isf_integral_def_TCC3-1 nil 3394999213
   ("" (skosimp*)
    (("" (typepred "p!1")
      (("" (expand "fullset")
        (("" (expand "finite_partition?")
          (("" (flatten)
            (("" (hide-all-but (-2 1))
              (("" (expand "is_countable")
                (("" (expand "is_finite")
                  (("" (skosimp)
                    (("" (inst + "f!2")
                      (("" (expand "injective?") (("" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((finite_partition nonempty-type-eq-decl nil partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (set type-eq-decl nil sets nil) (setofsets type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (injective? const-decl "bool" functions nil)
    (is_countable const-decl "bool" countability sets_aux))
   nil (isf_integral_def subtype "isf.p" "countable_set[set[T]]")))
 (isf_integral_def_TCC4 0
  (isf_integral_def_TCC4-1 nil 3394999213
   ("" (skosimp*)
    (("" (expand "convergent?")
      (("" (typepred "p!1")
        (("" (expand "fullset")
          (("" (expand "finite_partition?") (("" (flatten) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((convergent? const-decl "bool" countable_convergence sigma_set)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-type-decl nil isf nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil) (set type-eq-decl nil sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil))
   nil
   (isf_integral_def subtype "isf.f"
    "(countable_convergence[set[T]].convergent?(isf.p))")))
 (isf_integral_def 0
  (isf_integral_def-2 "" 3758915131
   ("" (assert)
    (("" (skolem + ("_" "p!1"))
      ((""
        (case "FORALL (n:nat,i: isf):
        finite_partition_of?(i)(p!1) & card({c | c /= 0 and image(i,fullset[T])(c)}) = n IMPLIES
         isf_integral(i) =
          sigma[set[T]]
              (p!1,
               LAMBDA Y:
                 IF (NOT p!1(Y)) OR empty?(Y) OR i(choose[T](Y)) = 0 THEN 0
                 ELSE i(choose[T](Y)) * mu(Y)
                 ENDIF)")
        (("1" (skosimp)
          (("1"
            (inst - "card({c | c /= 0 AND image(i!1, fullset[T])(c)})" "i!1")
            (("1" (assert) nil nil)
             ("2" (hide-all-but 1)
              (("2" (typepred "i!1")
                (("2" (expand "isf?")
                  (("2" (expand "simple?")
                    (("2" (flatten)
                      (("2"
                        (lemma "finite_subset[real]"
                         ("s"
                          "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                          "A" "image(i!1, fullset[T])"))
                        (("1" (split -1)
                          (("1" (propax) nil nil)
                           ("2" (hide-all-but 1)
                            (("2" (expand "fullset")
                              (("2" (expand "image")
                                (("2" (expand "subset?")
                                  (("2" (expand "member")
                                    (("2" (skosimp*) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (induct "n")
            (("1" (skosimp)
              (("1"
                (lemma "card_is_0[real]"
                 ("S" "{c | c /= 0 AND image(i!1, fullset[T])(c)}"))
                (("1" (assert)
                  (("1" (replace -3)
                    (("1" (expand "isf_integral")
                      (("1"
                        (case "nonempty?(image[T, real](i!1, fullset[T]))")
                        (("1"
                          (case-replace
                           "image[T, real](i!1, fullset[T])=singleton[real](0)")
                          (("1" (rewrite "sigma_singleton" 1)
                            (("1" (case "forall x: i!1(x) = 0")
                              (("1"
                                (lemma "sigma_eq"
                                 ("X" "p!1" "f" "LAMBDA (Y:set[T]):
              IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
              ELSE i!1(choose[T](Y)) * mu(Y)
              ENDIF" "g" "lambda (Y:set[T]):0"))
                                (("1" (split -1)
                                  (("1" (replace -1)
                                    (("1" (rewrite "sigma_zero" 1) nil nil))
                                    nil)
                                   ("2" (hide 2)
                                    (("2" (skosimp)
                                      (("2"
                                        (lift-if)
                                        (("2"
                                          (prop)
                                          (("2"
                                            (inst - "choose[T](t!1)")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (typepred "p!1")
                                  (("2" (expand "finite_partition?")
                                    (("2" (expand "convergent?")
                                      (("2" (flatten) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("3" (typepred "p!1")
                                  (("3" (expand "convergent?")
                                    (("3" (expand "finite_partition?")
                                      (("3" (flatten) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("4" (skosimp)
                                  (("4" (expand "finite_partition_of?")
                                    (("4" (inst -6 "Y!1")
                                      (("4"
                                        (flatten)
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("5" (skosimp)
                                  (("5" (expand "nonempty?")
                                    (("5" (propax) nil nil)) nil))
                                  nil)
                                 ("6" (skosimp)
                                  (("6" (expand "nonempty?")
                                    (("6" (propax) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2" (skosimp)
                                  (("2"
                                    (lemma "extensionality_postulate"
                                     ("f" "image[T, real](i!1, fullset[T])"
                                      "g" "singleton[real](0)"))
                                    (("2" (replace -1 -2 rl)
                                      (("2"
                                        (inst - "i!1(x!1)")
                                        (("2"
                                          (expand "singleton")
                                          (("2"
                                            (replace -2 1 rl)
                                            (("2"
                                              (expand "fullset")
                                              (("2"
                                                (expand "image")
                                                (("2" (inst + "x!1") nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (skosimp*)
                                (("2"
                                  (case-replace
                                   "inverse_image[T, real](i!1, singleton[real](c!1))=emptyset[T]")
                                  (("1" (lemma "m_emptyset")
                                    (("1" (expand "mu_fin?")
                                      (("1"
                                        (replace -1)
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide 3)
                                    (("2" (apply-extensionality 1 :hide? t)
                                      (("2"
                                        (expand "emptyset")
                                        (("2"
                                          (expand "inverse_image")
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (expand "singleton")
                                              (("2"
                                                (lemma
                                                 "extensionality_postulate"
                                                 ("f"
                                                  "image[T, real](i!1, fullset[T])"
                                                  "g"
                                                  "{y: real | y = 0}"))
                                                (("2"
                                                  (replace -1 -3 rl)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (inst - "i!1(x!1)")
                                                      (("2"
                                                        (replace -1 * rl)
                                                        (("2"
                                                          (replace -2 1 rl)
                                                          (("2"
                                                            (expand "fullset")
                                                            (("2"
                                                              (expand "image")
                                                              (("2"
                                                                (inst + "x!1")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (apply-extensionality :hide? t)
                              (("2" (expand "singleton")
                                (("2" (case-replace "x!1=0")
                                  (("1" (hide -5)
                                    (("1"
                                      (lemma
                                       "extensionality_postulate"
                                       ("f"
                                        "{c | c /= 0 AND image(i!1, fullset[T])(c)}"
                                        "g"
                                        "emptyset[real]"))
                                      (("1"
                                        (replace -1 -4 rl)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "nonempty?")
                                            (("1"
                                              (expand "empty?")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (inst - "x!2")
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (expand "emptyset")
                                                        (("1"
                                                          (expand "image")
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (inst + "x!3")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert)
                                    (("2"
                                      (lemma
                                       "extensionality_postulate"
                                       ("f"
                                        "{c | c /= 0 AND image(i!1, fullset[T])(c)}"
                                        "g"
                                        "emptyset[real]"))
                                      (("2"
                                        (replace -1 -4 rl)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (inst - "x!1")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "emptyset")
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "nonempty?")
                          (("2" (hide -2 -4)
                            (("2" (rewrite "emptyset_is_empty?")
                              (("2" (replace -1)
                                (("2" (rewrite "sigma_empty" 1)
                                  (("1"
                                    (lemma
                                     "extensionality_postulate[real,bool]"
                                     ("f" "image[T, real](i!1, fullset[T])"
                                      "g" "emptyset[real]"))
                                    (("1" (replace -1 -2 rl)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (lemma
                                           "sigma_countable.sigma_eq"
                                           ("X"
                                            "p!1"
                                            "f"
                                            "LAMBDA (Y:set[T]):
              IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
              ELSE i!1(choose[T](Y)) * mu(Y)
              ENDIF"
                                            "g"
                                            "lambda(Y:set[T]):0"))
                                          (("1"
                                            (split -1)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (rewrite "sigma_zero" 1)
                                                nil
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (typepred "t!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (prop)
                                                        (("2"
                                                          (inst
                                                           -
                                                           "i!1(choose[T](t!1))")
                                                          (("2"
                                                            (expand
                                                             "emptyset")
                                                            (("2"
                                                              (expand
                                                               "fullset")
                                                              (("2"
                                                                (expand
                                                                 "image")
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "choose[T](t!1)")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "convergent?")
                                            (("2"
                                              (typepred "p!1")
                                              (("2"
                                                (expand "finite_partition?")
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (typepred "p!1")
                                            (("3"
                                              (expand "finite_partition?")
                                              (("3"
                                                (expand "convergent?")
                                                (("3" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (skosimp)
                                            (("4"
                                              (expand "finite_partition_of?")
                                              (("4"
                                                (inst -3 "Y!1")
                                                (("4"
                                                  (flatten)
                                                  (("4" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("5"
                                            (skosimp)
                                            (("5"
                                              (expand "nonempty?")
                                              (("5" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("6"
                                            (skosimp)
                                            (("6"
                                              (expand "nonempty?")
                                              (("6" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide 2)
                                    (("2" (skosimp)
                                      (("2"
                                        (case-replace
                                         "inverse_image[T, real](i!1, singleton[real](c!1))=emptyset[T]")
                                        (("1"
                                          (lemma "m_emptyset")
                                          (("1"
                                            (expand "mu_fin?")
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 3)
                                          (("2"
                                            (apply-extensionality 1 :hide? t)
                                            (("2"
                                              (expand "emptyset")
                                              (("2"
                                                (expand "inverse_image")
                                                (("2"
                                                  (expand "singleton")
                                                  (("2"
                                                    (expand "member")
                                                    (("2"
                                                      (lemma
                                                       "extensionality_postulate"
                                                       ("f"
                                                        "image[T, real](i!1, fullset[T])"
                                                        "g"
                                                        "{x: real | FALSE}"))
                                                      (("2"
                                                        (replace -1 -3 rl)
                                                        (("2"
                                                          (inst - "c!1")
                                                          (("2"
                                                            (expand "fullset")
                                                            (("2"
                                                              (expand "image")
                                                              (("2"
                                                                (inst + "x!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (typepred "i!1")
                    (("2" (expand "isf?")
                      (("2" (expand "simple?")
                        (("2" (flatten)
                          (("2"
                            (lemma "finite_subset[real]"
                             ("s"
                              "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                              "A" "image(i!1, fullset[T])"))
                            (("1" (split -1)
                              (("1" (propax) nil nil)
                               ("2" (hide-all-but 1)
                                (("2" (expand "fullset")
                                  (("2" (expand "image")
                                    (("2" (expand "subset?")
                                      (("2"
                                        (expand "member")
                                        (("2" (skosimp*) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skosimp*)
              (("2"
                (name-replace "NZ_IMAGE"
                 "{c | c /= 0 AND image(i!1, fullset[T])(c)}")
                (("2" (lemma "nonempty_card[real]" ("S" "NZ_IMAGE"))
                  (("2" (assert)
                    (("2" (lemma "card_rest[real]" ("S" "NZ_IMAGE"))
                      (("2" (replace -5)
                        (("2" (simplify -1)
                          (("2" (lemma "choose_member[real]" ("a" "NZ_IMAGE"))
                            (("2" (expand "nonempty?")
                              (("2" (replace 1)
                                (("2" (expand "NZ_IMAGE" -1 2)
                                  (("2" (expand "member" -1)
                                    (("2" (flatten)
                                      (("2"
                                        (name-replace
                                         "CC"
                                         "choose[real](NZ_IMAGE)")
                                        (("2"
                                          (name
                                           "P1"
                                           "{a:set[T] | p!1(a) & forall (x:(a)): i!1(x) = CC}")
                                          (("2"
                                            (case "subset?(P1,p!1)")
                                            (("1"
                                              (case "is_finite[set[T]](P1)")
                                              (("1"
                                                (lemma
                                                 "measurable_Union"
                                                 ("M" "P1"))
                                                (("1"
                                                  (expand "restrict" -1)
                                                  (("1"
                                                    (expand "Union" -1)
                                                    (("1"
                                                      (name-replace
                                                       "CC_SET"
                                                       "{x: T | EXISTS (a: (LAMBDA (s: ((S))): P1(s))): a(x)}")
                                                      (("1"
                                                        (case
                                                         "forall x: CC_SET(x) => i!1(x)=CC & exists (a:(P1)): a(x)")
                                                        (("1"
                                                          (name
                                                           "II"
                                                           "i!1-CC*phi(CC_SET)")
                                                          (("1"
                                                            (copy -3)
                                                            (("1"
                                                              (expand
                                                               "measurable_set?"
                                                               -1)
                                                              (("1"
                                                                (case
                                                                 "mu_fin?(CC_SET)")
                                                                (("1"
                                                                  (lemma
                                                                   "isf_phi"
                                                                   ("E"
                                                                    "CC_SET"))
                                                                  (("1"
                                                                    (lemma
                                                                     "isf_scal"
                                                                     ("c"
                                                                      "CC"
                                                                      "i"
                                                                      "phi[T, S](CC_SET)"))
                                                                    (("1"
                                                                      (lemma
                                                                       "isf_diff"
                                                                       ("i1"
                                                                        "i!1"
                                                                        "i2"
                                                                        "*[T](CC, phi[T, S](CC_SET))"))
                                                                      (("1"
                                                                        (replace
                                                                         -6)
                                                                        (("1"
                                                                          (inst
                                                                           -14
                                                                           "II")
                                                                          (("1"
                                                                            (case-replace
                                                                             "{c | c /= 0 AND image(II, fullset[T])(c)}=rest(NZ_IMAGE)")
                                                                            (("1"
                                                                              (replace
                                                                               -14)
                                                                              (("1"
                                                                                (hide
                                                                                 -3
                                                                                 -14
                                                                                 -17)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "finite_partition_of?(II)(p!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "isf_integral(i!1) = isf_integral(II) + CC*mu(CC_SET)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "LHS"
                                                                                             "isf_integral(II)")
                                                                                            (("1"
                                                                                              (name
                                                                                               "P2"
                                                                                               "difference(p!1,P1)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "difference_subset"
                                                                                                 ("a"
                                                                                                  "p!1"
                                                                                                  "b"
                                                                                                  "P1"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "difference_disjoint"
                                                                                                   ("b"
                                                                                                    "p!1"
                                                                                                    "a"
                                                                                                    "P1"))
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "union(P1,P2)=p!1")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "is_finite(P2)")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "is_finite(p!1)")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "sigma_disjoint_union"
                                                                                                             ("f"
                                                                                                              "LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
              ELSE i!1(choose[T](Y)) * mu(Y)
              ENDIF"
                                                                                                              "X"
                                                                                                              "P1"
                                                                                                              "Y"
                                                                                                              "P2"))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -4)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1
                                                                                                                   3)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "sigma_eq"
                                                                                                                       ("X"
                                                                                                                        "P1"
                                                                                                                        "f"
                                                                                                                        "LAMBDA Y:
               IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
               ELSE i!1(choose[T](Y)) * mu(Y)
               ENDIF"
                                                                                                                        "g"
                                                                                                                        "LAMBDA Y: if not P1(Y) then 0 else CC*mu(Y) endif"))
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "forall (c:real,f:(convergent?(P1))): (forall (x:(P1)): f(x) = c*mu(x)) => sigma(P1, f) = c*mu(CC_SET)")
                                                                                                                              (("1"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "CC"
                                                                                                                                 "LAMBDA Y: IF NOT P1(Y) THEN 0 ELSE CC * mu(Y) ENDIF")
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "sigma_disjoint_union"
                                                                                                                                           ("X"
                                                                                                                                            "P1"
                                                                                                                                            "Y"
                                                                                                                                            "P2"
                                                                                                                                            "f"
                                                                                                                                            " LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR II(choose[T](Y)) = 0 THEN 0
              ELSE II(choose[T](Y)) * mu(Y)
              ENDIF"))
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -6)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -5)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "0"
                                                                                                                                                     "LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR II(choose[T](Y)) = 0 THEN 0
              ELSE II(choose[T](Y)) * mu(Y)
              ENDIF")
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -19)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 -19)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "sigma_eq"
                                                                                                                                                                   ("X"
                                                                                                                                                                    "P2"
                                                                                                                                                                    "f"
                                                                                                                                                                    "LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR II(choose[T](Y)) = 0 THEN 0
              ELSE II(choose[T](Y)) * mu(Y)
              ENDIF"
                                                                                                                                                                    "g"
                                                                                                                                                                    "LAMBDA Y:
               IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
               ELSE i!1(choose[T](Y)) * mu(Y)
               ENDIF"))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide
                                                                                                                                                                       4)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "t!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "subset?"
                                                                                                                                                                             -6)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "t!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case-replace
                                                                                                                                                                                     "empty?(t!1)")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case-replace
                                                                                                                                                                                         "i!1(choose[T](t!1)) = 0")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "II"
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "-"
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "*"
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "phi")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "member")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case-replace
                                                                                                                                                                                                       "CC_SET(choose[T](t!1))")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -16
                                                                                                                                                                                                         "choose[T](t!1)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "II"
                                                                                                                                                                                             3)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "-"
                                                                                                                                                                                               3)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "*"
                                                                                                                                                                                                 3)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "P2"
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "difference"
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "member")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "phi"
                                                                                                                                                                                                         4)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "member")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (case-replace
                                                                                                                                                                                                             "CC_SET(choose[T](t!1))")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -14
                                                                                                                                                                                                               "choose[T](t!1)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "P1"
                                                                                                                                                                                                                       3)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                                           "x!1")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                             "t!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "finite_partition_of?"
                                                                                                                                                                                                                               -23)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -23
                                                                                                                                                                                                                                 "t!1")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                       "constant_over?")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (inst-cp
                                                                                                                                                                                                                                           -24
                                                                                                                                                                                                                                           "choose[T](t!1)")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                             -24
                                                                                                                                                                                                                                             "x!1")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("3"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "nonempty?")
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "convergent?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "convergent?")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           -19
                                                                                                                                                           4)
                                                                                                                                                          (("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "x!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "subset?"
                                                                                                                                                               -17)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -17
                                                                                                                                                                 "x!1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case-replace
                                                                                                                                                                       "empty?(x!1)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case-replace
                                                                                                                                                                           "II(choose[T](x!1)) = 0")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (hide
                                                                                                                                                                               3)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "II"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "-"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "*"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "phi")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "member")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case-replace
                                                                                                                                                                                           "CC_SET(choose[T](x!1))")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -15
                                                                                                                                                                                             "choose[T](x!1)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             1
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "p!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "finite_partition?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "partition?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "extensionality_postulate"
                                                                                                                                                                                                       ("f"
                                                                                                                                                                                                        "Union(p!1)"
                                                                                                                                                                                                        "g"
                                                                                                                                                                                                        "fullset[T]"))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (hide
                                                                                                                                                                                                           -1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "CC_SET"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               +
                                                                                                                                                                                                               "x!1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "finite_partition_of?"
                                                                                                                                                                                                                 -22)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -22
                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("3"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nonempty?")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent?")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("3"
                                                                                                                                                        (expand
                                                                                                                                                         "finite_partition_of?"
                                                                                                                                                         -8)
                                                                                                                                                        (("3"
                                                                                                                                                          (inst
                                                                                                                                                           -8
                                                                                                                                                           "Y!1")
                                                                                                                                                          (("3"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("4"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("4"
                                                                                                                                                        (expand
                                                                                                                                                         "nonempty?")
                                                                                                                                                        (("4"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("5"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("5"
                                                                                                                                                        (expand
                                                                                                                                                         "nonempty?")
                                                                                                                                                        (("5"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (replace
                                                                                                                                             -4)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "convergent?")
                                                                                                                                              (("2"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (skosimp)
                                                                                                                                            (("3"
                                                                                                                                              (expand
                                                                                                                                               "finite_partition_of?"
                                                                                                                                               -9)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -9
                                                                                                                                                 "Y!1")
                                                                                                                                                (("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (skosimp)
                                                                                                                                            (("4"
                                                                                                                                              (expand
                                                                                                                                               "nonempty?")
                                                                                                                                              (("4"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "x!1")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "convergent?")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (hide
                                                                                                                                   4
                                                                                                                                   -19)
                                                                                                                                  (("3"
                                                                                                                                    (skosimp)
                                                                                                                                    (("3"
                                                                                                                                      (expand
                                                                                                                                       "subset?"
                                                                                                                                       -17)
                                                                                                                                      (("3"
                                                                                                                                        (inst
                                                                                                                                         -17
                                                                                                                                         "Y!1")
                                                                                                                                        (("3"
                                                                                                                                          (expand
                                                                                                                                           "member")
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (expand
                                                                                                                                               "finite_partition_of?"
                                                                                                                                               -20)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -20
                                                                                                                                                 "Y!1")
                                                                                                                                                (("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "P1"
                                                                                                                                                       -1)
                                                                                                                                                      (("3"
                                                                                                                                                        (split
                                                                                                                                                         -22)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "emptyset_is_empty?")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "mu_fin?")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "m_emptyset")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "choose(Y!1)")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 4
                                                                                                                                 -19)
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (1
                                                                                                                                    2
                                                                                                                                    3
                                                                                                                                    -19
                                                                                                                                    -18
                                                                                                                                    -16
                                                                                                                                    -15
                                                                                                                                    -14
                                                                                                                                    -11
                                                                                                                                    -1))
                                                                                                                                  (("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "forall (n:nat,X:setofsets[T]): subset?(X,P1) & card(X)=n => sigma(X,f!1)=c!1*mu(Union(X))")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "card(P1)"
                                                                                                                                         "P1")
                                                                                                                                        (("1"
                                                                                                                                          (split
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (case-replace
                                                                                                                                             "Union(P1)=CC_SET")
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (apply-extensionality
                                                                                                                                                 1
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "CC_SET")
                                                                                                                                                  (("1"
                                                                                                                                                    (case-replace
                                                                                                                                                     "Union(P1)(x!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "Union"
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "a!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "subset?")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -7
                                                                                                                                                               "a!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "member")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "finite_partition_of?")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -9
                                                                                                                                                                     "a!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       1
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "a!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "Union")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 +
                                                                                                                                                                 "a!1")
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "subset?")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (induct
                                                                                                                                         "n")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "card_is_0"
                                                                                                                                             ("S"
                                                                                                                                              "X!1"))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -3)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "Union_emptyset_rew")
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "sigma_empty")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "mu")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "m_emptyset")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "nonempty_card"
                                                                                                                                               ("S"
                                                                                                                                                "X!1"))
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "sigma_choose_rest"
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "rest(X!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "card_rest"
                                                                                                                                                       ("S"
                                                                                                                                                        "X!1"))
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "nonempty?"
                                                                                                                                                           -2)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -4)
                                                                                                                                                                (("1"
                                                                                                                                                                  (simplify
                                                                                                                                                                   -2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1
                                                                                                                                                                     -4)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "choose_member"
                                                                                                                                                                             ("a"
                                                                                                                                                                              "X!1"))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "choose(X!1)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -3)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     -3)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "finite_subset"
                                                                                                                                                                                       ("s"
                                                                                                                                                                                        "X!1"
                                                                                                                                                                                        "A"
                                                                                                                                                                                        "P1"))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "finite_subset"
                                                                                                                                                                                           ("s"
                                                                                                                                                                                            "rest(X!1)"
                                                                                                                                                                                            "A"
                                                                                                                                                                                            "X!1"))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "rest_subset")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "finite_countable"
                                                                                                                                                                                               ("x"
                                                                                                                                                                                                "X!1"))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (lemma
                                                                                                                                                                                                 "finite_countable"
                                                                                                                                                                                                 ("x"
                                                                                                                                                                                                  "rest(X!1)"))
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "measurable_Union"
                                                                                                                                                                                                   ("M"
                                                                                                                                                                                                    "X!1"))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "measurable_Union"
                                                                                                                                                                                                     ("M"
                                                                                                                                                                                                      "rest(X!1)"))
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "restrict")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "Union"
                                                                                                                                                                                                         (2
                                                                                                                                                                                                          -1
                                                                                                                                                                                                          -2))
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (case-replace
                                                                                                                                                                                                           "{x: T |
                         EXISTS (a: (LAMBDA (s: (S)): rest(X!1)(s))): a(x)}={x: T | EXISTS (a: (rest(X!1))): a(x)}")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (case-replace
                                                                                                                                                                                                               "{x: T | EXISTS (a: (LAMBDA (s: (S)): X!1(s))): a(x)}={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (case
                                                                                                                                                                                                                   "measurable_set?(choose(X!1))")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                     "m_disjoint_union"
                                                                                                                                                                                                                     ("a"
                                                                                                                                                                                                                      "choose(X!1)"
                                                                                                                                                                                                                      "b"
                                                                                                                                                                                                                      "{x: T | EXISTS (a: (rest(X!1))): a(x)}"))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (case-replace
                                                                                                                                                                                                                         "union(choose(X!1), {x: T | EXISTS (a: (rest(X!1))): a(x)})={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                             "i!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "isf?")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                                                   "m_monotone"
                                                                                                                                                                                                                                   ("a"
                                                                                                                                                                                                                                    "choose(X!1)"
                                                                                                                                                                                                                                    "b"
                                                                                                                                                                                                                                    "nonzero_set?(i!1)"))
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                                       "m_monotone"
                                                                                                                                                                                                                                       ("a"
                                                                                                                                                                                                                                        "{x: T | EXISTS (a: (rest(X!1))): a(x)}"
                                                                                                                                                                                                                                        "b"
                                                                                                                                                                                                                                        "nonzero_set?(i!1)"))
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                           "m_monotone"
                                                                                                                                                                                                                                           ("a"
                                                                                                                                                                                                                                            "{x: T | EXISTS (a: (X!1)): a(x)}"
                                                                                                                                                                                                                                            "b"
                                                                                                                                                                                                                                            "nonzero_set?(i!1)"))
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (split
                                                                                                                                                                                                                                             -1)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "x_le")
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "x_eq")
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "mu_fin?")
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "mu")
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                             "x_add")
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                                                                               (-14
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                4))
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "subset?")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "nonzero_set?")
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "member")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                                           -
                                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                               "P1")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                                   -
                                                                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                                                           (1
                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                            -13
                                                                                                                                                                                                                                            4))
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                                             "rest_subset"
                                                                                                                                                                                                                                             ("a"
                                                                                                                                                                                                                                              "X!1"))
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "subset?")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "nonzero_set?")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "member")
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                                                                       "a!1")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                         -
                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                                           -
                                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                               "P1")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                                   -
                                                                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                                                       (1
                                                                                                                                                                                                                                        -11
                                                                                                                                                                                                                                        -12
                                                                                                                                                                                                                                        4))
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "subset?")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "nonzero_set?")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "member")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                                 "choose(X!1)")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "P1")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                         -
                                                                                                                                                                                                                                                         "x!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (apply-extensionality
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           :hide?
                                                                                                                                                                                                                           t)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "union"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "member")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (case-replace
                                                                                                                                                                                                                                 "choose(X!1)(x!1)")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                   "choose(X!1)")
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (case-replace
                                                                                                                                                                                                                                     "EXISTS (a: (rest(X!1))): a(x!1)")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                           "rest_subset"
                                                                                                                                                                                                                                           ("a"
                                                                                                                                                                                                                                            "X!1"))
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "subset?")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                               -
                                                                                                                                                                                                                                               "a!1")
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                                   "a!1")
                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                       3)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (case-replace
                                                                                                                                                                                                                                               "a!1=choose(X!1)")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                 +
                                                                                                                                                                                                                                                 "a!1")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "rest")
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "remove")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                       "member")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                                         "choose_not_member"
                                                                                                                                                                                                                         ("a"
                                                                                                                                                                                                                          "X!1"))
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "disjoint?")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "empty?"
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (skosimp)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "intersection")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "member")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                                             "p!1")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "finite_partition?")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "partition?")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "subset?")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                                                       -14
                                                                                                                                                                                                                                                       "choose(X!1)")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                         -14
                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                                                             "rest_subset"
                                                                                                                                                                                                                                                             ("a"
                                                                                                                                                                                                                                                              "X!1"))
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                               "subset?")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                                                 "a!1")
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                   "member")
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                                                                       -21
                                                                                                                                                                                                                                                                       "choose(X!1)")
                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                                         -21
                                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                                                             -
                                                                                                                                                                                                                                                                             "a!1"
                                                                                                                                                                                                                                                                             "choose(X!1)")
                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                                                 "disjoint?"
                                                                                                                                                                                                                                                                                 -3)
                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                                   "empty?"
                                                                                                                                                                                                                                                                                   -3)
                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                                                                     -
                                                                                                                                                                                                                                                                                     "x!1")
                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                                       "intersection")
                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                                                                         "member")
                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "finite_partition_of?")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "subset?")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -8
                                                                                                                                                                                                                         "choose(X!1)")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -13
                                                                                                                                                                                                                             "choose(X!1)")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -15
                                                                                                                                                                                                                                 "choose(X!1)")
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "measurable_set?")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                 3)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (apply-extensionality
                                                                                                                                                                                                                   1
                                                                                                                                                                                                                   :hide?
                                                                                                                                                                                                                   t)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case-replace
                                                                                                                                                                                                                     "EXISTS (a: (X!1)): a(x!1)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "subset?")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           -9
                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "member")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               -14
                                                                                                                                                                                                                               "a!1")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "finite_partition_of?")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                     -16
                                                                                                                                                                                                                                     "a!1")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                         +
                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       2)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             +
                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             3)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (apply-extensionality
                                                                                                                                                                                                               1
                                                                                                                                                                                                               :hide?
                                                                                                                                                                                                               t)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (case-replace
                                                                                                                                                                                                                 "EXISTS (a: (rest(X!1))): a(x!1)")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "subset?")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                       "rest_subset"
                                                                                                                                                                                                                       ("a"
                                                                                                                                                                                                                        "X!1"))
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "subset?")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -
                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               -11
                                                                                                                                                                                                                               "a!1")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -16
                                                                                                                                                                                                                                 "a!1")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "finite_partition_of?")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                       -18
                                                                                                                                                                                                                                       "a!1")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                           +
                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   1
                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         +
                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       (-2
                                                                                                                                                                                                        1))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "restrict")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "is_countable")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                               "f!2")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 +
                                                                                                                                                                                                                 "f!2")
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     (-2
                                                                                                                                                                                                      1))
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "restrict")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "is_countable")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                             "f!2")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               +
                                                                                                                                                                                                               "f!2")
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "subset?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "choose(X!1)")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          1
                                                                                                                                                                          2))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "rest_subset"
                                                                                                                                                                           ("a"
                                                                                                                                                                            "X!1"))
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "subset?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (skosimp)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "x!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -
                                                                                                                                                                                   "x!1")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "nonempty_countable?")
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "finite_subset"
                                                                                                                                                       ("s"
                                                                                                                                                        "X!1"
                                                                                                                                                        "A"
                                                                                                                                                        "P1"))
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "finite_countable"
                                                                                                                                                           ("x"
                                                                                                                                                            "X!1"))
                                                                                                                                                          (("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("3"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("3"
                                                                                                                                            (skosimp)
                                                                                                                                            (("3"
                                                                                                                                              (lemma
                                                                                                                                               "measurable_Union"
                                                                                                                                               ("M"
                                                                                                                                                "X!1"))
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "restrict")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "Union")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "measurable_set?")
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "{x: T | EXISTS (a: (LAMBDA (s: (S)): X!1(s))): a(x)}={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (typepred
                                                                                                                                                             "i!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "isf?")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "m_monotone"
                                                                                                                                                                   ("a"
                                                                                                                                                                    "{x: T | EXISTS (a: (X!1)): a(x)}"
                                                                                                                                                                    "b"
                                                                                                                                                                    "nonzero_set?(i!1)"))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "mu_fin?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "x_le")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "subset?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "member")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (skosimp*)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nonzero_set?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (typepred
                                                                                                                                                                               "a!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -6
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "P1")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -8
                                                                                                                                                                                         "x!1")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "measurable_set?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (apply-extensionality
                                                                                                                                                           1
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (case-replace
                                                                                                                                                             "EXISTS (a: (X!1)): a(x!1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 +
                                                                                                                                                                 "a!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "a!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "subset?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "a!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -11
                                                                                                                                                                           "a!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "finite_partition_of?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -13
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (skosimp)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     " a!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "finite_subset"
                                                                                                                                                 ("s"
                                                                                                                                                  "X!1"
                                                                                                                                                  "A"
                                                                                                                                                  "P1"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "finite_countable"
                                                                                                                                                     ("x"
                                                                                                                                                      "X!1"))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "restrict")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "is_countable")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (typepred
                                                                                                                                                             "f!2")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "f!2")
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("4"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("4"
                                                                                                                                            (skosimp)
                                                                                                                                            (("4"
                                                                                                                                              (expand
                                                                                                                                               "convergent?")
                                                                                                                                              (("4"
                                                                                                                                                (flatten)
                                                                                                                                                (("4"
                                                                                                                                                  (lemma
                                                                                                                                                   "finite_subset"
                                                                                                                                                   ("s"
                                                                                                                                                    "X!1"
                                                                                                                                                    "A"
                                                                                                                                                    "P1"))
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("5"
                                                                                                                                          (skosimp)
                                                                                                                                          (("5"
                                                                                                                                            (lemma
                                                                                                                                             "finite_subset"
                                                                                                                                             ("s"
                                                                                                                                              "X!1"
                                                                                                                                              "A"
                                                                                                                                              "P1"))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "finite_countable"
                                                                                                                                                 ("x"
                                                                                                                                                  "X!1"))
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("6"
                                                                                                                                          (skosimp)
                                                                                                                                          (("6"
                                                                                                                                            (lemma
                                                                                                                                             "finite_subset"
                                                                                                                                             ("s"
                                                                                                                                              "X!1"
                                                                                                                                              "A"
                                                                                                                                              "P1"))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (skosimp)
                                                                                                                                        (("3"
                                                                                                                                          (lemma
                                                                                                                                           "finite_subset"
                                                                                                                                           ("s"
                                                                                                                                            "X!1"
                                                                                                                                            "A"
                                                                                                                                            "P1"))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "measurable_Union"
                                                                                                                                               ("M"
                                                                                                                                                "X!1"))
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "measurable_set?")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "restrict")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "Union"
                                                                                                                                                     (-1
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "{x: T | EXISTS (a: (LAMBDA (s: (S)): X!1(s))): a(x)}={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -2)
                                                                                                                                                        (("1"
                                                                                                                                                          (typepred
                                                                                                                                                           "i!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "isf?")
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "m_monotone"
                                                                                                                                                                 ("a"
                                                                                                                                                                  "{x: T | EXISTS (a: (X!1)): a(x)}"
                                                                                                                                                                  "b"
                                                                                                                                                                  "nonzero_set?(i!1)"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "mu_fin?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "x_le")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "subset?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "member")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "a!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nonzero_set?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "a!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "P1"
                                                                                                                                                                                   -8)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "x!1")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "measurable_set?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (apply-extensionality
                                                                                                                                                           1
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (case-replace
                                                                                                                                                             "EXISTS (a: (X!1)): a(x!1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 +
                                                                                                                                                                 "a!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "a!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "subset?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "a!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -12
                                                                                                                                                                           "a!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "finite_partition_of?"
                                                                                                                                                                               -14)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -14
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (skosimp)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     " a!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "finite_countable"
                                                                                                                                                 ("x"
                                                                                                                                                  "X!1"))
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "restrict")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "is_countable")
                                                                                                                                                    (("2"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("2"
                                                                                                                                                        (typepred
                                                                                                                                                         "f!2")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "f!2")
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("4"
                                                                                                                                        (skosimp)
                                                                                                                                        (("4"
                                                                                                                                          (expand
                                                                                                                                           "convergent?")
                                                                                                                                          (("4"
                                                                                                                                            (flatten)
                                                                                                                                            (("4"
                                                                                                                                              (lemma
                                                                                                                                               "finite_subset"
                                                                                                                                               ("s"
                                                                                                                                                "X!1"
                                                                                                                                                "A"
                                                                                                                                                "P1"))
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("5"
                                                                                                                                        (skosimp)
                                                                                                                                        (("5"
                                                                                                                                          (lemma
                                                                                                                                           "finite_subset"
                                                                                                                                           ("s"
                                                                                                                                            "X!1"
                                                                                                                                            "A"
                                                                                                                                            "P1"))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "finite_countable"
                                                                                                                                               ("x"
                                                                                                                                                "X!1"))
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("6"
                                                                                                                                        (skosimp)
                                                                                                                                        (("6"
                                                                                                                                          (lemma
                                                                                                                                           "finite_subset"
                                                                                                                                           ("s"
                                                                                                                                            "X!1"
                                                                                                                                            "A"
                                                                                                                                            "P1"))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (skosimp)
                                                                                                                                (("3"
                                                                                                                                  (typepred
                                                                                                                                   "x!1")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "subset?"
                                                                                                                                     -17)
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -17
                                                                                                                                       "x!1")
                                                                                                                                      (("3"
                                                                                                                                        (expand
                                                                                                                                         "member")
                                                                                                                                        (("3"
                                                                                                                                          (expand
                                                                                                                                           "finite_partition_of?"
                                                                                                                                           -21)
                                                                                                                                          (("3"
                                                                                                                                            (inst
                                                                                                                                             -21
                                                                                                                                             "x!1")
                                                                                                                                            (("3"
                                                                                                                                              (flatten)
                                                                                                                                              (("3"
                                                                                                                                                (case-replace
                                                                                                                                                 "empty?(x!1)")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "emptyset_is_empty?"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "mu_fin?")
                                                                                                                                                      (("1"
                                                                                                                                                        (rewrite
                                                                                                                                                         "m_emptyset")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "P1"
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "choose(x!1)")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           -19
                                                                                                                           4)
                                                                                                                          (("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "t!1")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "subset?"
                                                                                                                                   -17)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -17
                                                                                                                                     "t!1")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "empty?(t!1)")
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "emptyset_is_empty?"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "m_emptyset")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mu")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case-replace
                                                                                                                                               "i!1(choose[T](t!1)) = 0")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -19
                                                                                                                                                 -2
                                                                                                                                                 rl)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "choose[T](t!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -18
                                                                                                                                                   -1
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "choose[T](t!1)")
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (expand
                                                                                                                                                 "nonempty?")
                                                                                                                                                (("3"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide
                                                                                                                         -19
                                                                                                                         4)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "convergent?")
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (skosimp)
                                                                                                                        (("3"
                                                                                                                          (hide
                                                                                                                           4
                                                                                                                           -20)
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             "finite_partition_of?"
                                                                                                                             -20)
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "subset?"
                                                                                                                               -17)
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -17
                                                                                                                                 "Y!1")
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -20
                                                                                                                                       "Y!1")
                                                                                                                                      (("3"
                                                                                                                                        (flatten)
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          (("3"
                                                                                                                                            (split
                                                                                                                                             -22)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "emptyset_is_empty?")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mu_fin?")
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "m_emptyset")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "P1"
                                                                                                                                               -2)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "choose(Y!1)")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (expand
                                                                                                                         "convergent?")
                                                                                                                        (("4"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "convergent?")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (skosimp)
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "finite_partition_of?")
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -21
                                                                                                                   "Y!1")
                                                                                                                  (("3"
                                                                                                                    (flatten)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("4"
                                                                                                              (skosimp)
                                                                                                              (("4"
                                                                                                                (expand
                                                                                                                 "nonempty?")
                                                                                                                (("4"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("5"
                                                                                                              (skosimp)
                                                                                                              (("5"
                                                                                                                (expand
                                                                                                                 "nonempty?")
                                                                                                                (("5"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("6"
                                                                                                              (lemma
                                                                                                               "finite_countable[setof[T]]"
                                                                                                               ("x"
                                                                                                                "P2"))
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("7"
                                                                                                              (lemma
                                                                                                               "finite_countable[setof[T]]"
                                                                                                               ("x"
                                                                                                                "P1"))
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "p!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "finite_partition?")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (-3
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "p!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "finite_partition?")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "finite_subset"
                                                                                                                   ("s"
                                                                                                                    "P2"
                                                                                                                    "A"
                                                                                                                    "p!1"))
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "P2")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "P1")
                                                                                                              (("2"
                                                                                                                (apply-extensionality
                                                                                                                 :hide?
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -13
                                                                                           4)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "isf_integral")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "sigma_remove"
                                                                                               ("t"
                                                                                                "CC"
                                                                                                "X"
                                                                                                "image[T, real](i!1, fullset[T])"
                                                                                                "f"
                                                                                                "LAMBDA c:
                                          IF c = 0 THEN 0
                                          ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
                                          ENDIF"))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "restrict")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -13)
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (name-replace
                                                                                                         "LHS"
                                                                                                         "sigma[real]
                                        (image[T, real](i!1, fullset[T]),
                                         LAMBDA c:
                                           IF c = 0 THEN 0
                                           ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
                                           ENDIF)")
                                                                                                        (("1"
                                                                                                          (case-replace
                                                                                                           "inverse_image[T, real](i!1, singleton[real](CC))=CC_SET")
                                                                                                          (("1"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "image(i!1, fullset[T])(0)")
                                                                                                              (("1"
                                                                                                                (case-replace
                                                                                                                 "remove(CC, image[T, real](i!1, fullset[T]))=image[T, real](II, fullset[T])")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "is_finite(image[T, real](II, fullset[T]))")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "sigma_eq"
                                                                                                                       ("X"
                                                                                                                        "image[T, real](II, fullset[T])"
                                                                                                                        "f"
                                                                                                                        "LAMBDA c:
                                                     IF c = 0 THEN 0
                                                     ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
                                                     ENDIF"
                                                                                                                        "g"
                                                                                                                        "LAMBDA c:
                                                     IF c = 0 THEN 0
                                                     ELSE c * mu(inverse_image[T, real](II, singleton[real](c)))
                                                     ENDIF"))
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (postpone)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           -3
                                                                                                                           2)
                                                                                                                          (("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "t!1")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "fullset"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "image"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (case-replace
                                                                                                                                       "t!1=0")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (case-replace
                                                                                                                                           "inverse_image[T, real](i!1, singleton[real](t!1)) = inverse_image[T, real](II, singleton[real](t!1))")
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             3)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "singleton")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "inverse_image")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "member")
                                                                                                                                                  (("2"
                                                                                                                                                    (apply-extensionality
                                                                                                                                                     1
                                                                                                                                                     :hide?
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (case-replace
                                                                                                                                                       "i!1(x!2) = t!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "II"
                                                                                                                                                         (-2
                                                                                                                                                          1))
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "-")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "*")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "phi")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "member")
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "CC_SET(x!1)")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (replace
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst-cp
                                                                                                                                                                       -12
                                                                                                                                                                       "x!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replace
                                                                                                                                                                     1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "CC_SET(x!2)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -12
                                                                                                                                                                         "x!2")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (flatten)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               -12)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -2
                                                                                                                                                                                   -3
                                                                                                                                                                                   rl)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (typepred
                                                                                                                                                                                     "p!1")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "finite_partition?")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "partition?")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lemma
                                                                                                                                                                                             "extensionality_postulate"
                                                                                                                                                                                             ("f"
                                                                                                                                                                                              "Union(p!1)"
                                                                                                                                                                                              "g"
                                                                                                                                                                                              "fullset[T]"))
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1
                                                                                                                                                                                               -2
                                                                                                                                                                                               rl)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -2
                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "fullset")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (hide
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "Union")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "CC_SET")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               +
                                                                                                                                                                                                               "a!1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "finite_partition_of?")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -23
                                                                                                                                                                                                                   "a!1")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "P1")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                             "x!3")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "constant_over?")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (skolem!
                                                                                                                                                                                                                                 -25)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst-cp
                                                                                                                                                                                                                                   -25
                                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                     -25
                                                                                                                                                                                                                                     "x!3")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         1
                                                                                                                                                                         3)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replace
                                                                                                                                                         1
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             -2)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "II"
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "-")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "*")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "phi")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "member")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (case
                                                                                                                                                                         "CC_SET(x!2)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (inst
                                                                                                                                                                             -11
                                                                                                                                                                             "x!2")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "convergent?")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (skosimp*)
                                                                                                                        (("3"
                                                                                                                          (hide-all-but
                                                                                                                           (1
                                                                                                                            2
                                                                                                                            -5))
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             "isf?")
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "simple?")
                                                                                                                              (("3"
                                                                                                                                (flatten)
                                                                                                                                (("3"
                                                                                                                                  (lemma
                                                                                                                                   "m_monotone"
                                                                                                                                   ("a"
                                                                                                                                    "inverse_image[T, real](II, singleton[real](c!1))"
                                                                                                                                    "b"
                                                                                                                                    "nonzero_set?(II)"))
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "x_le")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "mu_fin?")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "measurable_function?")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "singleton[real](c!1)")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "measurable_set?")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -2)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (grind)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (grind)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (expand
                                                                                                                         "convergent?")
                                                                                                                        (("4"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "isf?")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "simple?")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -2
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (apply-extensionality
                                                                                                                     1
                                                                                                                     :hide?
                                                                                                                     t)
                                                                                                                    (("2"
                                                                                                                      (case-replace
                                                                                                                       "image[T, real](II, fullset[T])(x!1)")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "remove"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("1"
                                                                                                                            (case-replace
                                                                                                                             "x!1=CC")
                                                                                                                            (("1"
                                                                                                                              (hide
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "fullset"
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "image"
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (skosimp)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "II"
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "-"
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "*"
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "phi"
                                                                                                                                             -2)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("1"
                                                                                                                                                (case
                                                                                                                                                 "CC_SET(x!2)")
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -11
                                                                                                                                                     "x!2")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replace
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "p!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "finite_partition?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "partition?")
                                                                                                                                                        (("2"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "fullset")
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "extensionality_postulate"
                                                                                                                                                               ("f"
                                                                                                                                                                "Union(p!1)"
                                                                                                                                                                "g"
                                                                                                                                                                "{x: T | TRUE}"))
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1
                                                                                                                                                                 -2
                                                                                                                                                                 rl)
                                                                                                                                                                (("2"
                                                                                                                                                                  (hide
                                                                                                                                                                   -1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "x!2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "Union"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "CC_SET")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst
                                                                                                                                                                             +
                                                                                                                                                                             "a!1")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "finite_partition_of?")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -19
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "P1")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (typepred
                                                                                                                                                                                           "x!3")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "constant_over?")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skosimp)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst-cp
                                                                                                                                                                                                 -21
                                                                                                                                                                                                 "x!2")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (inst
                                                                                                                                                                                                   -21
                                                                                                                                                                                                   "x!3")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "fullset")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "image"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "II"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "-"
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "*"
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "phi"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "CC_SET(x!2)")
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -10
                                                                                                                                                   "x!2")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (replace
                                                                                                                                                   1)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "image")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       +
                                                                                                                                                       "x!2")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (replace
                                                                                                                         1
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "remove")
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "member")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "image")
                                                                                                                                    (("2"
                                                                                                                                      (skosimp*)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "II")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "-"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "*"
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "phi")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("2"
                                                                                                                                                  (case
                                                                                                                                                   "CC_SET(x!2)")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "CC_SET"
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("1"
                                                                                                                                                        (typepred
                                                                                                                                                         "a!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "P1"
                                                                                                                                                           -2)
                                                                                                                                                          (("1"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "x!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "x!2")
                                                                                                                                                    (("2"
                                                                                                                                                      (replace
                                                                                                                                                       1
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (case-replace
                                                                                                                 "remove(CC, image[T, real](i!1, fullset[T]))=remove(0,image[T, real](II, fullset[T]))")
                                                                                                                (("1"
                                                                                                                  (hide
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "is_finite(image[T, real](II, fullset[T]))")
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "sigma_remove"
                                                                                                                       ("f"
                                                                                                                        "LAMBDA c:
                                                     IF c = 0 THEN 0
                                                     ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
                                                     ENDIF"
                                                                                                                        "X"
                                                                                                                        "image[T, real](II, fullset[T])"
                                                                                                                        "t"
                                                                                                                        "0"))
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "sigma_eq"
                                                                                                                             ("X"
                                                                                                                              "image[T, real](II, fullset[T])"
                                                                                                                              "f"
                                                                                                                              "LAMBDA c:
                                                       IF c = 0 THEN 0
                                                       ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
                                                       ENDIF"
                                                                                                                              "g"
                                                                                                                              "LAMBDA c:
                                                       IF c = 0 THEN 0
                                                       ELSE c * mu(inverse_image[T, real](II, singleton[real](c)))
                                                       ENDIF"))
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (postpone)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 -2
                                                                                                                                 3)
                                                                                                                                (("2"
                                                                                                                                  (skosimp)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "t!1")
                                                                                                                                    (("2"
                                                                                                                                      (case-replace
                                                                                                                                       "t!1=0")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "fullset"
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "image"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (skosimp)
                                                                                                                                              (("2"
                                                                                                                                                (case-replace
                                                                                                                                                 "inverse_image[T, real](i!1, singleton[real](t!1))=inverse_image[T, real](II, singleton[real](t!1))")
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   3)
                                                                                                                                                  (("2"
                                                                                                                                                    (apply-extensionality
                                                                                                                                                     1
                                                                                                                                                     :hide?
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "inverse_image")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "singleton")
                                                                                                                                                          (("2"
                                                                                                                                                            (case-replace
                                                                                                                                                             "i!1(x!2) = t!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "II")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "-")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "*")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "phi")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "member")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case-replace
                                                                                                                                                                         "CC_SET(x!2)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst-cp
                                                                                                                                                                           -10
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -11)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case-replace
                                                                                                                                                                                       "CC_SET(x!1)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -11
                                                                                                                                                                                         "x!1")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -2
                                                                                                                                                                                           *
                                                                                                                                                                                           rl)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             -2
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "p!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "finite_partition?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "partition?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "extensionality_postulate"
                                                                                                                                                                                                       ("f"
                                                                                                                                                                                                        "Union(p!1)"
                                                                                                                                                                                                        "g"
                                                                                                                                                                                                        "fullset[T]"))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -
                                                                                                                                                                                                           "x!1")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "fullset"
                                                                                                                                                                                                               -1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "Union")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                                     "a!1")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "CC_SET"
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         +
                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "finite_partition_of?"
                                                                                                                                                                                                                           -21)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -21
                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "P1"
                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                                                       "x!3")
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "constant_over?")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (skolem!
                                                                                                                                                                                                                                           -23)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                                                                             -23
                                                                                                                                                                                                                                             "x!1")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                               -23
                                                                                                                                                                                                                                               "x!3")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "II")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "-")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "*")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "phi")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "member")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case-replace
                                                                                                                                                                             "CC_SET(x!2)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -10
                                                                                                                                                                               "x!2")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "convergent?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (hide-all-but
                                                                                                                               (-4
                                                                                                                                1))
                                                                                                                              (("3"
                                                                                                                                (skosimp)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "isf?")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "simple?")
                                                                                                                                    (("3"
                                                                                                                                      (flatten)
                                                                                                                                      (("3"
                                                                                                                                        (expand
                                                                                                                                         "measurable_function?")
                                                                                                                                        (("3"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "singleton[real](c!1)")
                                                                                                                                          (("3"
                                                                                                                                            (split)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "measurable_set?")
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (lemma
                                                                                                                                               "m_monotone"
                                                                                                                                               ("a"
                                                                                                                                                "inverse_image[T, real](II, singleton[real](c!1))"
                                                                                                                                                "b"
                                                                                                                                                "nonzero_set?(II)"))
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "x_le")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "mu_fin?")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "subset?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "inverse_image")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "nonzero_set?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "singleton")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "member")
                                                                                                                                                          (("2"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "convergent?")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "isf?")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "simple?")
                                                                                                                        (("2"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (apply-extensionality
                                                                                                                   1
                                                                                                                   :hide?
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -1
                                                                                                                     3)
                                                                                                                    (("2"
                                                                                                                      (case
                                                                                                                       "forall x: i!1(x)/=0")
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         2)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "remove")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (case-replace
                                                                                                                               "x!1=0")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (case-replace
                                                                                                                                   "x!1=CC")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "fullset"
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "image"
                                                                                                                                         -3)
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "II")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "-")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "*")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "phi")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "member")
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "CC_SET(x!2)")
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -10
                                                                                                                                                           "x!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (typepred
                                                                                                                                                         "p!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "finite_partition?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "partition?")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (lemma
                                                                                                                                                                 "extensionality_postulate"
                                                                                                                                                                 ("f"
                                                                                                                                                                  "Union(p!1)"
                                                                                                                                                                  "g"
                                                                                                                                                                  "fullset[T]"))
                                                                                                                                                                (("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1
                                                                                                                                                                   -2
                                                                                                                                                                   rl)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -2
                                                                                                                                                                     "x!2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (hide
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "fullset"
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "Union")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "CC_SET"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "a!1")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "finite_partition_of?"
                                                                                                                                                                                     -19)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -19
                                                                                                                                                                                       "a!1")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "P1"
                                                                                                                                                                                             1)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (skosimp)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (typepred
                                                                                                                                                                                                 "x!3")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "constant_over?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                       -21
                                                                                                                                                                                                       "x!2")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -21
                                                                                                                                                                                                         "x!3")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (case-replace
                                                                                                                                       "image[T, real](i!1, fullset[T])(x!1)")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "fullset")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "image")
                                                                                                                                          (("1"
                                                                                                                                            (skosimp)
                                                                                                                                            (("1"
                                                                                                                                              (inst
                                                                                                                                               +
                                                                                                                                               "x!2")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "II")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "-")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "*")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "phi")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("1"
                                                                                                                                                          (case
                                                                                                                                                           "CC_SET(x!2)")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -10
                                                                                                                                                             "x!2")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (replace
                                                                                                                                         1
                                                                                                                                         4)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "fullset")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "image")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "x!2")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "II")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "-")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "phi")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "member")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "*")
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "CC_SET(x!2)")
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -10
                                                                                                                                                                 "x!2")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (skosimp)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "fullset")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "image")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               +
                                                                                                                               "x!2")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (apply-extensionality
                                                                                                               1
                                                                                                               :hide?
                                                                                                               t)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "CC_SET(x!1)")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -8
                                                                                                                   "x!1")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "inverse_image"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "singleton")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replace
                                                                                                                   1
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "inverse_image"
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "singleton"
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "p!1")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "finite_partition?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "partition?")
                                                                                                                                    (("2"
                                                                                                                                      (flatten)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "extensionality_postulate"
                                                                                                                                         ("f"
                                                                                                                                          "Union(p!1)"
                                                                                                                                          "g"
                                                                                                                                          "{x: T | TRUE}"))
                                                                                                                                        (("2"
                                                                                                                                          (replace
                                                                                                                                           -1
                                                                                                                                           -2
                                                                                                                                           rl)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "x!1")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "Union"
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (skosimp)
                                                                                                                                                  (("2"
                                                                                                                                                    (typepred
                                                                                                                                                     "a!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "CC_SET"
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "a!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "finite_partition_of?")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -18
                                                                                                                                                               "a!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "P1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skosimp)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (typepred
                                                                                                                                                                         "x!2")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "constant_over?")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst-cp
                                                                                                                                                                               -20
                                                                                                                                                                               "x!2")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -20
                                                                                                                                                                                 "x!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "convergent?")
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "i!1")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "isf?")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "simple?")
                                                                                                                    (("2"
                                                                                                                      (flatten)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "convergent?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "isf?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "simple?")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "restrict")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (hide-all-but
                                                                                                                   (-2
                                                                                                                    1))
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "is_finite")
                                                                                                                    (("2"
                                                                                                                      (skeep
                                                                                                                       :preds?
                                                                                                                       t)
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         1
                                                                                                                         "N"
                                                                                                                         "f")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "restrict")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "injective?")
                                                                                                                            (("2"
                                                                                                                              (skeep
                                                                                                                               :preds?
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -6
                                                                                                                                 "x1"
                                                                                                                                 "x2")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("3"
                                                                                                  (assert)
                                                                                                  (("3"
                                                                                                    (skosimp)
                                                                                                    (("3"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         "isf?"
                                                                                                         -1)
                                                                                                        (("3"
                                                                                                          (expand
                                                                                                           "simple?")
                                                                                                          (("3"
                                                                                                            (flatten)
                                                                                                            (("3"
                                                                                                              (expand
                                                                                                               "measurable_function?")
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "NZ_IMAGE"
                                                                                                                 1)
                                                                                                                (("3"
                                                                                                                  (assert)
                                                                                                                  (("3"
                                                                                                                    (postpone)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("4"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("4"
                                                                                                  (skosimp)
                                                                                                  (("4"
                                                                                                    (typepred
                                                                                                     "i!1")
                                                                                                    (("4"
                                                                                                      (expand
                                                                                                       "isf?"
                                                                                                       -1)
                                                                                                      (("4"
                                                                                                        (expand
                                                                                                         "simple?")
                                                                                                        (("4"
                                                                                                          (flatten)
                                                                                                          (("4"
                                                                                                            (expand
                                                                                                             "measurable_function?")
                                                                                                            (("4"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "singleton[real](c!1)")
                                                                                                              (("4"
                                                                                                                (expand
                                                                                                                 "measurable_set?")
                                                                                                                (("4"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("4"
                                                                                                                    (lemma
                                                                                                                     "m_monotone"
                                                                                                                     ("a"
                                                                                                                      "inverse_image[T, real](i!1, singleton[real](c!1))"
                                                                                                                      "b"
                                                                                                                      "nonzero_set?(i!1)"))
                                                                                                                    (("4"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "x_le")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "mu_fin?")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "subset?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "nonzero_set?")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "singleton")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "inverse_image")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("5"
                                                                                                (assert)
                                                                                                (("5"
                                                                                                  (expand
                                                                                                   "restrict")
                                                                                                  (("5"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("5"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("5"
                                                                                                        (expand
                                                                                                         "isf?"
                                                                                                         -1)
                                                                                                        (("5"
                                                                                                          (expand
                                                                                                           "simple?")
                                                                                                          (("5"
                                                                                                            (flatten)
                                                                                                            (("5"
                                                                                                              (expand
                                                                                                               "is_countable")
                                                                                                              (("5"
                                                                                                                (expand
                                                                                                                 "is_finite"
                                                                                                                 -2)
                                                                                                                (("5"
                                                                                                                  (skosimp)
                                                                                                                  (("5"
                                                                                                                    (inst
                                                                                                                     1
                                                                                                                     "f!1")
                                                                                                                    (("5"
                                                                                                                      (expand
                                                                                                                       "restrict")
                                                                                                                      (("5"
                                                                                                                        (hide-all-but
                                                                                                                         (-2
                                                                                                                          1))
                                                                                                                        (("5"
                                                                                                                          (expand
                                                                                                                           "injective?")
                                                                                                                          (("5"
                                                                                                                            (skeep
                                                                                                                             :preds?
                                                                                                                             t)
                                                                                                                            (("5"
                                                                                                                              (inst
                                                                                                                               -6
                                                                                                                               "x1"
                                                                                                                               "x2")
                                                                                                                              (("5"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -12
                                                                                       4)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "finite_partition_of?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -12
                                                                                             "E!1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "constant_over?")
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (case-replace
                                                                                                           "y!1=CC")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (skosimp)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "II"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "-"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "*"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "phi"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (inst-cp
                                                                                                                             -15
                                                                                                                             "x!1")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -16
                                                                                                                               *
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (case-replace
                                                                                                                                 "CC_SET(x!1)")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "CC_SET"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "E!1")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "P1"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -15
                                                                                                                                             "x!2")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "y!1")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "II"
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "-"
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "*"
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "phi"
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "CC_SET(x!1)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "CC_SET"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (skosimp)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "a!1")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "P1"
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (typepred
                                                                                                                                       "x!1")
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "p!1")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "finite_partition?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "fullset")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "partition?")
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -2
                                                                                                                                                     "a!1"
                                                                                                                                                     "E!1")
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "a!1=E!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -8
                                                                                                                                                           "x!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -22
                                                                                                                                                             "x!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "disjoint?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "empty?")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "x!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "intersection")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "member")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "x!1")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -14
                                                                                                                                 "x!1")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "II"
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "-"
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -14)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "*"
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "phi")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (case-replace
                                                                                                                         "CC_SET(choose(E!1))")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "CC_SET"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "a!1")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "P1"
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "choose(E!1)")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               -14
                                                                               4)
                                                                              (("2"
                                                                                (apply-extensionality
                                                                                 1
                                                                                 :hide?
                                                                                 t)
                                                                                (("2"
                                                                                  (case-replace
                                                                                   "x!1=0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "rest"
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "remove")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "NZ_IMAGE")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (case-replace
                                                                                       "image(II, fullset[T])(x!1)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "fullset"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "image"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (skosimp)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "II")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "-"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "CC_SET(x!2)")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -9
                                                                                                     "x!2")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -9)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "*"
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "phi"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "*"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "phi"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "member")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "rest"
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "remove")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "NZ_IMAGE"
                                                                                                                   3
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "fullset"
                                                                                                                     3)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "image"
                                                                                                                       3)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         3)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "/="
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "CC_SET"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "p!1")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "finite_partition?")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "fullset")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "partition?")
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "extensionality_postulate"
                                                                                                                                           ("f"
                                                                                                                                            "Union(p!1)"
                                                                                                                                            "g"
                                                                                                                                            "{x: T | TRUE}"))
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             -2
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "x!2")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "Union"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "a!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "a!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "finite_partition_of?")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -20
                                                                                                                                                               "a!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "P1"
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "x!3")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "finite_partition_of?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -21
                                                                                                                                                                     "a!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "constant_over?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (skosimp)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst-cp
                                                                                                                                                                             -22
                                                                                                                                                                             "x!2")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -22
                                                                                                                                                                               "x!3")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "CC"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           +
                                                                                                                           "x!2")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         1
                                                                                         3)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "rest"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "remove")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "fullset"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "image"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "NZ_IMAGE"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "fullset"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "image"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "x!2")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "II"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "-")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "*"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "phi"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "CC_SET(x!2)")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -9
                                                                                                                                 "x!2")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "CC")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "i!1")
                                                                  (("2"
                                                                    (expand
                                                                     "isf?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (case
                                                                         "subset?(CC_SET,nonzero_set?(i!1))")
                                                                        (("1"
                                                                          (lemma
                                                                           "m_monotone"
                                                                           ("a"
                                                                            "CC_SET"
                                                                            "b"
                                                                            "nonzero_set?(i!1)"))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "x_le")
                                                                              (("1"
                                                                                (expand
                                                                                 "mu_fin?")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           -12
                                                                           5)
                                                                          (("2"
                                                                            (expand
                                                                             "subset?"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "member")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst
                                                                                   -6
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "nonzero_set?")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide -1 -7 4)
                                                          (("2"
                                                            (skosimp)
                                                            (("2"
                                                              (expand
                                                               "CC_SET")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (typepred
                                                                   "a!1")
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (expand
                                                                       "P1"
                                                                       -2)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       +
                                                                       "a!1")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (-1 -7 1))
                                                  (("2"
                                                    (lemma
                                                     "finite_countable[set[T]]"
                                                     ("x" "P1"))
                                                    (("1"
                                                      (hide -2)
                                                      (("1"
                                                        (expand "restrict")
                                                        (("1"
                                                          (expand
                                                           "is_countable")
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (typepred "f!1")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "lambda (x:(LAMBDA (s: (S)): P1(s))): f!1(x)")
                                                                (("1"
                                                                  (expand
                                                                   "injective?")
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x1!1"
                                                                       "x2!1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (-1 -6 1))
                                                (("2"
                                                  (typepred "p!1")
                                                  (("2"
                                                    (expand
                                                     "finite_partition?")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (lemma
                                                         "finite_subset[set[T]]"
                                                         ("s" "P1" "A" "p!1"))
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "P1")
                                              (("2"
                                                (expand "subset?")
                                                (("2"
                                                  (expand "member")
                                                  (("2" (skosimp) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (hide 2)
              (("3" (skosimp*)
                (("3" (expand "convergent?")
                  (("3" (typepred "p!1")
                    (("3" (expand "finite_partition?")
                      (("3" (flatten) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("4" (hide 2)
              (("4" (skosimp*)
                (("4" (expand "finite_partition_of?")
                  (("4" (inst - "Y!1")
                    (("4" (flatten) (("4" (assert) nil nil)) nil)) nil))
                  nil))
                nil))
              nil)
             ("5" (hide 2)
              (("5" (skosimp*)
                (("5" (expand "nonempty?") (("5" (propax) nil nil)) nil))
                nil))
              nil)
             ("6" (hide 2)
              (("6" (skosimp*)
                (("6" (expand "nonempty?") (("6" (propax) nil nil)) nil))
                nil))
              nil)
             ("7" (hide 2)
              (("7" (skosimp*)
                (("7" (typepred "p!1")
                  (("7" (expand "finite_partition?")
                    (("7" (flatten)
                      (("7" (lemma "finite_countable[set[T]]" ("x" "p!1"))
                        (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("8" (hide 2)
              (("8" (skosimp)
                (("8" (typepred "i!1")
                  (("8" (expand "isf?")
                    (("8" (expand "simple?")
                      (("8" (flatten)
                        (("8"
                          (lemma "finite_subset[real]"
                           ("s"
                            "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                            "A" "image(i!1, fullset[T])"))
                          (("1" (assert)
                            (("1" (hide-all-but 1)
                              (("1" (expand "fullset")
                                (("1" (expand "image")
                                  (("1" (expand "subset?")
                                    (("1" (expand "member")
                                      (("1" (skosimp*) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (hide 2)
          (("3" (skosimp*)
            (("3" (expand "convergent?")
              (("3" (typepred "p!1")
                (("3" (expand "finite_partition?") (("3" (flatten) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("4" (skosimp*)
          (("4" (expand "finite_partition_of?")
            (("4" (inst - "Y!1")
              (("4" (flatten) (("4" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("5" (hide 2)
          (("5" (skosimp*)
            (("5" (expand "nonempty?") (("5" (propax) nil nil)) nil)) nil))
          nil)
         ("6" (hide 2)
          (("6" (skosimp*)
            (("6" (expand "nonempty?") (("6" (propax) nil nil)) nil)) nil))
          nil)
         ("7" (hide 2)
          (("7" (skosimp)
            (("7" (typepred "p!1")
              (("7" (expand "finite_partition?")
                (("7" (flatten)
                  (("7" (lemma "finite_countable[set[T]]" ("x" "p!1"))
                    (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("8" (hide 2)
          (("8" (skosimp)
            (("8" (hide -1)
              (("8" (typepred "i!1")
                (("8" (expand "isf?")
                  (("8" (expand "simple?")
                    (("8" (flatten)
                      (("8"
                        (lemma "finite_subset[real]"
                         ("s"
                          "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                          "A" "image(i!1, fullset[T])"))
                        (("1" (assert)
                          (("1" (hide-all-but 1)
                            (("1" (expand "fullset")
                              (("1" (expand "image")
                                (("1" (expand "subset?")
                                  (("1" (expand "member")
                                    (("1" (skosimp*) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (isf_integral_def-1 nil 3407610741
   ("" (assert)
    (("" (skolem + ("_" "p!1"))
      ((""
        (case "FORALL (n:nat,i: isf):
        finite_partition_of?(i)(p!1) & card({c | c /= 0 and image(i,fullset[T])(c)}) = n IMPLIES
         isf_integral(i) =
          sigma[set[T]]
              (p!1,
               LAMBDA Y:
                 IF (NOT p!1(Y)) OR empty?(Y) OR i(choose[T](Y)) = 0 THEN 0
                 ELSE i(choose[T](Y)) * mu(Y)
                 ENDIF)")
        (("1" (skosimp)
          (("1"
            (inst - "card({c | c /= 0 AND image(i!1, fullset[T])(c)})" "i!1")
            (("1" (assert) nil nil)
             ("2" (hide-all-but 1)
              (("2" (typepred "i!1")
                (("2" (expand "isf?")
                  (("2" (expand "simple?")
                    (("2" (flatten)
                      (("2"
                        (lemma "finite_subset[real]"
                         ("s"
                          "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                          "A" "image(i!1, fullset[T])"))
                        (("1" (split -1)
                          (("1" (propax) nil nil)
                           ("2" (hide-all-but 1)
                            (("2" (expand "fullset")
                              (("2" (expand "image")
                                (("2" (expand "subset?")
                                  (("2" (expand "member")
                                    (("2" (skosimp*) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (induct "n")
            (("1" (skosimp)
              (("1"
                (lemma "card_is_0[real]"
                 ("S" "{c | c /= 0 AND image(i!1, fullset[T])(c)}"))
                (("1" (assert)
                  (("1" (replace -3)
                    (("1" (expand "isf_integral")
                      (("1"
                        (case "nonempty?(image[T, real](i!1, fullset[T]))")
                        (("1"
                          (case-replace
                           "image[T, real](i!1, fullset[T])=singleton[real](0)")
                          (("1" (rewrite "sigma_singleton" 1)
                            (("1" (case "forall x: i!1(x) = 0")
                              (("1"
                                (lemma "sigma_eq"
                                 ("X" "p!1" "f" "LAMBDA (Y:set[T]):
              IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
              ELSE i!1(choose[T](Y)) * mu(Y)
              ENDIF" "g" "lambda (Y:set[T]):0"))
                                (("1" (split -1)
                                  (("1" (replace -1)
                                    (("1" (rewrite "sigma_zero" 1) nil nil))
                                    nil)
                                   ("2" (hide 2)
                                    (("2" (skosimp)
                                      (("2"
                                        (lift-if)
                                        (("2"
                                          (prop)
                                          (("2"
                                            (inst - "choose[T](t!1)")
                                            nil
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (typepred "p!1")
                                  (("2" (expand "finite_partition?")
                                    (("2" (expand "convergent?")
                                      (("2" (flatten) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("3" (typepred "p!1")
                                  (("3" (expand "convergent?")
                                    (("3" (expand "finite_partition?")
                                      (("3" (flatten) nil nil)) nil))
                                    nil))
                                  nil)
                                 ("4" (skosimp)
                                  (("4" (expand "finite_partition_of?")
                                    (("4" (inst -6 "Y!1")
                                      (("4"
                                        (flatten)
                                        (("4" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("5" (skosimp)
                                  (("5" (expand "nonempty?")
                                    (("5" (propax) nil nil)) nil))
                                  nil)
                                 ("6" (skosimp)
                                  (("6" (expand "nonempty?")
                                    (("6" (propax) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2" (skosimp)
                                  (("2"
                                    (lemma "extensionality_postulate"
                                     ("f" "image[T, real](i!1, fullset[T])"
                                      "g" "singleton[real](0)"))
                                    (("2" (replace -1 -2 rl)
                                      (("2"
                                        (inst - "i!1(x!1)")
                                        (("2"
                                          (expand "singleton")
                                          (("2"
                                            (replace -2 1 rl)
                                            (("2"
                                              (expand "fullset")
                                              (("2"
                                                (expand "image")
                                                (("2" (inst + "x!1") nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (skosimp*)
                                (("2"
                                  (case-replace
                                   "inverse_image[T, real](i!1, singleton[real](c!1))=emptyset[T]")
                                  (("1" (lemma "m_emptyset")
                                    (("1" (expand "mu_fin?")
                                      (("1"
                                        (replace -1)
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide 3)
                                    (("2" (apply-extensionality 1 :hide? t)
                                      (("2"
                                        (expand "emptyset")
                                        (("2"
                                          (expand "inverse_image")
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (expand "singleton")
                                              (("2"
                                                (lemma
                                                 "extensionality_postulate"
                                                 ("f"
                                                  "image[T, real](i!1, fullset[T])"
                                                  "g"
                                                  "{y: real | y = 0}"))
                                                (("2"
                                                  (replace -1 -3 rl)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (inst - "i!1(x!1)")
                                                      (("2"
                                                        (replace -1 * rl)
                                                        (("2"
                                                          (replace -2 1 rl)
                                                          (("2"
                                                            (expand "fullset")
                                                            (("2"
                                                              (expand "image")
                                                              (("2"
                                                                (inst + "x!1")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (apply-extensionality :hide? t)
                              (("2" (expand "singleton")
                                (("2" (case-replace "x!1=0")
                                  (("1" (hide -5)
                                    (("1"
                                      (lemma
                                       "extensionality_postulate"
                                       ("f"
                                        "{c | c /= 0 AND image(i!1, fullset[T])(c)}"
                                        "g"
                                        "emptyset[real]"))
                                      (("1"
                                        (replace -1 -4 rl)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (expand "nonempty?")
                                            (("1"
                                              (expand "empty?")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (inst - "x!2")
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (expand "emptyset")
                                                        (("1"
                                                          (expand "image")
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (inst + "x!3")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert)
                                    (("2"
                                      (lemma
                                       "extensionality_postulate"
                                       ("f"
                                        "{c | c /= 0 AND image(i!1, fullset[T])(c)}"
                                        "g"
                                        "emptyset[real]"))
                                      (("2"
                                        (replace -1 -4 rl)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (inst - "x!1")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "emptyset")
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (expand "nonempty?")
                          (("2" (hide -2 -4)
                            (("2" (rewrite "emptyset_is_empty?")
                              (("2" (replace -1)
                                (("2" (rewrite "sigma_empty" 1)
                                  (("1"
                                    (lemma
                                     "extensionality_postulate[real,bool]"
                                     ("f" "image[T, real](i!1, fullset[T])"
                                      "g" "emptyset[real]"))
                                    (("1" (replace -1 -2 rl)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (lemma
                                           "sigma_countable.sigma_eq"
                                           ("X"
                                            "p!1"
                                            "f"
                                            "LAMBDA (Y:set[T]):
              IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
              ELSE i!1(choose[T](Y)) * mu(Y)
              ENDIF"
                                            "g"
                                            "lambda(Y:set[T]):0"))
                                          (("1"
                                            (split -1)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (rewrite "sigma_zero" 1)
                                                nil
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (typepred "t!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lift-if)
                                                      (("2"
                                                        (prop)
                                                        (("2"
                                                          (inst
                                                           -
                                                           "i!1(choose[T](t!1))")
                                                          (("2"
                                                            (expand
                                                             "emptyset")
                                                            (("2"
                                                              (expand
                                                               "fullset")
                                                              (("2"
                                                                (expand
                                                                 "image")
                                                                (("2"
                                                                  (inst
                                                                   +
                                                                   "choose[T](t!1)")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "convergent?")
                                            (("2"
                                              (typepred "p!1")
                                              (("2"
                                                (expand "finite_partition?")
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (typepred "p!1")
                                            (("3"
                                              (expand "finite_partition?")
                                              (("3"
                                                (expand "convergent?")
                                                (("3" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("4"
                                            (skosimp)
                                            (("4"
                                              (expand "finite_partition_of?")
                                              (("4"
                                                (inst -3 "Y!1")
                                                (("4"
                                                  (flatten)
                                                  (("4" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("5"
                                            (skosimp)
                                            (("5"
                                              (expand "nonempty?")
                                              (("5" (propax) nil nil))
                                              nil))
                                            nil)
                                           ("6"
                                            (skosimp)
                                            (("6"
                                              (expand "nonempty?")
                                              (("6" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide 2)
                                    (("2" (skosimp)
                                      (("2"
                                        (case-replace
                                         "inverse_image[T, real](i!1, singleton[real](c!1))=emptyset[T]")
                                        (("1"
                                          (lemma "m_emptyset")
                                          (("1"
                                            (expand "mu_fin?")
                                            (("1"
                                              (replace -1)
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 3)
                                          (("2"
                                            (apply-extensionality 1 :hide? t)
                                            (("2"
                                              (expand "emptyset")
                                              (("2"
                                                (expand "inverse_image")
                                                (("2"
                                                  (expand "singleton")
                                                  (("2"
                                                    (expand "member")
                                                    (("2"
                                                      (lemma
                                                       "extensionality_postulate"
                                                       ("f"
                                                        "image[T, real](i!1, fullset[T])"
                                                        "g"
                                                        "{x: real | FALSE}"))
                                                      (("2"
                                                        (replace -1 -3 rl)
                                                        (("2"
                                                          (inst - "c!1")
                                                          (("2"
                                                            (expand "fullset")
                                                            (("2"
                                                              (expand "image")
                                                              (("2"
                                                                (inst + "x!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (typepred "i!1")
                    (("2" (expand "isf?")
                      (("2" (expand "simple?")
                        (("2" (flatten)
                          (("2"
                            (lemma "finite_subset[real]"
                             ("s"
                              "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                              "A" "image(i!1, fullset[T])"))
                            (("1" (split -1)
                              (("1" (propax) nil nil)
                               ("2" (hide-all-but 1)
                                (("2" (expand "fullset")
                                  (("2" (expand "image")
                                    (("2" (expand "subset?")
                                      (("2"
                                        (expand "member")
                                        (("2" (skosimp*) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (propax) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (skosimp*)
              (("2"
                (name-replace "NZ_IMAGE"
                 "{c | c /= 0 AND image(i!1, fullset[T])(c)}")
                (("2" (lemma "nonempty_card[real]" ("S" "NZ_IMAGE"))
                  (("2" (assert)
                    (("2" (lemma "card_rest[real]" ("S" "NZ_IMAGE"))
                      (("2" (replace -5)
                        (("2" (simplify -1)
                          (("2" (lemma "choose_member[real]" ("a" "NZ_IMAGE"))
                            (("2" (expand "nonempty?")
                              (("2" (replace 1)
                                (("2" (expand "NZ_IMAGE" -1 2)
                                  (("2" (expand "member" -1)
                                    (("2" (flatten)
                                      (("2"
                                        (name-replace
                                         "CC"
                                         "choose[real](NZ_IMAGE)")
                                        (("2"
                                          (name
                                           "P1"
                                           "{a:set[T] | p!1(a) & forall (x:(a)): i!1(x) = CC}")
                                          (("2"
                                            (case "subset?(P1,p!1)")
                                            (("1"
                                              (case "is_finite[set[T]](P1)")
                                              (("1"
                                                (lemma
                                                 "measurable_Union"
                                                 ("M" "P1"))
                                                (("1"
                                                  (expand "restrict" -1)
                                                  (("1"
                                                    (expand "Union" -1)
                                                    (("1"
                                                      (name-replace
                                                       "CC_SET"
                                                       "{x: T | EXISTS (a: (LAMBDA (s: ((S))): P1(s))): a(x)}")
                                                      (("1"
                                                        (case
                                                         "forall x: CC_SET(x) => i!1(x)=CC & exists (a:(P1)): a(x)")
                                                        (("1"
                                                          (name
                                                           "II"
                                                           "i!1-CC*phi(CC_SET)")
                                                          (("1"
                                                            (copy -3)
                                                            (("1"
                                                              (expand
                                                               "measurable_set?"
                                                               -1)
                                                              (("1"
                                                                (case
                                                                 "mu_fin?(CC_SET)")
                                                                (("1"
                                                                  (lemma
                                                                   "isf_phi"
                                                                   ("E"
                                                                    "CC_SET"))
                                                                  (("1"
                                                                    (lemma
                                                                     "isf_scal"
                                                                     ("c"
                                                                      "CC"
                                                                      "i"
                                                                      "phi[T, S](CC_SET)"))
                                                                    (("1"
                                                                      (lemma
                                                                       "isf_diff"
                                                                       ("i1"
                                                                        "i!1"
                                                                        "i2"
                                                                        "*[T](CC, phi[T, S](CC_SET))"))
                                                                      (("1"
                                                                        (replace
                                                                         -6)
                                                                        (("1"
                                                                          (inst
                                                                           -14
                                                                           "II")
                                                                          (("1"
                                                                            (case-replace
                                                                             "{c | c /= 0 AND image(II, fullset[T])(c)}=rest(NZ_IMAGE)")
                                                                            (("1"
                                                                              (replace
                                                                               -14)
                                                                              (("1"
                                                                                (hide
                                                                                 -3
                                                                                 -14
                                                                                 -17)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "finite_partition_of?(II)(p!1)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "isf_integral(i!1) = isf_integral(II) + CC*mu(CC_SET)")
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (name-replace
                                                                                             "LHS"
                                                                                             "isf_integral(II)")
                                                                                            (("1"
                                                                                              (name
                                                                                               "P2"
                                                                                               "difference(p!1,P1)")
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "difference_subset"
                                                                                                 ("a"
                                                                                                  "p!1"
                                                                                                  "b"
                                                                                                  "P1"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "difference_disjoint"
                                                                                                   ("b"
                                                                                                    "p!1"
                                                                                                    "a"
                                                                                                    "P1"))
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -3)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "union(P1,P2)=p!1")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "is_finite(P2)")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "is_finite(p!1)")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "sigma_disjoint_union"
                                                                                                             ("f"
                                                                                                              "LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
              ELSE i!1(choose[T](Y)) * mu(Y)
              ENDIF"
                                                                                                              "X"
                                                                                                              "P1"
                                                                                                              "Y"
                                                                                                              "P2"))
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -4)
                                                                                                              (("1"
                                                                                                                (replace
                                                                                                                 -5)
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1
                                                                                                                   3)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "sigma_eq"
                                                                                                                       ("X"
                                                                                                                        "P1"
                                                                                                                        "f"
                                                                                                                        "LAMBDA Y:
               IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
               ELSE i!1(choose[T](Y)) * mu(Y)
               ENDIF"
                                                                                                                        "g"
                                                                                                                        "LAMBDA Y: if not P1(Y) then 0 else CC*mu(Y) endif"))
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "forall (c:real,f:(convergent?(P1))): (forall (x:(P1)): f(x) = c*mu(x)) => sigma(P1, f) = c*mu(CC_SET)")
                                                                                                                              (("1"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "CC"
                                                                                                                                 "LAMBDA Y: IF NOT P1(Y) THEN 0 ELSE CC * mu(Y) ENDIF")
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (hide
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "sigma_disjoint_union"
                                                                                                                                           ("X"
                                                                                                                                            "P1"
                                                                                                                                            "Y"
                                                                                                                                            "P2"
                                                                                                                                            "f"
                                                                                                                                            " LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR II(choose[T](Y)) = 0 THEN 0
              ELSE II(choose[T](Y)) * mu(Y)
              ENDIF"))
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -6)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -5)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "0"
                                                                                                                                                     "LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR II(choose[T](Y)) = 0 THEN 0
              ELSE II(choose[T](Y)) * mu(Y)
              ENDIF")
                                                                                                                                                    (("1"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -19)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide
                                                                                                                                                                 -19)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "sigma_eq"
                                                                                                                                                                   ("X"
                                                                                                                                                                    "P2"
                                                                                                                                                                    "f"
                                                                                                                                                                    "LAMBDA Y:
              IF (NOT p!1(Y)) OR empty?(Y) OR II(choose[T](Y)) = 0 THEN 0
              ELSE II(choose[T](Y)) * mu(Y)
              ENDIF"
                                                                                                                                                                    "g"
                                                                                                                                                                    "LAMBDA Y:
               IF (NOT p!1(Y)) OR empty?(Y) OR i!1(choose[T](Y)) = 0 THEN 0
               ELSE i!1(choose[T](Y)) * mu(Y)
               ENDIF"))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (hide
                                                                                                                                                                       4)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "t!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "subset?"
                                                                                                                                                                             -6)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "t!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (case-replace
                                                                                                                                                                                     "empty?(t!1)")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (case-replace
                                                                                                                                                                                         "i!1(choose[T](t!1)) = 0")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "II"
                                                                                                                                                                                           2)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "-"
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "*"
                                                                                                                                                                                                 2)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "phi")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "member")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (case-replace
                                                                                                                                                                                                       "CC_SET(choose[T](t!1))")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (inst
                                                                                                                                                                                                         -16
                                                                                                                                                                                                         "choose[T](t!1)")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          nil
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil)
                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "II"
                                                                                                                                                                                             3)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "-"
                                                                                                                                                                                               3)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "*"
                                                                                                                                                                                                 3)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "P2"
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "difference"
                                                                                                                                                                                                     -1)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "member")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "phi"
                                                                                                                                                                                                         4)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "member")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (case-replace
                                                                                                                                                                                                             "CC_SET(choose[T](t!1))")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               -14
                                                                                                                                                                                                               "choose[T](t!1)")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "P1"
                                                                                                                                                                                                                       3)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                                           "x!1")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                             "t!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "finite_partition_of?"
                                                                                                                                                                                                                               -23)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -23
                                                                                                                                                                                                                                 "t!1")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                       "constant_over?")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (inst-cp
                                                                                                                                                                                                                                           -24
                                                                                                                                                                                                                                           "choose[T](t!1)")
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                             -24
                                                                                                                                                                                                                                             "x!1")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil)
                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                              (replace
                                                                                                                                                                                                               1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (replace
                                                                                                                                                                                                                 2)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil)
                                                                                                                                                                                         ("3"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "nonempty?")
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (propax)
                                                                                                                                                                                            nil
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "convergent?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("3"
                                                                                                                                                                    (expand
                                                                                                                                                                     "convergent?")
                                                                                                                                                                    (("3"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           -19
                                                                                                                                                           4)
                                                                                                                                                          (("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "x!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "subset?"
                                                                                                                                                               -17)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -17
                                                                                                                                                                 "x!1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case-replace
                                                                                                                                                                       "empty?(x!1)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case-replace
                                                                                                                                                                           "II(choose[T](x!1)) = 0")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (hide
                                                                                                                                                                               3)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "II"
                                                                                                                                                                                 1)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "-"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "*"
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "phi")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (expand
                                                                                                                                                                                         "member")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (case-replace
                                                                                                                                                                                           "CC_SET(choose[T](x!1))")
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (inst
                                                                                                                                                                                             -15
                                                                                                                                                                                             "choose[T](x!1)")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             1
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "p!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "finite_partition?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "partition?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "extensionality_postulate"
                                                                                                                                                                                                       ("f"
                                                                                                                                                                                                        "Union(p!1)"
                                                                                                                                                                                                        "g"
                                                                                                                                                                                                        "fullset[T]"))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (hide
                                                                                                                                                                                                           -1)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "CC_SET"
                                                                                                                                                                                                             1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               +
                                                                                                                                                                                                               "x!1")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "finite_partition_of?"
                                                                                                                                                                                                                 -22)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                   -22
                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("3"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nonempty?")
                                                                                                                                                                            (("3"
                                                                                                                                                                              (propax)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (expand
                                                                                                                                                       "convergent?")
                                                                                                                                                      (("2"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("3"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("3"
                                                                                                                                                        (expand
                                                                                                                                                         "finite_partition_of?"
                                                                                                                                                         -8)
                                                                                                                                                        (("3"
                                                                                                                                                          (inst
                                                                                                                                                           -8
                                                                                                                                                           "Y!1")
                                                                                                                                                          (("3"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("3"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("4"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("4"
                                                                                                                                                        (expand
                                                                                                                                                         "nonempty?")
                                                                                                                                                        (("4"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("5"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("5"
                                                                                                                                                        (expand
                                                                                                                                                         "nonempty?")
                                                                                                                                                        (("5"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (replace
                                                                                                                                             -4)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "convergent?")
                                                                                                                                              (("2"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (skosimp)
                                                                                                                                            (("3"
                                                                                                                                              (expand
                                                                                                                                               "finite_partition_of?"
                                                                                                                                               -9)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -9
                                                                                                                                                 "Y!1")
                                                                                                                                                (("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (skosimp)
                                                                                                                                            (("4"
                                                                                                                                              (expand
                                                                                                                                               "nonempty?")
                                                                                                                                              (("4"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "x!1")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "convergent?")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("3"
                                                                                                                                  (hide
                                                                                                                                   4
                                                                                                                                   -19)
                                                                                                                                  (("3"
                                                                                                                                    (skosimp)
                                                                                                                                    (("3"
                                                                                                                                      (expand
                                                                                                                                       "subset?"
                                                                                                                                       -17)
                                                                                                                                      (("3"
                                                                                                                                        (inst
                                                                                                                                         -17
                                                                                                                                         "Y!1")
                                                                                                                                        (("3"
                                                                                                                                          (expand
                                                                                                                                           "member")
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (expand
                                                                                                                                               "finite_partition_of?"
                                                                                                                                               -20)
                                                                                                                                              (("3"
                                                                                                                                                (inst
                                                                                                                                                 -20
                                                                                                                                                 "Y!1")
                                                                                                                                                (("3"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (expand
                                                                                                                                                       "P1"
                                                                                                                                                       -1)
                                                                                                                                                      (("3"
                                                                                                                                                        (split
                                                                                                                                                         -22)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "emptyset_is_empty?")
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "mu_fin?")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "m_emptyset")
                                                                                                                                                                (("1"
                                                                                                                                                                  (assert)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "choose(Y!1)")
                                                                                                                                                          (("2"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 4
                                                                                                                                 -19)
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (1
                                                                                                                                    2
                                                                                                                                    3
                                                                                                                                    -19
                                                                                                                                    -18
                                                                                                                                    -16
                                                                                                                                    -15
                                                                                                                                    -14
                                                                                                                                    -11
                                                                                                                                    -1))
                                                                                                                                  (("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (case
                                                                                                                                       "forall (n:nat,X:setofsets[T]): subset?(X,P1) & card(X)=n => sigma(X,f!1)=c!1*mu(Union(X))")
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "card(P1)"
                                                                                                                                         "P1")
                                                                                                                                        (("1"
                                                                                                                                          (split
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (case-replace
                                                                                                                                             "Union(P1)=CC_SET")
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1
                                                                                                                                               2)
                                                                                                                                              (("1"
                                                                                                                                                (apply-extensionality
                                                                                                                                                 1
                                                                                                                                                 :hide?
                                                                                                                                                 t)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "CC_SET")
                                                                                                                                                  (("1"
                                                                                                                                                    (case-replace
                                                                                                                                                     "Union(P1)(x!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "Union"
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (skosimp)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "a!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "subset?")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -7
                                                                                                                                                               "a!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "member")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "finite_partition_of?")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -9
                                                                                                                                                                     "a!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       1
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("2"
                                                                                                                                                            (typepred
                                                                                                                                                             "a!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "Union")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 +
                                                                                                                                                                 "a!1")
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             1)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "subset?")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (induct
                                                                                                                                         "n")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (lemma
                                                                                                                                             "card_is_0"
                                                                                                                                             ("S"
                                                                                                                                              "X!1"))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -3)
                                                                                                                                                (("1"
                                                                                                                                                  (replace
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "Union_emptyset_rew")
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "sigma_empty")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "mu")
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "m_emptyset")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("2"
                                                                                                                                          (skosimp*)
                                                                                                                                          (("2"
                                                                                                                                            (hide
                                                                                                                                             2)
                                                                                                                                            (("2"
                                                                                                                                              (lemma
                                                                                                                                               "nonempty_card"
                                                                                                                                               ("S"
                                                                                                                                                "X!1"))
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "sigma_choose_rest"
                                                                                                                                                   1)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "rest(X!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (lemma
                                                                                                                                                       "card_rest"
                                                                                                                                                       ("S"
                                                                                                                                                        "X!1"))
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "nonempty?"
                                                                                                                                                           -2)
                                                                                                                                                          (("1"
                                                                                                                                                            (replace
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -4)
                                                                                                                                                                (("1"
                                                                                                                                                                  (simplify
                                                                                                                                                                   -2)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1
                                                                                                                                                                     -4)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (split
                                                                                                                                                                       -1)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (replace
                                                                                                                                                                         -1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (hide
                                                                                                                                                                           -1)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (lemma
                                                                                                                                                                             "choose_member"
                                                                                                                                                                             ("a"
                                                                                                                                                                              "X!1"))
                                                                                                                                                                            (("1"
                                                                                                                                                                              (replace
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "choose(X!1)")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (replace
                                                                                                                                                                                   -3)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     -3)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (lemma
                                                                                                                                                                                       "finite_subset"
                                                                                                                                                                                       ("s"
                                                                                                                                                                                        "X!1"
                                                                                                                                                                                        "A"
                                                                                                                                                                                        "P1"))
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "finite_subset"
                                                                                                                                                                                           ("s"
                                                                                                                                                                                            "rest(X!1)"
                                                                                                                                                                                            "A"
                                                                                                                                                                                            "X!1"))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (rewrite
                                                                                                                                                                                             "rest_subset")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (lemma
                                                                                                                                                                                               "finite_countable"
                                                                                                                                                                                               ("x"
                                                                                                                                                                                                "X!1"))
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (lemma
                                                                                                                                                                                                 "finite_countable"
                                                                                                                                                                                                 ("x"
                                                                                                                                                                                                  "rest(X!1)"))
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                   "measurable_Union"
                                                                                                                                                                                                   ("M"
                                                                                                                                                                                                    "X!1"))
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                     "measurable_Union"
                                                                                                                                                                                                     ("M"
                                                                                                                                                                                                      "rest(X!1)"))
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "restrict")
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "Union"
                                                                                                                                                                                                         (2
                                                                                                                                                                                                          -1
                                                                                                                                                                                                          -2))
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (case-replace
                                                                                                                                                                                                           "{x: T |
                         EXISTS (a: (LAMBDA (s: (S)): rest(X!1)(s))): a(x)}={x: T | EXISTS (a: (rest(X!1))): a(x)}")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (case-replace
                                                                                                                                                                                                               "{x: T | EXISTS (a: (LAMBDA (s: (S)): X!1(s))): a(x)}={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                 -1)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (case
                                                                                                                                                                                                                   "measurable_set?(choose(X!1))")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (lemma
                                                                                                                                                                                                                     "m_disjoint_union"
                                                                                                                                                                                                                     ("a"
                                                                                                                                                                                                                      "choose(X!1)"
                                                                                                                                                                                                                      "b"
                                                                                                                                                                                                                      "{x: T | EXISTS (a: (rest(X!1))): a(x)}"))
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (split
                                                                                                                                                                                                                       -1)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (case-replace
                                                                                                                                                                                                                         "union(choose(X!1), {x: T | EXISTS (a: (rest(X!1))): a(x)})={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (hide
                                                                                                                                                                                                                           -1)
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                             "i!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "isf?")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (lemma
                                                                                                                                                                                                                                   "m_monotone"
                                                                                                                                                                                                                                   ("a"
                                                                                                                                                                                                                                    "choose(X!1)"
                                                                                                                                                                                                                                    "b"
                                                                                                                                                                                                                                    "nonzero_set?(i!1)"))
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (split
                                                                                                                                                                                                                                     -1)
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                                       "m_monotone"
                                                                                                                                                                                                                                       ("a"
                                                                                                                                                                                                                                        "{x: T | EXISTS (a: (rest(X!1))): a(x)}"
                                                                                                                                                                                                                                        "b"
                                                                                                                                                                                                                                        "nonzero_set?(i!1)"))
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (split
                                                                                                                                                                                                                                         -1)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                           "m_monotone"
                                                                                                                                                                                                                                           ("a"
                                                                                                                                                                                                                                            "{x: T | EXISTS (a: (X!1)): a(x)}"
                                                                                                                                                                                                                                            "b"
                                                                                                                                                                                                                                            "nonzero_set?(i!1)"))
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (split
                                                                                                                                                                                                                                             -1)
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "x_le")
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "x_eq")
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "mu_fin?")
                                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "mu")
                                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                                             "x_add")
                                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                                              nil
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil)
                                                                                                                                                                                                                                             ("2"
                                                                                                                                                                                                                                              (hide-all-but
                                                                                                                                                                                                                                               (-14
                                                                                                                                                                                                                                                1
                                                                                                                                                                                                                                                4))
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "subset?")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "nonzero_set?")
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "member")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (skosimp*)
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                                           -
                                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                               "P1")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                                   -
                                                                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil)
                                                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                                                            (propax)
                                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                                          (hide-all-but
                                                                                                                                                                                                                                           (1
                                                                                                                                                                                                                                            2
                                                                                                                                                                                                                                            -13
                                                                                                                                                                                                                                            4))
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                                             "rest_subset"
                                                                                                                                                                                                                                             ("a"
                                                                                                                                                                                                                                              "X!1"))
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "subset?")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "nonzero_set?")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "member")
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (skosimp*)
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                                                                       "a!1")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                         -
                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                                           -
                                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (assert)
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                               "P1")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (flatten)
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                                   -
                                                                                                                                                                                                                                                                   "x!1")
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                                                       (1
                                                                                                                                                                                                                                        -11
                                                                                                                                                                                                                                        -12
                                                                                                                                                                                                                                        4))
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "subset?")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                                           "nonzero_set?")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "member")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (skosimp*)
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                                 "choose(X!1)")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "P1")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                         -
                                                                                                                                                                                                                                                         "x!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil)
                                                                                                                                                                                                                         ("2"
                                                                                                                                                                                                                          (apply-extensionality
                                                                                                                                                                                                                           1
                                                                                                                                                                                                                           :hide?
                                                                                                                                                                                                                           t)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "union"
                                                                                                                                                                                                                             1)
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "member")
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (case-replace
                                                                                                                                                                                                                                 "choose(X!1)(x!1)")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                   "choose(X!1)")
                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                                   1
                                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (case-replace
                                                                                                                                                                                                                                     "EXISTS (a: (rest(X!1))): a(x!1)")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (lemma
                                                                                                                                                                                                                                           "rest_subset"
                                                                                                                                                                                                                                           ("a"
                                                                                                                                                                                                                                            "X!1"))
                                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                                             "subset?")
                                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                               -
                                                                                                                                                                                                                                               "a!1")
                                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                                   +
                                                                                                                                                                                                                                                   "a!1")
                                                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                                       1
                                                                                                                                                                                                                                       3)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (case-replace
                                                                                                                                                                                                                                               "a!1=choose(X!1)")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                 +
                                                                                                                                                                                                                                                 "a!1")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                   "rest")
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "remove")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                       "member")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil)
                                                                                                                                                                                                                       ("2"
                                                                                                                                                                                                                        (lemma
                                                                                                                                                                                                                         "choose_not_member"
                                                                                                                                                                                                                         ("a"
                                                                                                                                                                                                                          "X!1"))
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "disjoint?")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                               "empty?"
                                                                                                                                                                                                                               2)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (skosimp)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "intersection")
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "member")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                                                             "p!1")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                               "finite_partition?")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                 "partition?")
                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                                     "subset?")
                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                                                       -14
                                                                                                                                                                                                                                                       "choose(X!1)")
                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                         -14
                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                            (lemma
                                                                                                                                                                                                                                                             "rest_subset"
                                                                                                                                                                                                                                                             ("a"
                                                                                                                                                                                                                                                              "X!1"))
                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                              (expand
                                                                                                                                                                                                                                                               "subset?")
                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                                                 -
                                                                                                                                                                                                                                                                 "a!1")
                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                   "member")
                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                      (inst-cp
                                                                                                                                                                                                                                                                       -21
                                                                                                                                                                                                                                                                       "choose(X!1)")
                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                                                         -21
                                                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                                                                             -
                                                                                                                                                                                                                                                                             "a!1"
                                                                                                                                                                                                                                                                             "choose(X!1)")
                                                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                                                                                 "disjoint?"
                                                                                                                                                                                                                                                                                 -3)
                                                                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                                                                   "empty?"
                                                                                                                                                                                                                                                                                   -3)
                                                                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                                                                     -
                                                                                                                                                                                                                                                                                     "x!1")
                                                                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                                                                                       "intersection")
                                                                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                                                                         "member")
                                                                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                                                                          (propax)
                                                                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil)
                                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                     "finite_partition_of?")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "subset?")
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         -8
                                                                                                                                                                                                                         "choose(X!1)")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -13
                                                                                                                                                                                                                             "choose(X!1)")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -15
                                                                                                                                                                                                                                 "choose(X!1)")
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "measurable_set?")
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (propax)
                                                                                                                                                                                                                                      nil
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil)
                                                                                                                                                                                                               ("2"
                                                                                                                                                                                                                (hide
                                                                                                                                                                                                                 3)
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (apply-extensionality
                                                                                                                                                                                                                   1
                                                                                                                                                                                                                   :hide?
                                                                                                                                                                                                                   t)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (case-replace
                                                                                                                                                                                                                     "EXISTS (a: (X!1)): a(x!1)")
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                         "subset?")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                           -9
                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "member")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               -14
                                                                                                                                                                                                                               "a!1")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "finite_partition_of?")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (inst
                                                                                                                                                                                                                                     -16
                                                                                                                                                                                                                                     "a!1")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (flatten)
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                                         +
                                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil)
                                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                                      (replace
                                                                                                                                                                                                                       1
                                                                                                                                                                                                                       2)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             +
                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                            nil
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil)
                                                                                                                                                                                                           ("2"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             3)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (apply-extensionality
                                                                                                                                                                                                               1
                                                                                                                                                                                                               :hide?
                                                                                                                                                                                                               t)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (case-replace
                                                                                                                                                                                                                 "EXISTS (a: (rest(X!1))): a(x!1)")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                   "subset?")
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                                       "rest_subset"
                                                                                                                                                                                                                       ("a"
                                                                                                                                                                                                                        "X!1"))
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "subset?")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -
                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                               -11
                                                                                                                                                                                                                               "a!1")
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                                 -16
                                                                                                                                                                                                                                 "a!1")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (expand
                                                                                                                                                                                                                                     "finite_partition_of?")
                                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                                      (inst
                                                                                                                                                                                                                                       -18
                                                                                                                                                                                                                                       "a!1")
                                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                                        (flatten)
                                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                                          (inst
                                                                                                                                                                                                                                           +
                                                                                                                                                                                                                                           "a!1")
                                                                                                                                                                                                                                          nil
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil)
                                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                                  (replace
                                                                                                                                                                                                                   1
                                                                                                                                                                                                                   2)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         +
                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                        nil
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (hide-all-but
                                                                                                                                                                                                       (-2
                                                                                                                                                                                                        1))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "restrict")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "is_countable")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (typepred
                                                                                                                                                                                                               "f!2")
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 +
                                                                                                                                                                                                                 "f!2")
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil)
                                                                                                                                                                                                   ("2"
                                                                                                                                                                                                    (hide-all-but
                                                                                                                                                                                                     (-2
                                                                                                                                                                                                      1))
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (expand
                                                                                                                                                                                                       "restrict")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (expand
                                                                                                                                                                                                         "is_countable")
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (skosimp)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (typepred
                                                                                                                                                                                                             "f!2")
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (inst
                                                                                                                                                                                                               +
                                                                                                                                                                                                               "f!2")
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil)
                                                                                                                                                                                                 ("2"
                                                                                                                                                                                                  (propax)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil)
                                                                                                                                                                                 ("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "subset?")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -
                                                                                                                                                                                     "choose(X!1)")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (hide-all-but
                                                                                                                                                                         (-1
                                                                                                                                                                          1
                                                                                                                                                                          2))
                                                                                                                                                                        (("2"
                                                                                                                                                                          (lemma
                                                                                                                                                                           "rest_subset"
                                                                                                                                                                           ("a"
                                                                                                                                                                            "X!1"))
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "subset?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (skosimp)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -
                                                                                                                                                                                 "x!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -
                                                                                                                                                                                   "x!1")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (expand
                                                                                                                                                     "nonempty_countable?")
                                                                                                                                                    (("2"
                                                                                                                                                      (lemma
                                                                                                                                                       "finite_subset"
                                                                                                                                                       ("s"
                                                                                                                                                        "X!1"
                                                                                                                                                        "A"
                                                                                                                                                        "P1"))
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (lemma
                                                                                                                                                           "finite_countable"
                                                                                                                                                           ("x"
                                                                                                                                                            "X!1"))
                                                                                                                                                          (("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("3"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("3"
                                                                                                                                            (skosimp)
                                                                                                                                            (("3"
                                                                                                                                              (lemma
                                                                                                                                               "measurable_Union"
                                                                                                                                               ("M"
                                                                                                                                                "X!1"))
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "restrict")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "Union")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "measurable_set?")
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "{x: T | EXISTS (a: (LAMBDA (s: (S)): X!1(s))): a(x)}={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (hide
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (typepred
                                                                                                                                                             "i!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "isf?")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("1"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "m_monotone"
                                                                                                                                                                   ("a"
                                                                                                                                                                    "{x: T | EXISTS (a: (X!1)): a(x)}"
                                                                                                                                                                    "b"
                                                                                                                                                                    "nonzero_set?(i!1)"))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (split
                                                                                                                                                                     -1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "mu_fin?")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "x_le")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "subset?")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "member")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (skosimp*)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nonzero_set?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (typepred
                                                                                                                                                                               "a!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -6
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "P1")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -8
                                                                                                                                                                                         "x!1")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "measurable_set?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (propax)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (apply-extensionality
                                                                                                                                                           1
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (case-replace
                                                                                                                                                             "EXISTS (a: (X!1)): a(x!1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 +
                                                                                                                                                                 "a!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "a!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "subset?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "a!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -11
                                                                                                                                                                           "a!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "finite_partition_of?")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -13
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (skosimp)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     " a!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "finite_subset"
                                                                                                                                                 ("s"
                                                                                                                                                  "X!1"
                                                                                                                                                  "A"
                                                                                                                                                  "P1"))
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "finite_countable"
                                                                                                                                                     ("x"
                                                                                                                                                      "X!1"))
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "restrict")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "is_countable")
                                                                                                                                                        (("1"
                                                                                                                                                          (skosimp)
                                                                                                                                                          (("1"
                                                                                                                                                            (typepred
                                                                                                                                                             "f!2")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               +
                                                                                                                                                               "f!2")
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("4"
                                                                                                                                          (hide
                                                                                                                                           2)
                                                                                                                                          (("4"
                                                                                                                                            (skosimp)
                                                                                                                                            (("4"
                                                                                                                                              (expand
                                                                                                                                               "convergent?")
                                                                                                                                              (("4"
                                                                                                                                                (flatten)
                                                                                                                                                (("4"
                                                                                                                                                  (lemma
                                                                                                                                                   "finite_subset"
                                                                                                                                                   ("s"
                                                                                                                                                    "X!1"
                                                                                                                                                    "A"
                                                                                                                                                    "P1"))
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("5"
                                                                                                                                          (skosimp)
                                                                                                                                          (("5"
                                                                                                                                            (lemma
                                                                                                                                             "finite_subset"
                                                                                                                                             ("s"
                                                                                                                                              "X!1"
                                                                                                                                              "A"
                                                                                                                                              "P1"))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "finite_countable"
                                                                                                                                                 ("x"
                                                                                                                                                  "X!1"))
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil)
                                                                                                                                         ("6"
                                                                                                                                          (skosimp)
                                                                                                                                          (("6"
                                                                                                                                            (lemma
                                                                                                                                             "finite_subset"
                                                                                                                                             ("s"
                                                                                                                                              "X!1"
                                                                                                                                              "A"
                                                                                                                                              "P1"))
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (skosimp)
                                                                                                                                        (("3"
                                                                                                                                          (lemma
                                                                                                                                           "finite_subset"
                                                                                                                                           ("s"
                                                                                                                                            "X!1"
                                                                                                                                            "A"
                                                                                                                                            "P1"))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "measurable_Union"
                                                                                                                                               ("M"
                                                                                                                                                "X!1"))
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "measurable_set?")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "restrict")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "Union"
                                                                                                                                                     (-1
                                                                                                                                                      1))
                                                                                                                                                    (("1"
                                                                                                                                                      (case-replace
                                                                                                                                                       "{x: T | EXISTS (a: (LAMBDA (s: (S)): X!1(s))): a(x)}={x: T | EXISTS (a: (X!1)): a(x)}")
                                                                                                                                                      (("1"
                                                                                                                                                        (replace
                                                                                                                                                         -2)
                                                                                                                                                        (("1"
                                                                                                                                                          (typepred
                                                                                                                                                           "i!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "isf?")
                                                                                                                                                            (("1"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("1"
                                                                                                                                                                (lemma
                                                                                                                                                                 "m_monotone"
                                                                                                                                                                 ("a"
                                                                                                                                                                  "{x: T | EXISTS (a: (X!1)): a(x)}"
                                                                                                                                                                  "b"
                                                                                                                                                                  "nonzero_set?(i!1)"))
                                                                                                                                                                (("1"
                                                                                                                                                                  (split
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "mu_fin?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "x_le")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "subset?")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "member")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (skosimp*)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (typepred
                                                                                                                                                                           "a!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "nonzero_set?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "a!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "P1"
                                                                                                                                                                                   -8)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (flatten)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "x!1")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        nil
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "measurable_set?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (hide
                                                                                                                                                         2)
                                                                                                                                                        (("2"
                                                                                                                                                          (apply-extensionality
                                                                                                                                                           1
                                                                                                                                                           :hide?
                                                                                                                                                           t)
                                                                                                                                                          (("2"
                                                                                                                                                            (case-replace
                                                                                                                                                             "EXISTS (a: (X!1)): a(x!1)")
                                                                                                                                                            (("1"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 +
                                                                                                                                                                 "a!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "a!1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "subset?")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -
                                                                                                                                                                       "a!1")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -12
                                                                                                                                                                           "a!1")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (expand
                                                                                                                                                                               "finite_partition_of?"
                                                                                                                                                                               -14)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (inst
                                                                                                                                                                                 -14
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (flatten)
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (skosimp)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     +
                                                                                                                                                                     " a!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (lemma
                                                                                                                                                 "finite_countable"
                                                                                                                                                 ("x"
                                                                                                                                                  "X!1"))
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "restrict")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "is_countable")
                                                                                                                                                    (("2"
                                                                                                                                                      (skosimp)
                                                                                                                                                      (("2"
                                                                                                                                                        (typepred
                                                                                                                                                         "f!2")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           +
                                                                                                                                                           "f!2")
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("4"
                                                                                                                                        (skosimp)
                                                                                                                                        (("4"
                                                                                                                                          (expand
                                                                                                                                           "convergent?")
                                                                                                                                          (("4"
                                                                                                                                            (flatten)
                                                                                                                                            (("4"
                                                                                                                                              (lemma
                                                                                                                                               "finite_subset"
                                                                                                                                               ("s"
                                                                                                                                                "X!1"
                                                                                                                                                "A"
                                                                                                                                                "P1"))
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("5"
                                                                                                                                        (skosimp)
                                                                                                                                        (("5"
                                                                                                                                          (lemma
                                                                                                                                           "finite_subset"
                                                                                                                                           ("s"
                                                                                                                                            "X!1"
                                                                                                                                            "A"
                                                                                                                                            "P1"))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lemma
                                                                                                                                               "finite_countable"
                                                                                                                                               ("x"
                                                                                                                                                "X!1"))
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("6"
                                                                                                                                        (skosimp)
                                                                                                                                        (("6"
                                                                                                                                          (lemma
                                                                                                                                           "finite_subset"
                                                                                                                                           ("s"
                                                                                                                                            "X!1"
                                                                                                                                            "A"
                                                                                                                                            "P1"))
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            nil
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (propax)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (skosimp)
                                                                                                                                (("3"
                                                                                                                                  (typepred
                                                                                                                                   "x!1")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "subset?"
                                                                                                                                     -17)
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -17
                                                                                                                                       "x!1")
                                                                                                                                      (("3"
                                                                                                                                        (expand
                                                                                                                                         "member")
                                                                                                                                        (("3"
                                                                                                                                          (expand
                                                                                                                                           "finite_partition_of?"
                                                                                                                                           -21)
                                                                                                                                          (("3"
                                                                                                                                            (inst
                                                                                                                                             -21
                                                                                                                                             "x!1")
                                                                                                                                            (("3"
                                                                                                                                              (flatten)
                                                                                                                                              (("3"
                                                                                                                                                (case-replace
                                                                                                                                                 "empty?(x!1)")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "emptyset_is_empty?"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "mu_fin?")
                                                                                                                                                      (("1"
                                                                                                                                                        (rewrite
                                                                                                                                                         "m_emptyset")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "P1"
                                                                                                                                                     -1)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "choose(x!1)")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (hide
                                                                                                                           -19
                                                                                                                           4)
                                                                                                                          (("2"
                                                                                                                            (skosimp)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "t!1")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "subset?"
                                                                                                                                   -17)
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -17
                                                                                                                                     "t!1")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (case
                                                                                                                                           "empty?(t!1)")
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "emptyset_is_empty?"
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "m_emptyset")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mu")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (case-replace
                                                                                                                                               "i!1(choose[T](t!1)) = 0")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -19
                                                                                                                                                 -2
                                                                                                                                                 rl)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "choose[T](t!1)")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (replace
                                                                                                                                                   -18
                                                                                                                                                   -1
                                                                                                                                                   rl)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -
                                                                                                                                                       "choose[T](t!1)")
                                                                                                                                                      (("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (propax)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("3"
                                                                                                                                                (expand
                                                                                                                                                 "nonempty?")
                                                                                                                                                (("3"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide
                                                                                                                         -19
                                                                                                                         4)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "convergent?")
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (skosimp)
                                                                                                                        (("3"
                                                                                                                          (hide
                                                                                                                           4
                                                                                                                           -20)
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             "finite_partition_of?"
                                                                                                                             -20)
                                                                                                                            (("3"
                                                                                                                              (expand
                                                                                                                               "subset?"
                                                                                                                               -17)
                                                                                                                              (("3"
                                                                                                                                (inst
                                                                                                                                 -17
                                                                                                                                 "Y!1")
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (inst
                                                                                                                                       -20
                                                                                                                                       "Y!1")
                                                                                                                                      (("3"
                                                                                                                                        (flatten)
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          (("3"
                                                                                                                                            (split
                                                                                                                                             -22)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "emptyset_is_empty?")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "mu_fin?")
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "m_emptyset")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (expand
                                                                                                                                               "P1"
                                                                                                                                               -2)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "choose(Y!1)")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (expand
                                                                                                                         "convergent?")
                                                                                                                        (("4"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "convergent?")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -3)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("3"
                                                                                                              (skosimp)
                                                                                                              (("3"
                                                                                                                (expand
                                                                                                                 "finite_partition_of?")
                                                                                                                (("3"
                                                                                                                  (inst
                                                                                                                   -21
                                                                                                                   "Y!1")
                                                                                                                  (("3"
                                                                                                                    (flatten)
                                                                                                                    (("3"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("4"
                                                                                                              (skosimp)
                                                                                                              (("4"
                                                                                                                (expand
                                                                                                                 "nonempty?")
                                                                                                                (("4"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("5"
                                                                                                              (skosimp)
                                                                                                              (("5"
                                                                                                                (expand
                                                                                                                 "nonempty?")
                                                                                                                (("5"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("6"
                                                                                                              (lemma
                                                                                                               "finite_countable[setof[T]]"
                                                                                                               ("x"
                                                                                                                "P2"))
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("7"
                                                                                                              (lemma
                                                                                                               "finite_countable[setof[T]]"
                                                                                                               ("x"
                                                                                                                "P1"))
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "p!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "finite_partition?")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (-3
                                                                                                            1))
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "p!1")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "finite_partition?")
                                                                                                              (("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "finite_subset"
                                                                                                                   ("s"
                                                                                                                    "P2"
                                                                                                                    "A"
                                                                                                                    "p!1"))
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "P2")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "P1")
                                                                                                              (("2"
                                                                                                                (apply-extensionality
                                                                                                                 :hide?
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           -13
                                                                                           4)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "isf_integral")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "sigma_remove"
                                                                                               ("t"
                                                                                                "CC"
                                                                                                "X"
                                                                                                "image[T, real](i!1, fullset[T])"
                                                                                                "f"
                                                                                                "LAMBDA c:
             IF c = 0 THEN 0
             ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
             ENDIF"))
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("1"
                                                                                                  (replace
                                                                                                   -13)
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     2)
                                                                                                    (("1"
                                                                                                      (name-replace
                                                                                                       "LHS"
                                                                                                       "sigma[real]
          (image[T, real](i!1, fullset[T]),
           LAMBDA c:
             IF c = 0 THEN 0
             ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
             ENDIF)")
                                                                                                      (("1"
                                                                                                        (case-replace
                                                                                                         "inverse_image[T, real](i!1, singleton[real](CC))=CC_SET")
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "image(i!1, fullset[T])(0)")
                                                                                                            (("1"
                                                                                                              (case-replace
                                                                                                               "remove(CC, image[T, real](i!1, fullset[T]))=image[T, real](II, fullset[T])")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "is_finite(image[T, real](II, fullset[T]))")
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "sigma_eq"
                                                                                                                     ("X"
                                                                                                                      "image[T, real](II, fullset[T])"
                                                                                                                      "f"
                                                                                                                      "LAMBDA c:
              IF c = 0 THEN 0
              ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
              ENDIF"
                                                                                                                      "g"
                                                                                                                      "LAMBDA c:
              IF c = 0 THEN 0
              ELSE c * mu(inverse_image[T, real](II, singleton[real](c)))
              ENDIF"))
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (hide
                                                                                                                         -3
                                                                                                                         2)
                                                                                                                        (("2"
                                                                                                                          (skosimp)
                                                                                                                          (("2"
                                                                                                                            (typepred
                                                                                                                             "t!1")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "fullset"
                                                                                                                               -1)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "image"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (skosimp)
                                                                                                                                  (("2"
                                                                                                                                    (case-replace
                                                                                                                                     "t!1=0")
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (case-replace
                                                                                                                                         "inverse_image[T, real](i!1, singleton[real](t!1)) = inverse_image[T, real](II, singleton[real](t!1))")
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           3)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "singleton")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "inverse_image")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("2"
                                                                                                                                                  (apply-extensionality
                                                                                                                                                   1
                                                                                                                                                   :hide?
                                                                                                                                                   t)
                                                                                                                                                  (("2"
                                                                                                                                                    (case-replace
                                                                                                                                                     "i!1(x!2) = t!1")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "II"
                                                                                                                                                       (-2
                                                                                                                                                        1))
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "-")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "*")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "phi")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "member")
                                                                                                                                                              (("1"
                                                                                                                                                                (case
                                                                                                                                                                 "CC_SET(x!1)")
                                                                                                                                                                (("1"
                                                                                                                                                                  (replace
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst-cp
                                                                                                                                                                     -12
                                                                                                                                                                     "x!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil)
                                                                                                                                                                 ("2"
                                                                                                                                                                  (replace
                                                                                                                                                                   1)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (case
                                                                                                                                                                     "CC_SET(x!2)")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (inst
                                                                                                                                                                       -12
                                                                                                                                                                       "x!2")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -12)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -2
                                                                                                                                                                                 -3
                                                                                                                                                                                 rl)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (typepred
                                                                                                                                                                                   "p!1")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "finite_partition?")
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (expand
                                                                                                                                                                                       "partition?")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (flatten)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (lemma
                                                                                                                                                                                           "extensionality_postulate"
                                                                                                                                                                                           ("f"
                                                                                                                                                                                            "Union(p!1)"
                                                                                                                                                                                            "g"
                                                                                                                                                                                            "fullset[T]"))
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (replace
                                                                                                                                                                                             -1
                                                                                                                                                                                             -2
                                                                                                                                                                                             rl)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (inst
                                                                                                                                                                                               -2
                                                                                                                                                                                               "x!1")
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "fullset")
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (hide
                                                                                                                                                                                                   -1)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "Union")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (typepred
                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (expand
                                                                                                                                                                                                           "CC_SET")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (inst
                                                                                                                                                                                                             +
                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "finite_partition_of?")
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (inst
                                                                                                                                                                                                                 -23
                                                                                                                                                                                                                 "a!1")
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (flatten)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "P1")
                                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                                        (skosimp)
                                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                                          (typepred
                                                                                                                                                                                                                           "x!3")
                                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                                            (expand
                                                                                                                                                                                                                             "constant_over?")
                                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                                              (skolem!
                                                                                                                                                                                                                               -25)
                                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                                (inst-cp
                                                                                                                                                                                                                                 -25
                                                                                                                                                                                                                                 "x!1")
                                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                                  (inst
                                                                                                                                                                                                                                   -25
                                                                                                                                                                                                                                   "x!3")
                                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil)
                                                                                                                                                                     ("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       1
                                                                                                                                                                       3)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        nil
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (replace
                                                                                                                                                       1
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (hide
                                                                                                                                                           -2)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "II"
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "-")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "*")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "phi")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "member")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (case
                                                                                                                                                                       "CC_SET(x!2)")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst
                                                                                                                                                                           -11
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil)
                                                                                                                                                                       ("2"
                                                                                                                                                                        (replace
                                                                                                                                                                         1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "convergent?")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (skosimp*)
                                                                                                                      (("3"
                                                                                                                        (hide-all-but
                                                                                                                         (1
                                                                                                                          2
                                                                                                                          -5))
                                                                                                                        (("3"
                                                                                                                          (expand
                                                                                                                           "isf?")
                                                                                                                          (("3"
                                                                                                                            (expand
                                                                                                                             "simple?")
                                                                                                                            (("3"
                                                                                                                              (flatten)
                                                                                                                              (("3"
                                                                                                                                (lemma
                                                                                                                                 "m_monotone"
                                                                                                                                 ("a"
                                                                                                                                  "inverse_image[T, real](II, singleton[real](c!1))"
                                                                                                                                  "b"
                                                                                                                                  "nonzero_set?(II)"))
                                                                                                                                (("1"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "x_le")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "mu_fin?")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "measurable_function?")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "singleton[real](c!1)")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "measurable_set?")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -2)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (lemma
                                                                                                                                             "singleton_is_borel"
                                                                                                                                             ("x"
                                                                                                                                              "c!1"))
                                                                                                                                            (("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (hide-all-but
                                                                                                                                     (1
                                                                                                                                      2))
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "subset?")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "nonzero_set?")
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "singleton")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "inverse_image")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (expand
                                                                                                                                   "measurable_function?")
                                                                                                                                  (("2"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "singleton[real](c!1)")
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "singleton_is_borel"
                                                                                                                                       ("x"
                                                                                                                                        "c!1"))
                                                                                                                                      (("2"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("4"
                                                                                                                      (expand
                                                                                                                       "convergent?")
                                                                                                                      (("4"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "isf?")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "simple?")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (hide
                                                                                                                 -2
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (apply-extensionality
                                                                                                                   1
                                                                                                                   :hide?
                                                                                                                   t)
                                                                                                                  (("2"
                                                                                                                    (case-replace
                                                                                                                     "image[T, real](II, fullset[T])(x!1)")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "remove"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("1"
                                                                                                                          (case-replace
                                                                                                                           "x!1=CC")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "fullset"
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "image"
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (skosimp)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "II"
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "-"
                                                                                                                                       -2)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "*"
                                                                                                                                         -2)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "phi"
                                                                                                                                           -2)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("1"
                                                                                                                                              (case
                                                                                                                                               "CC_SET(x!2)")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (inst
                                                                                                                                                   -11
                                                                                                                                                   "x!2")
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "p!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "finite_partition?")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "partition?")
                                                                                                                                                      (("2"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "fullset")
                                                                                                                                                          (("2"
                                                                                                                                                            (lemma
                                                                                                                                                             "extensionality_postulate"
                                                                                                                                                             ("f"
                                                                                                                                                              "Union(p!1)"
                                                                                                                                                              "g"
                                                                                                                                                              "{x: T | TRUE}"))
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1
                                                                                                                                                               -2
                                                                                                                                                               rl)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "x!2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "Union"
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (skosimp)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "CC_SET")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (inst
                                                                                                                                                                           +
                                                                                                                                                                           "a!1")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "finite_partition_of?")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -19
                                                                                                                                                                               "a!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (flatten)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "P1")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (skosimp)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (typepred
                                                                                                                                                                                         "x!3")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "constant_over?")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (inst-cp
                                                                                                                                                                                               -21
                                                                                                                                                                                               "x!2")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (inst
                                                                                                                                                                                                 -21
                                                                                                                                                                                                 "x!3")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  nil
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "fullset")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "image"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (skosimp)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "II"
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "-"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "*"
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "phi"
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "member")
                                                                                                                                            (("2"
                                                                                                                                              (case
                                                                                                                                               "CC_SET(x!2)")
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -10
                                                                                                                                                 "x!2")
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (replace
                                                                                                                                                 1)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "image")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     +
                                                                                                                                                     "x!2")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (replace
                                                                                                                       1
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "remove")
                                                                                                                          (("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "member")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "fullset")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "image")
                                                                                                                                  (("2"
                                                                                                                                    (skosimp*)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "II")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "-"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "*"
                                                                                                                                           1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "phi")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "member")
                                                                                                                                              (("2"
                                                                                                                                                (case
                                                                                                                                                 "CC_SET(x!2)")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "CC_SET"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "a!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "P1"
                                                                                                                                                         -2)
                                                                                                                                                        (("1"
                                                                                                                                                          (flatten)
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -
                                                                                                                                                             "x!2")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   +
                                                                                                                                                   "x!2")
                                                                                                                                                  (("2"
                                                                                                                                                    (replace
                                                                                                                                                     1
                                                                                                                                                     2)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (case-replace
                                                                                                               "remove(CC, image[T, real](i!1, fullset[T]))=remove(0,image[T, real](II, fullset[T]))")
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "is_finite(image[T, real](II, fullset[T]))")
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "sigma_remove"
                                                                                                                     ("f"
                                                                                                                      "LAMBDA c:
              IF c = 0 THEN 0
              ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
              ENDIF"
                                                                                                                      "X"
                                                                                                                      "image[T, real](II, fullset[T])"
                                                                                                                      "t"
                                                                                                                      "0"))
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1
                                                                                                                         -3)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (lemma
                                                                                                                             "sigma_eq"
                                                                                                                             ("X"
                                                                                                                              "image[T, real](II, fullset[T])"
                                                                                                                              "f"
                                                                                                                              "LAMBDA c:
              IF c = 0 THEN 0
              ELSE c * mu(inverse_image[T, real](i!1, singleton[real](c)))
              ENDIF"
                                                                                                                              "g"
                                                                                                                              "LAMBDA c:
              IF c = 0 THEN 0
              ELSE c * mu(inverse_image[T, real](II, singleton[real](c)))
              ENDIF"))
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -3)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (hide
                                                                                                                                 -2
                                                                                                                                 3)
                                                                                                                                (("2"
                                                                                                                                  (skosimp)
                                                                                                                                  (("2"
                                                                                                                                    (typepred
                                                                                                                                     "t!1")
                                                                                                                                    (("2"
                                                                                                                                      (case-replace
                                                                                                                                       "t!1=0")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "fullset"
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "image"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (skosimp)
                                                                                                                                              (("2"
                                                                                                                                                (case-replace
                                                                                                                                                 "inverse_image[T, real](i!1, singleton[real](t!1))=inverse_image[T, real](II, singleton[real](t!1))")
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   3)
                                                                                                                                                  (("2"
                                                                                                                                                    (apply-extensionality
                                                                                                                                                     1
                                                                                                                                                     :hide?
                                                                                                                                                     t)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "inverse_image")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "singleton")
                                                                                                                                                          (("2"
                                                                                                                                                            (case-replace
                                                                                                                                                             "i!1(x!2) = t!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "II")
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "-")
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "*")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "phi")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "member")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (case-replace
                                                                                                                                                                         "CC_SET(x!2)")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (inst-cp
                                                                                                                                                                           -10
                                                                                                                                                                           "x!2")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (flatten)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (replace
                                                                                                                                                                                 -11)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (hide
                                                                                                                                                                                     1)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case-replace
                                                                                                                                                                                       "CC_SET(x!1)")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (inst
                                                                                                                                                                                         -11
                                                                                                                                                                                         "x!1")
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (replace
                                                                                                                                                                                         1)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (replace
                                                                                                                                                                                           -2
                                                                                                                                                                                           *
                                                                                                                                                                                           rl)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (hide
                                                                                                                                                                                             -2
                                                                                                                                                                                             2)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "p!1")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "finite_partition?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "partition?")
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (flatten)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (lemma
                                                                                                                                                                                                       "extensionality_postulate"
                                                                                                                                                                                                       ("f"
                                                                                                                                                                                                        "Union(p!1)"
                                                                                                                                                                                                        "g"
                                                                                                                                                                                                        "fullset[T]"))
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (replace
                                                                                                                                                                                                         -1
                                                                                                                                                                                                         -2
                                                                                                                                                                                                         rl)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -
                                                                                                                                                                                                           "x!1")
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (hide
                                                                                                                                                                                                             -1)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (expand
                                                                                                                                                                                                               "fullset"
                                                                                                                                                                                                               -1)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (expand
                                                                                                                                                                                                                 "Union")
                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                    (typepred
                                                                                                                                                                                                                     "a!1")
                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                      (expand
                                                                                                                                                                                                                       "CC_SET"
                                                                                                                                                                                                                       1)
                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                        (inst
                                                                                                                                                                                                                         +
                                                                                                                                                                                                                         "a!1")
                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                          (expand
                                                                                                                                                                                                                           "finite_partition_of?"
                                                                                                                                                                                                                           -21)
                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                            (inst
                                                                                                                                                                                                                             -21
                                                                                                                                                                                                                             "a!1")
                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                              (flatten)
                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                (("2"
                                                                                                                                                                                                                                  (expand
                                                                                                                                                                                                                                   "P1"
                                                                                                                                                                                                                                   1)
                                                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                                                      (typepred
                                                                                                                                                                                                                                       "x!3")
                                                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                                                        (expand
                                                                                                                                                                                                                                         "constant_over?")
                                                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                                                          (skolem!
                                                                                                                                                                                                                                           -23)
                                                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                                                            (inst-cp
                                                                                                                                                                                                                                             -23
                                                                                                                                                                                                                                             "x!1")
                                                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                                                              (inst
                                                                                                                                                                                                                                               -23
                                                                                                                                                                                                                                               "x!3")
                                                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                                                nil
                                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                                nil))
                                                                                                                                                                                                                              nil))
                                                                                                                                                                                                                            nil))
                                                                                                                                                                                                                          nil))
                                                                                                                                                                                                                        nil))
                                                                                                                                                                                                                      nil))
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (replace
                                                                                                                                                                           1)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (replace
                                                                                                                                                               1
                                                                                                                                                               2)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "II")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (expand
                                                                                                                                                                     "-")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "*")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "phi")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "member")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case-replace
                                                                                                                                                                             "CC_SET(x!2)")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -10
                                                                                                                                                                               "x!2")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "convergent?")
                                                                                                                              (("2"
                                                                                                                                (flatten)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("3"
                                                                                                                              (hide-all-but
                                                                                                                               (-4
                                                                                                                                1))
                                                                                                                              (("3"
                                                                                                                                (skosimp)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "isf?")
                                                                                                                                  (("3"
                                                                                                                                    (expand
                                                                                                                                     "simple?")
                                                                                                                                    (("3"
                                                                                                                                      (flatten)
                                                                                                                                      (("3"
                                                                                                                                        (expand
                                                                                                                                         "measurable_function?")
                                                                                                                                        (("3"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "singleton[real](c!1)")
                                                                                                                                          (("1"
                                                                                                                                            (split)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "measurable_set?")
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (lemma
                                                                                                                                               "m_monotone"
                                                                                                                                               ("a"
                                                                                                                                                "inverse_image[T, real](II, singleton[real](c!1))"
                                                                                                                                                "b"
                                                                                                                                                "nonzero_set?(II)"))
                                                                                                                                              (("2"
                                                                                                                                                (split
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "x_le")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "mu_fin?")
                                                                                                                                                    (("1"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (expand
                                                                                                                                                   "subset?")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "inverse_image")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "nonzero_set?")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "singleton")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "member")
                                                                                                                                                          (("2"
                                                                                                                                                            (skosimp)
                                                                                                                                                            (("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (lemma
                                                                                                                                             "singleton_is_borel"
                                                                                                                                             ("x"
                                                                                                                                              "c!1"))
                                                                                                                                            (("2"
                                                                                                                                              (propax)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "convergent?")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "isf?")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "simple?")
                                                                                                                      (("2"
                                                                                                                        (flatten)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (apply-extensionality
                                                                                                                 1
                                                                                                                 :hide?
                                                                                                                 t)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   -1
                                                                                                                   3)
                                                                                                                  (("2"
                                                                                                                    (case
                                                                                                                     "forall x: i!1(x)/=0")
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       2)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "remove")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("1"
                                                                                                                            (case-replace
                                                                                                                             "x!1=0")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (case-replace
                                                                                                                                 "x!1=CC")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "fullset"
                                                                                                                                     -3)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "image"
                                                                                                                                       -3)
                                                                                                                                      (("1"
                                                                                                                                        (skosimp)
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "II")
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "-")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "*")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "phi")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "member")
                                                                                                                                                  (("1"
                                                                                                                                                    (case
                                                                                                                                                     "CC_SET(x!2)")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -10
                                                                                                                                                         "x!2")
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "p!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "finite_partition?")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "partition?")
                                                                                                                                                          (("2"
                                                                                                                                                            (flatten)
                                                                                                                                                            (("2"
                                                                                                                                                              (lemma
                                                                                                                                                               "extensionality_postulate"
                                                                                                                                                               ("f"
                                                                                                                                                                "Union(p!1)"
                                                                                                                                                                "g"
                                                                                                                                                                "fullset[T]"))
                                                                                                                                                              (("2"
                                                                                                                                                                (replace
                                                                                                                                                                 -1
                                                                                                                                                                 -2
                                                                                                                                                                 rl)
                                                                                                                                                                (("2"
                                                                                                                                                                  (inst
                                                                                                                                                                   -2
                                                                                                                                                                   "x!2")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (hide
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (expand
                                                                                                                                                                       "fullset"
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "Union")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (skosimp)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "CC_SET"
                                                                                                                                                                               1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (inst
                                                                                                                                                                                 +
                                                                                                                                                                                 "a!1")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "finite_partition_of?"
                                                                                                                                                                                   -19)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (inst
                                                                                                                                                                                     -19
                                                                                                                                                                                     "a!1")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (flatten)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "P1"
                                                                                                                                                                                           1)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (skosimp)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (typepred
                                                                                                                                                                                               "x!3")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (expand
                                                                                                                                                                                                 "constant_over?")
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (skosimp)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (inst-cp
                                                                                                                                                                                                     -21
                                                                                                                                                                                                     "x!2")
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (inst
                                                                                                                                                                                                       -21
                                                                                                                                                                                                       "x!3")
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (case-replace
                                                                                                                                     "image[T, real](i!1, fullset[T])(x!1)")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "fullset")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "image")
                                                                                                                                        (("1"
                                                                                                                                          (skosimp)
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             +
                                                                                                                                             "x!2")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "II")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "-")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "*")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "phi")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "member")
                                                                                                                                                      (("1"
                                                                                                                                                        (case
                                                                                                                                                         "CC_SET(x!2)")
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -10
                                                                                                                                                           "x!2")
                                                                                                                                                          (("1"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (replace
                                                                                                                                       1
                                                                                                                                       4)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (expand
                                                                                                                                           "fullset")
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "image")
                                                                                                                                            (("2"
                                                                                                                                              (skosimp)
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 +
                                                                                                                                                 "x!2")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "II")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "-")
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "phi")
                                                                                                                                                      (("2"
                                                                                                                                                        (expand
                                                                                                                                                         "member")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "*")
                                                                                                                                                          (("2"
                                                                                                                                                            (case
                                                                                                                                                             "CC_SET(x!2)")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -10
                                                                                                                                                               "x!2")
                                                                                                                                                              (("1"
                                                                                                                                                                (assert)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (skosimp)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "fullset")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "image")
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             +
                                                                                                                             "x!2")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           -1
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (apply-extensionality
                                                                                                             1
                                                                                                             :hide?
                                                                                                             t)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "CC_SET(x!1)")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -8
                                                                                                                 "x!1")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "inverse_image"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "singleton")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (replace
                                                                                                                 1
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "inverse_image"
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "singleton"
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "p!1")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "finite_partition?")
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "fullset")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "partition?")
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (lemma
                                                                                                                                       "extensionality_postulate"
                                                                                                                                       ("f"
                                                                                                                                        "Union(p!1)"
                                                                                                                                        "g"
                                                                                                                                        "{x: T | TRUE}"))
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1
                                                                                                                                         -2
                                                                                                                                         rl)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!1")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "Union"
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (skosimp)
                                                                                                                                                (("2"
                                                                                                                                                  (typepred
                                                                                                                                                   "a!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (expand
                                                                                                                                                     "CC_SET"
                                                                                                                                                     1)
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       +
                                                                                                                                                       "a!1")
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "finite_partition_of?")
                                                                                                                                                          (("2"
                                                                                                                                                            (inst
                                                                                                                                                             -18
                                                                                                                                                             "a!1")
                                                                                                                                                            (("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "P1")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (skosimp)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (typepred
                                                                                                                                                                       "x!2")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "constant_over?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (skosimp)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst-cp
                                                                                                                                                                             -20
                                                                                                                                                                             "x!2")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -20
                                                                                                                                                                               "x!1")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "convergent?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "isf?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "simple?")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (hide
                                                                                                 2)
                                                                                                (("3"
                                                                                                  (skosimp)
                                                                                                  (("3"
                                                                                                    (typepred
                                                                                                     "i!1")
                                                                                                    (("3"
                                                                                                      (expand
                                                                                                       "isf?"
                                                                                                       -1)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         "simple?")
                                                                                                        (("3"
                                                                                                          (flatten)
                                                                                                          (("3"
                                                                                                            (expand
                                                                                                             "measurable_function?")
                                                                                                            (("3"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "singleton[real](c!1)")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "measurable_set?")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "m_monotone"
                                                                                                                     ("a"
                                                                                                                      "inverse_image[T, real](i!1, singleton[real](c!1))"
                                                                                                                      "b"
                                                                                                                      "nonzero_set?(i!1)"))
                                                                                                                    (("1"
                                                                                                                      (split
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "x_le")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "mu_fin?")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "subset?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "nonzero_set?")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "singleton")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "inverse_image")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("2"
                                                                                                                                    (skosimp)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (lemma
                                                                                                                 "singleton_is_borel"
                                                                                                                 ("x"
                                                                                                                  "c!1"))
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -12
                                                                                       4)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "finite_partition_of?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -12
                                                                                             "E!1")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (split)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "constant_over?")
                                                                                                      (("1"
                                                                                                        (skosimp)
                                                                                                        (("1"
                                                                                                          (case-replace
                                                                                                           "y!1=CC")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "0")
                                                                                                            (("1"
                                                                                                              (skosimp)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "II"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "-"
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "*"
                                                                                                                     1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "phi"
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("1"
                                                                                                                          (typepred
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (inst-cp
                                                                                                                             -15
                                                                                                                             "x!1")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -16
                                                                                                                               *
                                                                                                                               rl)
                                                                                                                              (("1"
                                                                                                                                (case-replace
                                                                                                                                 "CC_SET(x!1)")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (hide
                                                                                                                                   2)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "CC_SET"
                                                                                                                                     1)
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       +
                                                                                                                                       "E!1")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "P1"
                                                                                                                                         1)
                                                                                                                                        (("2"
                                                                                                                                          (skosimp)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -15
                                                                                                                                             "x!2")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst
                                                                                                             +
                                                                                                             "y!1")
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "II"
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "-"
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "*"
                                                                                                                     2)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "phi"
                                                                                                                       2)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "CC_SET(x!1)")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "CC_SET"
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (skosimp)
                                                                                                                              (("1"
                                                                                                                                (typepred
                                                                                                                                 "a!1")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "P1"
                                                                                                                                   -2)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (typepred
                                                                                                                                       "x!1")
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "p!1")
                                                                                                                                        (("1"
                                                                                                                                          (expand
                                                                                                                                           "finite_partition?")
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "fullset")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "partition?")
                                                                                                                                                (("1"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("1"
                                                                                                                                                    (inst
                                                                                                                                                     -2
                                                                                                                                                     "a!1"
                                                                                                                                                     "E!1")
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "a!1=E!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (inst
                                                                                                                                                           -8
                                                                                                                                                           "x!1")
                                                                                                                                                          (("1"
                                                                                                                                                            (inst
                                                                                                                                                             -22
                                                                                                                                                             "x!1")
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "disjoint?")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "empty?")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst
                                                                                                                                                               -
                                                                                                                                                               "x!1")
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "intersection")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "member")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (typepred
                                                                                                                               "x!1")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -14
                                                                                                                                 "x!1")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "II"
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "-"
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -14)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "*"
                                                                                                                 2)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "phi")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (case-replace
                                                                                                                         "CC_SET(choose(E!1))")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "CC_SET"
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (skosimp)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "a!1")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "P1"
                                                                                                                                 -2)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "choose(E!1)")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               -14
                                                                               4)
                                                                              (("2"
                                                                                (apply-extensionality
                                                                                 1
                                                                                 :hide?
                                                                                 t)
                                                                                (("2"
                                                                                  (case-replace
                                                                                   "x!1=0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "rest"
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "remove")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "NZ_IMAGE")
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (case-replace
                                                                                       "image(II, fullset[T])(x!1)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "fullset"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "image"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (skosimp)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "II")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "-"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "CC_SET(x!2)")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -9
                                                                                                     "x!2")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -9)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "*"
                                                                                                             -2)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "phi"
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (expand
                                                                                                     "*"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "phi"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "member")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "rest"
                                                                                                             3)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "remove")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "NZ_IMAGE"
                                                                                                                   3
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "fullset"
                                                                                                                     3)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "image"
                                                                                                                       3)
                                                                                                                      (("2"
                                                                                                                        (split
                                                                                                                         3)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "/="
                                                                                                                           1)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "CC_SET"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (typepred
                                                                                                                               "p!1")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "finite_partition?")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "fullset")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "partition?")
                                                                                                                                      (("1"
                                                                                                                                        (flatten)
                                                                                                                                        (("1"
                                                                                                                                          (lemma
                                                                                                                                           "extensionality_postulate"
                                                                                                                                           ("f"
                                                                                                                                            "Union(p!1)"
                                                                                                                                            "g"
                                                                                                                                            "{x: T | TRUE}"))
                                                                                                                                          (("1"
                                                                                                                                            (replace
                                                                                                                                             -1
                                                                                                                                             -2
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (hide
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "x!2")
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "Union"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (skosimp)
                                                                                                                                                    (("1"
                                                                                                                                                      (typepred
                                                                                                                                                       "a!1")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         +
                                                                                                                                                         "a!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           1)
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "finite_partition_of?")
                                                                                                                                                            (("1"
                                                                                                                                                              (inst
                                                                                                                                                               -20
                                                                                                                                                               "a!1")
                                                                                                                                                              (("1"
                                                                                                                                                                (flatten)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "P1"
                                                                                                                                                             1)
                                                                                                                                                            (("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (typepred
                                                                                                                                                                 "x!3")
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "finite_partition_of?")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -21
                                                                                                                                                                     "a!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (flatten)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "constant_over?")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (skosimp)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (inst-cp
                                                                                                                                                                             -22
                                                                                                                                                                             "x!2")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (inst
                                                                                                                                                                               -22
                                                                                                                                                                               "x!3")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "CC"
                                                                                                                                                                                   1)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    nil
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (inst
                                                                                                                           +
                                                                                                                           "x!2")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (replace
                                                                                         1
                                                                                         3)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "rest"
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "remove")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "fullset"
                                                                                                     1)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "image"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "NZ_IMAGE"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "fullset"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "image"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (skosimp)
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 +
                                                                                                                 "x!2")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "II"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "-")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "*"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "phi"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "member")
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "CC_SET(x!2)")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -9
                                                                                                                                 "x!2")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "CC")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "i!1")
                                                                  (("2"
                                                                    (expand
                                                                     "isf?")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (case
                                                                         "subset?(CC_SET,nonzero_set?(i!1))")
                                                                        (("1"
                                                                          (lemma
                                                                           "m_monotone"
                                                                           ("a"
                                                                            "CC_SET"
                                                                            "b"
                                                                            "nonzero_set?(i!1)"))
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (expand
                                                                               "x_le")
                                                                              (("1"
                                                                                (expand
                                                                                 "mu_fin?")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           -12
                                                                           5)
                                                                          (("2"
                                                                            (expand
                                                                             "subset?"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "member")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst
                                                                                   -6
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "nonzero_set?")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (hide -1 -7 4)
                                                          (("2"
                                                            (skosimp)
                                                            (("2"
                                                              (expand
                                                               "CC_SET")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (typepred
                                                                   "a!1")
                                                                  (("2"
                                                                    (split)
                                                                    (("1"
                                                                      (expand
                                                                       "P1"
                                                                       -2)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       +
                                                                       "a!1")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide-all-but (-1 -7 1))
                                                  (("2"
                                                    (lemma
                                                     "finite_countable[set[T]]"
                                                     ("x" "P1"))
                                                    (("1"
                                                      (hide -2)
                                                      (("1"
                                                        (expand "restrict")
                                                        (("1"
                                                          (expand
                                                           "is_countable")
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (typepred "f!1")
                                                              (("1"
                                                                (inst
                                                                 +
                                                                 "lambda (x:(LAMBDA (s: (S)): P1(s))): f!1(x)")
                                                                (("1"
                                                                  (expand
                                                                   "injective?")
                                                                  (("1"
                                                                    (skosimp)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x1!1"
                                                                       "x2!1")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide-all-but (-1 -6 1))
                                                (("2"
                                                  (typepred "p!1")
                                                  (("2"
                                                    (expand
                                                     "finite_partition?")
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (lemma
                                                         "finite_subset[set[T]]"
                                                         ("s" "P1" "A" "p!1"))
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "P1")
                                              (("2"
                                                (expand "subset?")
                                                (("2"
                                                  (expand "member")
                                                  (("2" (skosimp) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("3" (hide 2)
              (("3" (skosimp*)
                (("3" (expand "convergent?")
                  (("3" (typepred "p!1")
                    (("3" (expand "finite_partition?")
                      (("3" (flatten) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("4" (hide 2)
              (("4" (skosimp*)
                (("4" (expand "finite_partition_of?")
                  (("4" (inst - "Y!1")
                    (("4" (flatten) (("4" (assert) nil nil)) nil)) nil))
                  nil))
                nil))
              nil)
             ("5" (hide 2)
              (("5" (skosimp*)
                (("5" (expand "nonempty?") (("5" (propax) nil nil)) nil))
                nil))
              nil)
             ("6" (hide 2)
              (("6" (skosimp*)
                (("6" (expand "nonempty?") (("6" (propax) nil nil)) nil))
                nil))
              nil)
             ("7" (hide 2)
              (("7" (skosimp*)
                (("7" (typepred "p!1")
                  (("7" (expand "finite_partition?")
                    (("7" (flatten)
                      (("7" (lemma "finite_countable[set[T]]" ("x" "p!1"))
                        (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("8" (hide 2)
              (("8" (skosimp)
                (("8" (typepred "i!1")
                  (("8" (expand "isf?")
                    (("8" (expand "simple?")
                      (("8" (flatten)
                        (("8"
                          (lemma "finite_subset[real]"
                           ("s"
                            "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                            "A" "image(i!1, fullset[T])"))
                          (("1" (assert)
                            (("1" (hide-all-but 1)
                              (("1" (expand "fullset")
                                (("1" (expand "image")
                                  (("1" (expand "subset?")
                                    (("1" (expand "member")
                                      (("1" (skosimp*) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (propax) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("3" (hide 2)
          (("3" (skosimp*)
            (("3" (expand "convergent?")
              (("3" (typepred "p!1")
                (("3" (expand "finite_partition?") (("3" (flatten) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("4" (skosimp*)
          (("4" (expand "finite_partition_of?")
            (("4" (inst - "Y!1")
              (("4" (flatten) (("4" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("5" (hide 2)
          (("5" (skosimp*)
            (("5" (expand "nonempty?") (("5" (propax) nil nil)) nil)) nil))
          nil)
         ("6" (hide 2)
          (("6" (skosimp*)
            (("6" (expand "nonempty?") (("6" (propax) nil nil)) nil)) nil))
          nil)
         ("7" (hide 2)
          (("7" (skosimp)
            (("7" (typepred "p!1")
              (("7" (expand "finite_partition?")
                (("7" (flatten)
                  (("7" (lemma "finite_countable[set[T]]" ("x" "p!1"))
                    (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("8" (hide 2)
          (("8" (skosimp)
            (("8" (hide -1)
              (("8" (typepred "i!1")
                (("8" (expand "isf?")
                  (("8" (expand "simple?")
                    (("8" (flatten)
                      (("8"
                        (lemma "finite_subset[real]"
                         ("s"
                          "{c | c /= 0 AND image[T, real](i!1, fullset[T])(c)}"
                          "A" "image(i!1, fullset[T])"))
                        (("1" (assert)
                          (("1" (hide-all-but 1)
                            (("1" (expand "fullset")
                              (("1" (expand "image")
                                (("1" (expand "subset?")
                                  (("1" (expand "member")
                                    (("1" (skosimp*) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (propax) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nonempty_card formula-decl nil finite_sets nil)
    (card_rest formula-decl nil finite_sets nil)
    (phi const-decl "nat" measure_space nil)
    (sigma_remove formula-decl nil sigma_countable sigma_set)
    (borel nonempty-type-eq-decl nil borel nil)
    (borel? const-decl "sigma_algebra" borel nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (difference const-decl "set" sets nil) (union const-decl "set" sets nil)
    (constant_over? const-decl "bool" measure_space nil)
    (partition? const-decl "bool" partitions nil)
    (nonempty_countable type-eq-decl nil sigma_countable sigma_set)
    (nonempty_countable? const-decl "bool" sigma_countable sigma_set)
    (sigma_choose_rest formula-decl nil sigma_countable sigma_set)
    (finite_countable judgement-tcc nil countable_props sets_aux)
    (injective? const-decl "bool" functions nil)
    (remove const-decl "set" sets nil)
    (m_monotone formula-decl nil measure_props nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (intersection const-decl "set" sets nil)
    (disjoint? const-decl "bool" sets nil)
    (m_disjoint_union formula-decl nil measure_props nil)
    (sigma_disjoint_union formula-decl nil sigma_countable sigma_set)
    (rest const-decl "set" sets nil) (Union const-decl "set" sets nil)
    (measurable_Union judgement-tcc nil measure_space_def nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (sigma_empty formula-decl nil sigma_countable sigma_set)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (emptyset const-decl "set" sets nil)
    (m_emptyset formula-decl nil measure_props nil)
    (sigma_zero formula-decl nil sigma_countable sigma_set)
    (sigma_eq formula-decl nil sigma_countable sigma_set)
    (extensionality_postulate formula-decl nil functions nil)
    (sigma_singleton formula-decl nil sigma_countable sigma_set)
    (card_is_0 formula-decl nil finite_sets nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (finite_subset formula-decl nil finite_sets nil)
    (simple? const-decl "bool" measure_space nil)
    (setofsets type-eq-decl nil sets nil) (set type-eq-decl nil sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (countable_set nonempty-type-eq-decl nil countability sets_aux)
    (is_countable const-decl "bool" countability sets_aux)
    (convergent? const-decl "bool" countable_convergence sigma_set)
    (sigma const-decl "real" sigma_countable sigma_set)
    (empty? const-decl "bool" sets nil) (nonempty? const-decl "bool" sets nil)
    (choose const-decl "(p)" sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (mu const-decl "nnreal" measure_props nil))
   shostak))
 (isf_integral_scal 0
  (isf_integral_scal-1 nil 3390794658
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (rewrite "isf_def")
        (("" (skosimp)
          (("" (lemma "isf_integral_def" ("i" "i!1" "p" "p!1"))
            (("" (typepred "p!1")
              (("" (replace -2)
                (("" (lemma "isf_integral_def" ("i" "c!1*i!1" "p" "p!1"))
                  (("" (split -1)
                    (("1" (replace -1)
                      (("1" (replace -4)
                        (("1" (assert)
                          (("1" (hide -1 -4)
                            (("1" (rewrite "sigma_scal" 1 :dir rl)
                              (("1"
                                (case-replace "(LAMBDA Y:
             IF (NOT p!1(Y)) OR empty?(Y) OR (c!1 * i!1)(choose[T](Y)) = 0
               THEN 0
             ELSE (c!1 * i!1)(choose[T](Y)) * mu(Y)
             ENDIF)
       =c!1 *(LAMBDA (Y_1: set[T]):
                 IF (NOT p!1(Y_1)) OR
                     empty?(Y_1) OR i!1(choose[T](Y_1)) = 0
                   THEN 0
                 ELSE i!1(choose[T](Y_1)) * mu(Y_1)
                 ENDIF)")
                                (("1" (hide 2)
                                  (("1" (apply-extensionality 1 :hide? t)
                                    (("1" (expand "*")
                                      (("1"
                                        (case-replace "p!1(x!1)")
                                        (("1"
                                          (case-replace "empty?(x!1)")
                                          (("1" (assert) nil nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (case-replace
                                               "i!1(choose[T](x!1)) = 0")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (case-replace "c!1=0")
                                                  (("1" (assert) nil nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (expand "nonempty?")
                                                (("3" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil)
                                     ("2" (skosimp*)
                                      (("2"
                                        (expand "finite_partition_of?")
                                        (("2"
                                          (inst - "Y!1")
                                          (("2"
                                            (flatten)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("3" (skosimp)
                                      (("3"
                                        (expand "nonempty?")
                                        (("3" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("4" (skosimp*)
                                      (("4"
                                        (expand "finite_partition_of?")
                                        (("4"
                                          (inst - "Y!1")
                                          (("4"
                                            (flatten)
                                            (("4"
                                              (assert)
                                              (("4"
                                                (expand "*")
                                                (("4"
                                                  (replace -5)
                                                  (("4" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("5" (skosimp)
                                      (("5"
                                        (expand "nonempty?")
                                        (("5" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("6" (skosimp)
                                      (("6"
                                        (expand "nonempty?")
                                        (("6" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (hide 2)
                                  (("2" (skosimp)
                                    (("2" (expand "finite_partition_of?")
                                      (("2"
                                        (inst - "Y!1")
                                        (("2"
                                          (flatten)
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3" (skosimp)
                                  (("3" (expand "nonempty?")
                                    (("3" (propax) nil nil)) nil))
                                  nil)
                                 ("4" (skosimp)
                                  (("4" (hide 4)
                                    (("4" (expand "*")
                                      (("4"
                                        (expand "finite_partition_of?")
                                        (("4"
                                          (inst - "Y!1")
                                          (("4"
                                            (flatten)
                                            (("4" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("5" (skosimp)
                                  (("5" (expand "nonempty?")
                                    (("5" (propax) nil nil)) nil))
                                  nil)
                                 ("6" (skosimp)
                                  (("6" (expand "nonempty?")
                                    (("6" (propax) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2" (expand "convergent?")
                                  (("2" (flatten)
                                    (("2" (hide 2)
                                      (("2"
                                        (expand "finite_partition?")
                                        (("2" (flatten) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (skosimp)
                                (("3" (expand "finite_partition_of?")
                                  (("3" (hide 4)
                                    (("3" (inst - "Y!1")
                                      (("3"
                                        (flatten)
                                        (("3" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("4" (skosimp)
                                (("4" (expand "nonempty?")
                                  (("4" (propax) nil nil)) nil))
                                nil)
                               ("5" (skosimp)
                                (("5" (expand "nonempty?")
                                  (("5" (propax) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -3 2)
                      (("2" (expand "finite_partition_of?")
                        (("2" (skosimp)
                          (("2" (typepred "E!1")
                            (("2" (inst - "E!1")
                              (("2" (flatten)
                                (("2" (replace -3)
                                  (("2" (split 1)
                                    (("1" (expand "*")
                                      (("1"
                                        (expand "constant_over?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (inst + "c!1*y!1")
                                            (("1"
                                              (skosimp)
                                              (("1"
                                                (inst - "x!1")
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (flatten)
                                      (("2"
                                        (split -5)
                                        (("1" (propax) nil nil)
                                         ("2"
                                          (expand "*" 2)
                                          (("2"
                                            (replace -1)
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("3" (propax) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (isf_scal application-judgement "isf" isf nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (constant_over? const-decl "bool" measure_space nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (sigma_scal formula-decl nil sigma_countable sigma_set)
    (is_countable const-decl "bool" countability sets_aux)
    (countable_set nonempty-type-eq-decl nil countability sets_aux)
    (convergent? const-decl "bool" countable_convergence sigma_set)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nonempty? const-decl "bool" sets nil) (choose const-decl "(p)" sets nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (mu const-decl "nnreal" measure_props nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (i!1 skolem-const-decl "isf" isf nil)
    (p!1 skolem-const-decl "(finite_partition_of?(i!1))" isf nil)
    (c!1 skolem-const-decl "real" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (isf_integral_def formula-decl nil isf nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil) (set type-eq-decl nil sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil)
    (finite_partition_of? const-decl "bool" isf nil)
    (isf_def formula-decl nil isf nil))
   shostak))
 (isf_integral_opp 0
  (isf_integral_opp-1 nil 3390836252
   ("" (skosimp)
    (("" (lemma "isf_integral_scal" ("i" "i!1" "c" "-1"))
      (("" (expand "-") (("" (expand "*") (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (T formal-type-decl nil isf nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (isf_integral_scal formula-decl nil isf nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[T -> real]" real_fun_ops reals))
   shostak))
 (isf_integral_add 0
  (isf_integral_add-1 nil 3390886006
   ("" (skosimp)
    (("" (typepred "i2!1")
      (("" (typepred "i1!1")
        (("" (expand "isf?")
          (("" (flatten)
            (("" (rewrite "simple_def2")
              (("" (rewrite "simple_def2")
                (("" (skosimp*)
                  (("" (name "PP" "join(P!1,P!2)")
                    (("" (case "every(S,PP)")
                      (("1" (hide -3 -6)
                        (("1" (case "every(constant_over?(i1!1), PP)")
                          (("1" (case "every(constant_over?(i2!1), PP)")
                            (("1"
                              (case "every(constant_over?(i1!1+i2!1), PP)")
                              (("1" (hide -6 -8)
                                (("1"
                                  (lemma "isf_integral_def"
                                   ("i" "i1!1" "p" "PP"))
                                  (("1"
                                    (lemma "isf_integral_def"
                                     ("i" "i2!1" "p" "PP"))
                                    (("1"
                                      (lemma
                                       "isf_integral_def"
                                       ("i" "i1!1+i2!1" "p" "PP"))
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (split -2)
                                          (("1"
                                            (split -3)
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (replace -2)
                                                (("1"
                                                  (replace -3)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (hide -1 -2 -3)
                                                      (("1"
                                                        (hide -5)
                                                        (("1"
                                                          (typepred "PP")
                                                          (("1"
                                                            (copy -1)
                                                            (("1"
                                                              (expand
                                                               "finite_partition?"
                                                               -1)
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (case
                                                                     "finite_partition_of?(i2!1)(PP)")
                                                                    (("1"
                                                                      (case
                                                                       "finite_partition_of?(i1!1)(PP)")
                                                                      (("1"
                                                                        (case
                                                                         "finite_partition_of?(i1!1+i2!1)(PP)")
                                                                        (("1"
                                                                          (lemma
                                                                           "sigma_plus[set[T]]"
                                                                           ("X"
                                                                            "PP"
                                                                            "f"
                                                                            "LAMBDA (Y_1: set[T]):
              IF (NOT PP(Y_1)) OR empty?(Y_1) OR i1!1(choose[T](Y_1)) = 0
                THEN 0
              ELSE i1!1(choose[T](Y_1)) * mu(Y_1)
              ENDIF"
                                                                            "g"
                                                                            "LAMBDA (Y_1: set[T]):
              IF (NOT PP(Y_1)) OR empty?(Y_1) OR i2!1(choose[T](Y_1)) = 0
                THEN 0
              ELSE i2!1(choose[T](Y_1)) * mu(Y_1)
              ENDIF"))
                                                                          (("1"
                                                                            (replace
                                                                             -1
                                                                             1
                                                                             rl)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (case-replace
                                                                                 "(LAMBDA (Y_2: set[T]):
             IF (NOT PP(Y_2)) OR
                 empty?(Y_2) OR (i1!1 + i2!1)(choose[T](Y_2)) = 0
               THEN 0
             ELSE (i1!1 + i2!1)(choose[T](Y_2)) * mu(Y_2)
             ENDIF)
       =
       
             ((LAMBDA (Y_1: set[T]):
                IF (NOT PP(Y_1)) OR empty?(Y_1) OR i1!1(choose[T](Y_1)) = 0
                  THEN 0
                ELSE i1!1(choose[T](Y_1)) * mu(Y_1)
                ENDIF)
              +
              (LAMBDA (Y_1: set[T]):
                 IF (NOT PP(Y_1)) OR
                     empty?(Y_1) OR i2!1(choose[T](Y_1)) = 0
                   THEN 0
                 ELSE i2!1(choose[T](Y_1)) * mu(Y_1)
                 ENDIF))")
                                                                                (("1"
                                                                                  (hide
                                                                                   2)
                                                                                  (("1"
                                                                                    (apply-extensionality
                                                                                     :hide?
                                                                                     t)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "+")
                                                                                      (("1"
                                                                                        (case-replace
                                                                                         "PP(x!1)")
                                                                                        (("1"
                                                                                          (case-replace
                                                                                           "empty?(x!1)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "i1!1(choose[T](x!1)) = 0")
                                                                                              (("1"
                                                                                                (case-replace
                                                                                                 "i2!1(choose[T](x!1)) = 0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (case-replace
                                                                                                 "i2!1(choose[T](x!1)) = 0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (case-replace
                                                                                                     "i2!1(choose[T](x!1))=-i1!1(choose[T](x!1))")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (expand
                                                                                                 "nonempty?")
                                                                                                (("3"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "finite_partition_of?"
                                                                                         -4)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "Y!1")
                                                                                          (("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (skosimp)
                                                                                      (("3"
                                                                                        (expand
                                                                                         "nonempty?")
                                                                                        (("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("4"
                                                                                      (skosimp)
                                                                                      (("4"
                                                                                        (expand
                                                                                         "finite_partition_of?"
                                                                                         -3)
                                                                                        (("4"
                                                                                          (inst
                                                                                           -
                                                                                           "Y!1")
                                                                                          (("4"
                                                                                            (flatten)
                                                                                            (("4"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("5"
                                                                                      (skosimp)
                                                                                      (("5"
                                                                                        (expand
                                                                                         "nonempty?")
                                                                                        (("5"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("6"
                                                                                      (skosimp*)
                                                                                      (("6"
                                                                                        (expand
                                                                                         "finite_partition_of?"
                                                                                         -2)
                                                                                        (("6"
                                                                                          (inst
                                                                                           -
                                                                                           "Y!1")
                                                                                          (("6"
                                                                                            (flatten)
                                                                                            (("6"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("7"
                                                                                      (skosimp)
                                                                                      (("7"
                                                                                        (expand
                                                                                         "nonempty?")
                                                                                        (("7"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("8"
                                                                                      (skosimp)
                                                                                      (("8"
                                                                                        (expand
                                                                                         "nonempty?")
                                                                                        (("8"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "finite_partition_of?"
                                                                                       -2)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "Y!1")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (skosimp)
                                                                                  (("3"
                                                                                    (expand
                                                                                     "nonempty?")
                                                                                    (("3"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (expand
                                                                               "convergent?")
                                                                              (("2"
                                                                                (flatten)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (hide
                                                                             2)
                                                                            (("3"
                                                                              (skosimp)
                                                                              (("3"
                                                                                (expand
                                                                                 "finite_partition_of?"
                                                                                 -4)
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "Y!1")
                                                                                  (("3"
                                                                                    (flatten)
                                                                                    (("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (skosimp)
                                                                            (("4"
                                                                              (expand
                                                                               "nonempty?")
                                                                              (("4"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("5"
                                                                            (expand
                                                                             "convergent?")
                                                                            (("5"
                                                                              (flatten)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("6"
                                                                            (hide
                                                                             2)
                                                                            (("6"
                                                                              (skosimp)
                                                                              (("6"
                                                                                (expand
                                                                                 "finite_partition_of?"
                                                                                 -3)
                                                                                (("6"
                                                                                  (inst
                                                                                   -
                                                                                   "Y!1")
                                                                                  (("6"
                                                                                    (flatten)
                                                                                    (("6"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("7"
                                                                            (skosimp)
                                                                            (("7"
                                                                              (expand
                                                                               "nonempty?")
                                                                              (("7"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("8"
                                                                            (skosimp)
                                                                            (("8"
                                                                              (expand
                                                                               "nonempty?")
                                                                              (("8"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           2
                                                                           -1
                                                                           -2)
                                                                          (("2"
                                                                            (expand
                                                                             "finite_partition_of?")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "every")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "E!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -6
                                                                                     "E!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constant_over?")
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -4
                                                                                               -5)
                                                                                              (("2"
                                                                                                (lemma
                                                                                                 "isf_add"
                                                                                                 ("i1"
                                                                                                  "i1!1"
                                                                                                  "i2"
                                                                                                  "i2!1"))
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "isf?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (lemma
                                                                                                       "m_monotone"
                                                                                                       ("a"
                                                                                                        "E!1"
                                                                                                        "b"
                                                                                                        "nonzero_set?((+[T])(i1!1, i2!1))"))
                                                                                                      (("2"
                                                                                                        (split
                                                                                                         -1)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "x_le")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "mu_fin?")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "nonzero_set?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("2"
                                                                                                                (skosimp)
                                                                                                                (("2"
                                                                                                                  (inst-cp
                                                                                                                   -
                                                                                                                   "x!1")
                                                                                                                  (("2"
                                                                                                                    (replace
                                                                                                                     -2)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "choose[T](E!1)")
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -7
                                                                                                                         *
                                                                                                                         rl)
                                                                                                                        (("2"
                                                                                                                          (propax)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2
                                                                         -1
                                                                         -4
                                                                         -5
                                                                         -9)
                                                                        (("2"
                                                                          (expand
                                                                           "finite_partition_of?")
                                                                          (("2"
                                                                            (skosimp)
                                                                            (("2"
                                                                              (typepred
                                                                               "E!1")
                                                                              (("2"
                                                                                (expand
                                                                                 "every")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "E!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -
                                                                                     "E!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "constant_over?")
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (inst-cp
                                                                                               -
                                                                                               "choose[T](E!1)")
                                                                                              (("2"
                                                                                                (replace
                                                                                                 -5
                                                                                                 *
                                                                                                 rl)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -5)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "m_monotone"
                                                                                                     ("a"
                                                                                                      "E!1"
                                                                                                      "b"
                                                                                                      "nonzero_set?(i1!1)"))
                                                                                                    (("2"
                                                                                                      (split
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "x_le")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "mu_fin?")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "subset?")
                                                                                                        (("2"
                                                                                                          (skosimp)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "member")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "nonzero_set?")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "x!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       2
                                                                       -2
                                                                       -3
                                                                       -5
                                                                       -7)
                                                                      (("2"
                                                                        (expand
                                                                         "finite_partition_of?")
                                                                        (("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (expand
                                                                             "every")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "E!1")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "E!1")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "m_monotone"
                                                                                       ("a"
                                                                                        "E!1"
                                                                                        "b"
                                                                                        "nonzero_set?(i2!1)"))
                                                                                      (("2"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "x_le")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "mu_fin?")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "subset?")
                                                                                          (("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "member")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nonzero_set?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "constant_over?")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "choose[T](E!1)")
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide -1 -2 2)
                                              (("2"
                                                (expand
                                                 "finite_partition_of?")
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (typepred "E!1")
                                                    (("2"
                                                      (expand "every")
                                                      (("2"
                                                        (inst -4 "E!1")
                                                        (("2"
                                                          (replace -4)
                                                          (("2"
                                                            (inst -5 "E!1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (lemma
                                                                   "m_monotone"
                                                                   ("a"
                                                                    "E!1"
                                                                    "b"
                                                                    "nonzero_set?(i1!1)"))
                                                                  (("2"
                                                                    (split -1)
                                                                    (("1"
                                                                      (expand
                                                                       "x_le")
                                                                      (("1"
                                                                        (expand
                                                                         "mu_fin?")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "nonzero_set?")
                                                                            (("2"
                                                                              (expand
                                                                               "constant_over?")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -6
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (inst
                                                                                     -6
                                                                                     "choose(E!1)")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide -1 -2 2)
                                            (("2"
                                              (expand "finite_partition_of?")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "every")
                                                  (("2"
                                                    (hide -1 -3 -6 -5)
                                                    (("2"
                                                      (inst - "E!1")
                                                      (("2"
                                                        (inst - "E!1")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (expand
                                                               "constant_over?")
                                                              (("2"
                                                                (skosimp)
                                                                (("2"
                                                                  (lemma
                                                                   "m_monotone"
                                                                   ("a"
                                                                    "E!1"
                                                                    "b"
                                                                    "nonzero_set?(i2!1)"))
                                                                  (("2"
                                                                    (split -1)
                                                                    (("1"
                                                                      (expand
                                                                       "x_le")
                                                                      (("1"
                                                                        (expand
                                                                         "mu_fin?")
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "subset?")
                                                                      (("2"
                                                                        (skosimp)
                                                                        (("2"
                                                                          (expand
                                                                           "member")
                                                                          (("2"
                                                                            (expand
                                                                             "nonzero_set?")
                                                                            (("2"
                                                                              (inst-cp
                                                                               -
                                                                               "x!1")
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "choose(E!1)")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide -1 -2 -4 -5 -7 2)
                                          (("2"
                                            (expand "finite_partition_of?")
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (expand "every")
                                                (("2"
                                                  (inst - "E!1")
                                                  (("2"
                                                    (inst - "E!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (expand
                                                           "constant_over?")
                                                          (("2"
                                                            (skosimp)
                                                            (("2"
                                                              (expand "+")
                                                              (("2"
                                                                (lemma
                                                                 "m_monotone"
                                                                 ("a"
                                                                  "E!1"
                                                                  "b"
                                                                  "union(nonzero_set?(i1!1),nonzero_set?(i2!1))"))
                                                                (("1"
                                                                  (split -1)
                                                                  (("1"
                                                                    (expand
                                                                     "x_le")
                                                                    (("1"
                                                                      (expand
                                                                       "mu_fin?")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "m_union"
                                                                           ("a"
                                                                            "nonzero_set?(i1!1)"
                                                                            "b"
                                                                            "nonzero_set?(i2!1)"))
                                                                          (("1"
                                                                            (expand
                                                                             "x_le")
                                                                            (("1"
                                                                              (expand
                                                                               "x_add")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (rewrite
                                                                             "nonzero_measurable")
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (rewrite
                                                                             "nonzero_measurable")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "subset?")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (expand
                                                                         "union")
                                                                        (("2"
                                                                          (expand
                                                                           "nonzero_set?")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (inst-cp
                                                                                 -
                                                                                 "x!1")
                                                                                (("2"
                                                                                  (inst
                                                                                   -
                                                                                   "choose(E!1)")
                                                                                  (("2"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (rewrite
                                                                   "measurable_union")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2" (expand "every")
                                  (("2" (skosimp)
                                    (("2" (typepred "x!1")
                                      (("2"
                                        (replace -5 -1 rl)
                                        (("2"
                                          (hide -5)
                                          (("2"
                                            (expand "join")
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (replace -1)
                                                (("2"
                                                  (hide -1)
                                                  (("2"
                                                    (inst
                                                     -
                                                     "intersection(a1!1, a2!1)")
                                                    (("1"
                                                      (inst
                                                       -
                                                       "intersection(a1!1, a2!1)")
                                                      (("1"
                                                        (expand
                                                         "constant_over?")
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst + "y!2+y!1")
                                                            (("1"
                                                              (skosimp)
                                                              (("1"
                                                                (inst - "x!2")
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "x!2")
                                                                  (("1"
                                                                    (expand
                                                                     "+"
                                                                     1)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (replace
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (expand "PP")
                                                          (("2"
                                                            (expand "join")
                                                            (("2"
                                                              (inst
                                                               +
                                                               "a1!1"
                                                               "a2!1")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide 2)
                                                      (("2"
                                                        (expand "PP")
                                                        (("2"
                                                          (expand "join")
                                                          (("2"
                                                            (inst
                                                             +
                                                             "a1!1"
                                                             "a2!1")
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (expand "every")
                                (("2" (skosimp)
                                  (("2" (typepred "x!1")
                                    (("2" (expand "PP")
                                      (("2"
                                        (expand "join")
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (expand "constant_over?")
                                                (("2"
                                                  (typepred "a2!1")
                                                  (("2"
                                                    (inst -6 "a2!1")
                                                    (("2"
                                                      (skosimp)
                                                      (("2"
                                                        (inst + "y!1")
                                                        (("2"
                                                          (skosimp)
                                                          (("2"
                                                            (typepred "x!2")
                                                            (("2"
                                                              (expand
                                                               "intersection")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (expand
                                                                   "member")
                                                                  (("2"
                                                                    (inst
                                                                     -8
                                                                     "x!2")
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide -4 -6 2)
                            (("2" (hide -1 -2 -4)
                              (("2" (expand "constant_over?")
                                (("2" (expand "every")
                                  (("2" (skosimp)
                                    (("2" (typepred "x!1")
                                      (("2"
                                        (expand "PP")
                                        (("2"
                                          (expand "join")
                                          (("2"
                                            (skosimp)
                                            (("2"
                                              (inst -2 "a1!1")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (inst + "y!1")
                                                  (("2"
                                                    (skosimp)
                                                    (("2"
                                                      (inst - "x!2")
                                                      (("2"
                                                        (typepred "x!2")
                                                        (("2"
                                                          (replace -2 -1)
                                                          (("2"
                                                            (expand
                                                             "intersection")
                                                            (("2"
                                                              (expand
                                                               "member")
                                                              (("2"
                                                                (flatten)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2 -3 -4 -6 -7)
                        (("2" (expand "every")
                          (("2" (skosimp)
                            (("2" (typepred "x!1")
                              (("2" (replace -2 -1 rl)
                                (("2" (hide -2)
                                  (("2" (expand "join")
                                    (("2" (skosimp)
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (inst - "a1!1")
                                            (("2"
                                              (inst - "a2!1")
                                              (("2"
                                                (lemma
                                                 "measurable_intersection"
                                                 ("a" "a1!1" "b" "a2!1"))
                                                (("1"
                                                  (expand "measurable_set?")
                                                  (("1" (propax) nil nil))
                                                  nil)
                                                 ("2"
                                                  (expand "measurable_set?")
                                                  (("2" (propax) nil nil))
                                                  nil)
                                                 ("3"
                                                  (expand "measurable_set?")
                                                  (("3" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (simple_def2 formula-decl nil measure_space nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (PRED type-eq-decl nil defined_types nil)
    (every const-decl "bool" sets nil)
    (constant_over? const-decl "bool" measure_space nil)
    (x!2 skolem-const-decl "(intersection(a1!1, a2!1))" isf nil)
    (a1!1 skolem-const-decl "(P!1)" isf nil)
    (a2!1 skolem-const-decl "(P!2)" isf nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (isf_integral_def formula-decl nil isf nil)
    (isf_add application-judgement "isf" isf nil)
    (measurable_union judgement-tcc nil measure_space_def nil)
    (m_union formula-decl nil measure_props nil)
    (x_add const-decl "extended_nnreal" extended_nnreal extended_nnreal)
    (nonzero_measurable formula-decl nil isf nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (x!1 skolem-const-decl "T" isf nil) (E!1 skolem-const-decl "(PP)" isf nil)
    (union const-decl "set" sets nil) (E!1 skolem-const-decl "(PP)" isf nil)
    (x!1 skolem-const-decl "T" isf nil) (x!1 skolem-const-decl "T" isf nil)
    (E!1 skolem-const-decl "(PP)" isf nil)
    (m_monotone formula-decl nil measure_props nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (member const-decl "bool" sets nil) (E!1 skolem-const-decl "(PP)" isf nil)
    (x!1 skolem-const-decl "T" isf nil) (subset? const-decl "bool" sets nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (isf_add judgement-tcc nil isf nil)
    (mu const-decl "nnreal" measure_props nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (choose const-decl "(p)" sets nil) (nonempty? const-decl "bool" sets nil)
    (empty? const-decl "bool" sets nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (convergent? const-decl "bool" countable_convergence sigma_set)
    (countable_set nonempty-type-eq-decl nil countability sets_aux)
    (is_countable const-decl "bool" countability sets_aux)
    (sigma_plus formula-decl nil sigma_countable sigma_set)
    (real_times_real_is_real application-judgement "real" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (even_plus_even_is_even application-judgement "even_int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (PP skolem-const-decl "finite_partition[T]" isf nil)
    (i1!1 skolem-const-decl "isf" isf nil)
    (i2!1 skolem-const-decl "isf" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (Y!1 skolem-const-decl "set[T]" isf nil)
    (x!1 skolem-const-decl "T" isf nil) (E!1 skolem-const-decl "(PP)" isf nil)
    (finite_partition_of? const-decl "bool" isf nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (E!1 skolem-const-decl "(PP)" isf nil) (x!1 skolem-const-decl "T" isf nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (a2!1 skolem-const-decl "(P!2)" isf nil)
    (P!2 skolem-const-decl "finite_partition[T]" isf nil)
    (a1!1 skolem-const-decl "(P!1)" isf nil)
    (P!1 skolem-const-decl "finite_partition[T]" isf nil)
    (intersection const-decl "set" sets nil)
    (a1!1 skolem-const-decl "(P!1)" isf nil)
    (x!1 skolem-const-decl "(PP)" isf nil)
    (x!2 skolem-const-decl "(x!1)" isf nil)
    (measurable_intersection judgement-tcc nil measure_space_def nil)
    (join const-decl "finite_partition" partitions nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil)
    (fullset const-decl "set" sets nil)
    (finite_partition? const-decl "bool" partitions nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil))
   shostak))
 (isf_integral_diff 0
  (isf_integral_diff-1 nil 3390836180
   ("" (skosimp)
    (("" (lemma "isf_integral_opp" ("i" "i2!1"))
      (("" (lemma "isf_integral_add" ("i1" "i1!1" "i2" "-i2!1"))
        (("" (expand "-") (("" (expand "+") (("" (assert) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (isf_integral_opp formula-decl nil isf nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (isf_opp application-judgement "isf" isf nil)
    (isf_integral_add formula-decl nil isf nil)
    (- const-decl "[T -> real]" real_fun_ops reals))
   shostak))
 (isf_integral_pos 0
  (isf_integral_pos-1 nil 3390814042
   ("" (name "NZ" "lambda (i:isf): image[T,real](i,nonzero_set?(i))")
    ((""
      (case "FORALL (i: isf,n:nat): card[real](NZ(i)) = n =>(FORALL x: i(x) >= 0) IMPLIES isf_integral(i) >= 0")
      (("1" (skosimp)
        (("1" (inst - "i!1" "card[real](NZ(i!1))")
          (("1" (split -1) (("1" (propax) nil nil) ("2" (propax) nil nil))
            nil)
           ("2" (typepred "i!1")
            (("2" (expand "isf?")
              (("2" (expand "simple?")
                (("2" (flatten)
                  (("2" (lemma "finite_subset[real]")
                    (("2" (inst - "image[T,real](i!1, fullset[T])" "NZ(i!1)")
                      (("2" (split -1)
                        (("1" (propax) nil nil)
                         ("2" (hide-all-but 1)
                          (("2" (expand "NZ")
                            (("2" (expand "fullset")
                              (("2" (expand "nonzero_set?")
                                (("2" (expand "image")
                                  (("2" (expand "subset?")
                                    (("2" (expand "member")
                                      (("2"
                                        (skosimp*)
                                        (("2"
                                          (typepred "x!2")
                                          (("2" (inst + "x!2") nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (induct "n")
          (("1" (skosimp)
            (("1" (rewrite "empty_card" -1 :dir rl)
              (("1" (expand "empty?")
                (("1" (hide -3)
                  (("1" (case-replace "i!1=lambda x: 0")
                    (("1" (rewrite "isf_integral_zero")
                      (("1" (assert) nil nil)) nil)
                     ("2" (apply-extensionality 1 :hide? t)
                      (("2" (inst - "i!1(x!1)")
                        (("2" (expand "NZ")
                          (("2" (expand "nonzero_set?")
                            (("2" (expand "image")
                              (("2" (inst + "x!1") nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp*)
            (("2" (lemma "nonempty_card[real]" ("S" "NZ(i!1)"))
              (("2" (assert)
                (("2" (lemma "card_rest[real]" ("S" "NZ(i!1)"))
                  (("2" (replace -4)
                    (("2" (assert)
                      (("2" (lemma "choose_rest[real]" ("a" "NZ(i!1)"))
                        (("2" (expand "nonempty?")
                          (("2" (lemma "choose_member[real]" ("a" "NZ(i!1)"))
                            (("2" (replace 1)
                              (("2" (name "YY" "choose[real](NZ(i!1))")
                                (("2" (replace -1)
                                  (("2"
                                    (name "XX"
                                          "inverse_image[T,real](i!1,singleton[real](YY))")
                                    (("2"
                                      (lemma
                                       "singleton_is_borel[real,metric_induced_topology]"
                                       ("x" "YY"))
                                      (("2"
                                        (typepred "i!1")
                                        (("2"
                                          (expand "isf?")
                                          (("2"
                                            (expand "simple?")
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand
                                                 "measurable_function?")
                                                (("2"
                                                  (inst
                                                   -
                                                   "singleton[real](YY)")
                                                  (("2"
                                                    (replace -5)
                                                    (("2"
                                                      (copy -1)
                                                      (("2"
                                                        (expand
                                                         "measurable_set?"
                                                         -1)
                                                        (("2"
                                                          (case "mu_fin?(XX)")
                                                          (("1"
                                                            (lemma
                                                             "isf_phi"
                                                             ("E" "XX"))
                                                            (("1"
                                                              (lemma
                                                               "isf_scal"
                                                               ("c"
                                                                "YY"
                                                                "i"
                                                                "phi[T, S](XX)"))
                                                              (("1"
                                                                (lemma
                                                                 "isf_diff"
                                                                 ("i1"
                                                                  "i!1"
                                                                  "i2"
                                                                  "*[T](YY, phi[T, S](XX))"))
                                                                (("1"
                                                                  (case
                                                                   "rest[real](NZ(i!1))=NZ((-[T])(i!1, *[T](YY, phi[T, S](XX))))")
                                                                  (("1"
                                                                    (inst
                                                                     -16
                                                                     "(-[T])(i!1, *[T](YY, phi[T, S](XX)))")
                                                                    (("1"
                                                                      (replace
                                                                       -1
                                                                       -16
                                                                       rl)
                                                                      (("1"
                                                                        (replace
                                                                         -15)
                                                                        (("1"
                                                                          (hide-all-but
                                                                           (-2
                                                                            -5
                                                                            -7
                                                                            -11
                                                                            -12
                                                                            -13
                                                                            -16
                                                                            -18
                                                                            2))
                                                                          (("1"
                                                                            (split
                                                                             -7)
                                                                            (("1"
                                                                              (rewrite
                                                                               "isf_integral_diff"
                                                                               -1)
                                                                              (("1"
                                                                                (case
                                                                                 "YY<0")
                                                                                (("1"
                                                                                  (expand
                                                                                   "member"
                                                                                   -8)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "NZ"
                                                                                     -8)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "nonzero_set?")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "image")
                                                                                        (("1"
                                                                                          (skosimp)
                                                                                          (("1"
                                                                                            (typepred
                                                                                             "x!1")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -10
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (case-replace
                                                                                   "YY=0")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "isf_integral_scal"
                                                                                       *)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (lemma
                                                                                     "both_sides_times_pos_le1"
                                                                                     ("pz"
                                                                                      "YY"
                                                                                      "x"
                                                                                      "0"
                                                                                      "y"
                                                                                      "mu(XX)"))
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "isf_integral_scal"
                                                                                           *)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "isf_integral_phi")
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "mu(XX)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "measurable_set?")
                                                                                        (("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("3"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (skosimp)
                                                                              (("2"
                                                                                (expand
                                                                                 "-"
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "*"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "phi"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "XX"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "singleton"
                                                                                         1)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "inverse_image"
                                                                                           1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "member"
                                                                                             1)
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "i!1(x!1)=YY")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil)
                                                                                               ("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -7
                                                                                                   "x!1")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "rest"
                                                                     1)
                                                                    (("2"
                                                                      (replace
                                                                       -11)
                                                                      (("2"
                                                                        (replace
                                                                         2)
                                                                        (("2"
                                                                          (expand
                                                                           "remove")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality
                                                                               1
                                                                               :hide?
                                                                               t)
                                                                              (("2"
                                                                                (expand
                                                                                 "NZ")
                                                                                (("2"
                                                                                  (expand
                                                                                   "nonzero_set?")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "*"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "-"
                                                                                       1)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "image")
                                                                                        (("2"
                                                                                          (case-replace
                                                                                           "x!1=YY")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (skosimp)
                                                                                              (("1"
                                                                                                (typepred
                                                                                                 "x!2")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "phi")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "member")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "XX")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "singleton")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "inverse_image")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("1"
                                                                                                                (case-replace
                                                                                                                 "i!1(x!2) = YY")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (case-replace
                                                                                               "(EXISTS (x_1: ({x | i!1(x) /= 0})): x!1 = i!1(x_1))")
                                                                                              (("1"
                                                                                                (skosimp)
                                                                                                (("1"
                                                                                                  (typepred
                                                                                                   "x!2")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     +
                                                                                                     "x!2")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "phi"
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "XX"
                                                                                                         2)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "singleton"
                                                                                                           2)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "inverse_image"
                                                                                                             2)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               2)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "phi"
                                                                                                       1)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "XX"
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "singleton"
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "inverse_image"
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (replace
                                                                                                 1
                                                                                                 3)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "x!2")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "phi"
                                                                                                         (-1
                                                                                                          -2))
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "XX"
                                                                                                           (-1
                                                                                                            -2))
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "singleton"
                                                                                                             (-1
                                                                                                              -2))
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "inverse_image"
                                                                                                               (-1
                                                                                                                -2))
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member"
                                                                                                                 (-1
                                                                                                                  -2))
                                                                                                                (("2"
                                                                                                                  (case-replace
                                                                                                                   "i!1(x!2) = YY")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       +
                                                                                                                       "x!2")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("3"
                                                                    (propax)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (propax)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (hide-all-but
                                                             (-4 1 -1))
                                                            (("2"
                                                              (lemma
                                                               "nonzero_measurable"
                                                               ("g" "i!1"))
                                                              (("2"
                                                                (lemma
                                                                 "m_monotone"
                                                                 ("a"
                                                                  "XX"
                                                                  "b"
                                                                  "nonzero_set?(i!1)"))
                                                                (("2"
                                                                  (split -1)
                                                                  (("1"
                                                                    (expand
                                                                     "x_le")
                                                                    (("1"
                                                                      (expand
                                                                       "mu_fin?")
                                                                      (("1"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (expand
                                                                       "XX")
                                                                      (("2"
                                                                        (expand
                                                                         "nonzero_set?")
                                                                        (("2"
                                                                          (expand
                                                                           "singleton")
                                                                          (("2"
                                                                            (expand
                                                                             "inverse_image")
                                                                            (("2"
                                                                              (expand
                                                                               "member")
                                                                              (("2"
                                                                                (expand
                                                                                 "subset?")
                                                                                (("2"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (typepred
                                                                                       "YY")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "NZ")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "nonzero_set?")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "image")
                                                                                            (("2"
                                                                                              (skosimp)
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "x!2")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("3" (skosimp)
            (("3" (typepred "i!1")
              (("3" (expand "isf?")
                (("3" (expand "simple?")
                  (("3" (flatten)
                    (("3"
                      (lemma "finite_subset[real]"
                       ("A" "image[T,real](i!1, fullset[T])" "s" "NZ(i!1)"))
                      (("1" (assert)
                        (("1" (hide-all-but 1)
                          (("1" (expand "NZ") (("1" (grind) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (propax) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("3" (skosimp)
        (("3" (typepred "i!1")
          (("3" (expand "isf?")
            (("3" (expand "simple?")
              (("3" (flatten)
                (("3"
                  (lemma "finite_subset[real]"
                   ("A" "image[T,real](i!1, fullset[T])" "s" "NZ(i!1)"))
                  (("1" (split -1)
                    (("1" (propax) nil nil)
                     ("2" (hide-all-but 1)
                      (("2" (expand "NZ")
                        (("2" (expand "fullset")
                          (("2" (expand "nonzero_set?")
                            (("2" (expand "image")
                              (("2" (expand "subset?")
                                (("2" (expand "member")
                                  (("2" (skosimp*)
                                    (("2" (inst + "x!2") nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (propax) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf_integral const-decl "real" isf nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (NZ skolem-const-decl "[isf -> set[real]]" isf nil)
    (i!1 skolem-const-decl "isf" isf nil)
    (subset_algebra_fullset name-judgement "(S)" isf nil)
    (measurable_fullset name-judgement "measurable_set[T, S]" isf nil)
    (fullset const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (/= const-decl "boolean" notequal nil)
    (TRUE const-decl "bool" booleans nil) (subset? const-decl "bool" sets nil)
    (finite_subset formula-decl nil finite_sets nil)
    (simple? const-decl "bool" measure_space nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (empty_card formula-decl nil finite_sets nil)
    (isf_integral_zero formula-decl nil isf nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (empty? const-decl "bool" sets nil)
    (nonempty_card formula-decl nil finite_sets nil)
    (card_rest formula-decl nil finite_sets nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nonempty? const-decl "bool" sets nil)
    (singleton_is_borel formula-decl nil hausdorff_borel nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (singleton_is_closed application-judgement
     "closed[real, (metric_induced_topology)]" convergence_aux metric_space)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[real]" integral_def analysis)
    (singleton_is_compact application-judgement
     "compact[real, (metric_induced_topology)]" convergence_aux metric_space)
    (borel nonempty-type-eq-decl nil borel nil)
    (borel? const-decl "sigma_algebra" borel nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (nnreal type-eq-decl nil real_types nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (isf_scal judgement-tcc nil isf nil)
    (phi const-decl "nat" measure_space nil) (rest const-decl "set" sets nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (XX skolem-const-decl "set[T]" isf nil)
    (isf_integral_diff formula-decl nil isf nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (isf_integral_scal formula-decl nil isf nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nonempty_singleton_finite application-judgement
     "non_empty_finite_set[nat]" countability sets_aux)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (isf_integral_phi formula-decl nil isf nil)
    (mu const-decl "nnreal" measure_props nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (both_sides_times_pos_le1 formula-decl nil real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (< const-decl "bool" reals nil) (remove const-decl "set" sets nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (YY skolem-const-decl "(NZ(i!1))" isf nil)
    (x!2 skolem-const-decl "({x | i!1(x) /= 0})" isf nil)
    (i!1 skolem-const-decl "isf" isf nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (isf_diff judgement-tcc nil isf nil) (isf_phi judgement-tcc nil isf nil)
    (nonzero_measurable formula-decl nil isf nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (m_monotone formula-decl nil measure_props nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (inverse_image const-decl "set[D]" function_image nil)
    (choose const-decl "(p)" sets nil)
    (choose_member formula-decl nil sets_lemmas nil)
    (choose_rest formula-decl nil sets_lemmas nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (T formal-type-decl nil isf nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (isf? const-decl "bool" isf nil) (isf nonempty-type-eq-decl nil isf nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (image const-decl "set[R]" function_image nil)
    (nonzero_set? const-decl "set[T]" isf nil))
   shostak))
 (isf_integral_le 0
  (isf_integral_le-1 nil 3390836115
   ("" (skosimp)
    (("" (lemma "isf_integral_diff" ("i1" "i2!1" "i2" "i1!1"))
      (("" (lemma "isf_integral_pos" ("i" "i2!1 - i1!1"))
        (("" (split -1)
          (("1" (assert) nil nil)
           ("2" (skosimp)
            (("2" (inst - "x!1")
              (("2" (expand "-") (("2" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (isf_integral_diff formula-decl nil isf nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (isf_diff application-judgement "isf" isf nil)
    (isf_integral_pos formula-decl nil isf nil)
    (- const-decl "[T -> real]" real_fun_ops reals))
   shostak))
 (isf_integral_abs 0
  (isf_integral_abs-1 nil 3390836884
   ("" (skosimp)
    (("" (case "forall (x:T): -abs(i!1(x))<=i!1(x)&i!1(x)<=abs(i!1(x))")
      (("1" (lemma "isf_integral_le" ("i1" "-abs(i!1)" "i2" "i!1"))
        (("1" (split -1)
          (("1" (lemma "isf_integral_le" ("i1" "i!1" "i2" "abs(i!1)"))
            (("1" (split -1)
              (("1" (rewrite "isf_integral_opp" -2)
                (("1" (expand "abs" 1 1)
                  (("1" (case-replace "isf_integral(i!1) < 0")
                    (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                  nil))
                nil)
               ("2" (skosimp)
                (("2" (inst - "x!1")
                  (("2" (assert)
                    (("2" (flatten)
                      (("2" (expand "abs" 1) (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skosimp)
            (("2" (inst - "x!1")
              (("2" (flatten)
                (("2" (expand "abs" 1)
                  (("2" (expand "-" 1) (("2" (propax) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (<= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (T formal-type-decl nil isf nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (< const-decl "bool" reals nil) (isf_integral const-decl "real" isf nil)
    (isf_integral_opp formula-decl nil isf nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (isf_integral_le formula-decl nil isf nil)
    (isf_opp application-judgement "isf" isf nil)
    (isf_abs application-judgement "isf" isf nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak))
 (isf_bounded 0
  (isf_bounded-1 nil 3390982799
   (""
    (lemma "isf_induction"
     ("P"
      "lambda(i: isf): EXISTS nnx: FORALL x: -nnx <= i(x) AND i(x) <= nnx"))
    (("" (skosimp)
      (("" (inst - "i!1")
        (("" (split -1)
          (("1" (propax) nil nil) ("2" (assert) nil nil)
           ("3" (hide 2)
            (("3" (skosimp*)
              (("3" (inst + "nnx!1+abs(c!1)")
                (("3" (skosimp)
                  (("3" (expand "phi") (("3" (grind) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (+ const-decl "[T -> real]" real_fun_ops reals)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (member const-decl "bool" sets nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (phi const-decl "nat" measure_space nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (isf_induction formula-decl nil isf nil) (T formal-type-decl nil isf nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (isf? const-decl "bool" isf nil) (isf nonempty-type-eq-decl nil isf nil)
    (pred type-eq-decl nil defined_types nil) (>= const-decl "bool" reals nil)
    (nnreal type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil))
   shostak))
 (isf_integral_bound_TCC1 0
  (isf_integral_bound_TCC1-1 nil 3390834716
   ("" (skosimp)
    (("" (typepred "i!1")
      (("" (expand "isf?")
        (("" (flatten)
          (("" (assert)
            (("" (lemma "nonzero_measurable" ("g" "i!1"))
              (("" (expand "measurable_set?") (("" (propax) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (nonzero_measurable formula-decl nil isf nil)
    (measurable_set? const-decl "bool" measure_space_def nil))
   nil
   (isf_integral_bound subtype "isf.nonzero_set?(isf.i)"
    "{m1: (isf.S) | measure_props[isf.T, isf.S, isf.m].mu_fin?(m1)}")))
 (isf_integral_bound 0
  (isf_integral_bound-2 "" 3789904008
   ("" (skosimp)
    ((""
      (lemma "isf_integral_le"
       ("i1" "abs(i!1)" "i2" "nnx!1*phi(nonzero_set?(i!1))"))
      (("1" (split -1)
        (("1" (rewrite "isf_integral_scal" -1)
          (("1" (rewrite "isf_integral_phi" -1)
            (("1" (lemma "nonzero_measurable" ("g" "i!1"))
              (("1" (propax) nil nil)) nil))
            nil)
           ("2" (rewrite "isf_phi")
            (("2" (lemma "nonzero_measurable" ("g" "i!1"))
              (("2" (propax) nil nil)) nil))
            nil))
          nil)
         ("2" (skosimp)
          (("2" (inst - "x!1")
            (("2" (expand "abs" 1)
              (("2" (hide 2)
                (("2" (expand "phi")
                  (("2" (expand "member")
                    (("2" (expand "nonzero_set?")
                      (("2" (expand "*")
                        (("2" (case-replace "i!1(x!1)=0")
                          (("1" (assert) nil nil) ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (rewrite "isf_scal")
        (("2" (rewrite "isf_phi")
          (("2" (lemma "nonzero_measurable" ("g" "i!1"))
            (("2" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((nonzero_set? const-decl "set[T]" isf nil)
    (phi const-decl "nat" measure_space nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil)
    (setof type-eq-decl nil defined_types nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (set type-eq-decl nil sets nil) (nnreal type-eq-decl nil real_types nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (isf nonempty-type-eq-decl nil isf nil)
    (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (isf_integral_le formula-decl nil isf nil)
    (isf_abs application-judgement "isf" isf nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (int_abs_is_nonneg application-judgement "{j: nonneg_int | j >= i}"
     real_defs nil)
    (abs_nat formula-decl nil abs_lems reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (member const-decl "bool" sets nil)
    (isf_integral_scal formula-decl nil isf nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nonzero_measurable formula-decl nil isf nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (isf_integral_phi formula-decl nil isf nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (m formal-const-decl "measure_type" isf nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (isf_phi judgement-tcc nil isf nil) (isf_scal judgement-tcc nil isf nil))
   shostak)
  (isf_integral_bound-1 nil 3390835647
   ("" (skosimp)
    ((""
      (lemma "isf_integral_le"
       ("i1" "abs(i!1)" "i2" "nnx!1*phi(nonzero_set?(i!1))"))
      (("1" (split -1)
        (("1" (rewrite "isf_integral_scal" -1)
          (("1" (rewrite "isf_integral_phi" -1)
            (("1" (lemma "nonzero_measurable" ("g" "i!1"))
              (("1" (propax) nil nil)) nil))
            nil)
           ("2" (rewrite "isf_phi")
            (("2" (lemma "nonzero_measurable" ("g" "i!1"))
              (("2" (propax) nil nil)) nil))
            nil))
          nil)
         ("2" (skosimp)
          (("2" (inst - "x!1")
            (("2" (expand "abs" 1)
              (("2" (hide 2)
                (("2" (expand "phi")
                  (("2" (expand "member")
                    (("2" (expand "nonzero_set?")
                      (("2" (expand "*")
                        (("2" (case-replace "i!1(x!1)=0")
                          (("1" (assert)
                            (("1" (expand "abs") (("1" (assert) nil nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (rewrite "isf_scal")
        (("2" (rewrite "isf_phi")
          (("2" (lemma "nonzero_measurable" ("g" "i!1"))
            (("2" (propax) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((phi const-decl "nat" measure_space nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil) (set type-eq-decl nil sets nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (abs_nat formula-decl nil abs_lems reals)
    (member const-decl "bool" sets nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (mu_fin? const-decl "bool" measure_props nil))
   shostak))
 (isf_ae_0_TCC1 0
  (isf_ae_0_TCC1-1 nil 3390834716
   ("" (skosimp)
    (("" (lemma "isf_abs" ("i" "f!1"))
      (("1" (propax) nil nil) ("2" (propax) nil nil)) nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil) (isf_abs judgement-tcc nil isf nil))
   nil (isf_ae_0 subtype "real_fun_ops[isf.T].abs(isf.f)" "isf")))
 (isf_ae_0 0
  (isf_ae_0-1 nil 3390834722
   ("" (skosimp)
    (("" (expand "isf?")
      (("" (case-replace "simple?(f!1)")
        (("1" (expand "ae_0?")
          (("1" (expand "restrict")
            (("1" (expand "pointwise_ae?")
              (("1" (expand "ae?")
                (("1" (expand "fullset")
                  (("1" (expand "ae_in?")
                    (("1" (split)
                      (("1" (skosimp*)
                        (("1" (typepred "E!1")
                          (("1" (expand "negligible_set?")
                            (("1" (skosimp)
                              (("1" (case "subset?(nonzero_set?(f!1),X!1)")
                                (("1"
                                  (case-replace "mu_fin?(nonzero_set?(f!1))")
                                  (("1" (lemma "isf_bounded" ("i" "f!1"))
                                    (("1" (skosimp)
                                      (("1"
                                        (lemma
                                         "isf_integral_bound"
                                         ("i" "f!1" "nnx" "nnx!1"))
                                        (("1"
                                          (split -1)
                                          (("1"
                                            (lemma
                                             "m_monotone"
                                             ("a"
                                              "nonzero_set?(f!1)"
                                              "b"
                                              "X!1"))
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "x_le")
                                                (("1"
                                                  (expand "mu_fin?")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "mu")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand "null_set?")
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (expand
                                                               "mu_fin?")
                                                              (("1"
                                                                (expand "mu")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (typepred
                                                                     "m(nonzero_set?(f!1))`2")
                                                                    (("1"
                                                                      (replace
                                                                       -9)
                                                                      (("1"
                                                                        (case-replace
                                                                         "m(nonzero_set?(f!1))`2 = 0")
                                                                        (("1"
                                                                          (lemma
                                                                           "isf_integral_abs"
                                                                           ("i"
                                                                            "f!1"))
                                                                          (("1"
                                                                            (typepred
                                                                             "abs(isf_integral(f!1))")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "null_set?")
                                              (("2" (flatten) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (skosimp)
                                            (("2"
                                              (inst - "x!1")
                                              (("2"
                                                (hide-all-but (-1 1))
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (expand "isf?")
                                      (("2" (assert) nil nil)) nil))
                                    nil)
                                   ("2" (hide 2)
                                    (("2" (expand "null_set?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (lemma
                                           "m_monotone"
                                           ("a"
                                            "nonzero_set?(f!1)"
                                            "b"
                                            "X!1"))
                                          (("2"
                                            (assert)
                                            (("2"
                                              (expand "x_le")
                                              (("2"
                                                (expand "mu_fin?")
                                                (("2"
                                                  (expand "mu")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3"
                                    (lemma "nonzero_measurable" ("g" "f!1"))
                                    (("1" (propax) nil nil)
                                     ("2" (rewrite "simple_is_measurable") nil
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (hide 2)
                                  (("2" (expand "nonzero_set?")
                                    (("2" (expand "subset?")
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst - "x!1")
                                            (("2"
                                              (inst - "x!1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (flatten)
                        (("2" (copy -1)
                          (("2" (case-replace "f!1=lambda x: 0")
                            (("1" (assert) nil nil)
                             ("2"
                              (case "exists (px:posreal): forall (x:(nonzero_set?(f!1))): px<=abs(f!1(x))")
                              (("1" (skosimp)
                                (("1"
                                  (lemma "isf_integral_le"
                                   ("i1" "px!1*phi(nonzero_set?(f!1))" "i2"
                                    "abs(f!1)"))
                                  (("1" (split -1)
                                    (("1" (replace -5)
                                      (("1"
                                        (typepred "mu(nonzero_set?(f!1))")
                                        (("1"
                                          (rewrite "isf_integral_scal")
                                          (("1"
                                            (rewrite "isf_integral_phi")
                                            (("1"
                                              (expand "<=" -2)
                                              (("1"
                                                (split -2)
                                                (("1" (assert) nil nil)
                                                 ("2"
                                                  (rewrite "zero_times3" -1)
                                                  (("2"
                                                    (inst
                                                     +
                                                     "nonzero_set?(f!1)")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (expand
                                                         "nonzero_set?")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "negligible_set?")
                                                      (("2"
                                                        (inst
                                                         +
                                                         "nonzero_set?(f!1)")
                                                        (("2"
                                                          (expand "subset?")
                                                          (("2"
                                                            (expand "member")
                                                            (("2"
                                                              (split 1)
                                                              (("1"
                                                                (expand
                                                                 "null_set?")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (rewrite
                                                                     "nonzero_measurable")
                                                                    (("1"
                                                                      (expand
                                                                       "simple?")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (skosimp)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (rewrite "isf_phi") nil nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (lemma
                                             "nonzero_measurable"
                                             ("g" "f!1"))
                                            (("1"
                                              (expand "measurable_set?")
                                              (("1" (propax) nil nil))
                                              nil)
                                             ("2"
                                              (rewrite "simple_is_measurable")
                                              nil
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (skosimp)
                                      (("2"
                                        (inst - "x!1")
                                        (("1"
                                          (expand "*" 1)
                                          (("1"
                                            (expand "nonzero_set?")
                                            (("1"
                                              (expand "phi")
                                              (("1"
                                                (case-replace
                                                 "member(x!1, {x | f!1(x) /= 0})")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "abs" 1)
                                                    (("1" (propax) nil nil))
                                                    nil))
                                                  nil)
                                                 ("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "*")
                                          (("2"
                                            (expand "phi")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (rewrite "isf_scal")
                                    (("2" (rewrite "isf_phi") nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (hide 3)
                                (("2" (lemma "simple_def2" ("f" "f!1"))
                                  (("2" (assert)
                                    (("2" (skosimp)
                                      (("2"
                                        (typepred "P!1")
                                        (("2"
                                          (expand "finite_partition?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (expand "partition?")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (case
                                                   " FORALL (P: finite_set[set[T]], n: nat):
        card(P) = n & every(constant_over?(f!1), P)=>
         (EXISTS (px: posreal):
            FORALL (s: (P)):
              FORALL (x: (s)): f!1(x) /= 0 => px <= abs(f!1(x)))")
                                                  (("1"
                                                    (inst
                                                     -
                                                     "P!1"
                                                     "card[set[T]](P!1)")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (skosimp)
                                                        (("1"
                                                          (inst + "px!1")
                                                          (("1"
                                                            (skosimp)
                                                            (("1"
                                                              (lemma
                                                               "extensionality_postulate"
                                                               ("f"
                                                                "Union(P!1)"
                                                                "g"
                                                                "fullset[T]"))
                                                              (("1"
                                                                (replace
                                                                 -1
                                                                 -3
                                                                 rl)
                                                                (("1"
                                                                  (inst
                                                                   -3
                                                                   "x!1")
                                                                  (("1"
                                                                    (expand
                                                                     "fullset")
                                                                    (("1"
                                                                      (hide
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "Union")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "a!1")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "x!1")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (typepred
                                                                                   "x!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "nonzero_set?")
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide-all-but 1)
                                                    (("2"
                                                      (induct "n")
                                                      (("1"
                                                        (skosimp)
                                                        (("1"
                                                          (lemma
                                                           "card_is_0[set[T]]"
                                                           ("S" "P!2"))
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (replace -1 -2)
                                                              (("1"
                                                                (inst + "1")
                                                                (("1"
                                                                  (skosimp)
                                                                  (("1"
                                                                    (typepred
                                                                     "s!1")
                                                                    (("1"
                                                                      (replace
                                                                       -3)
                                                                      (("1"
                                                                        (expand
                                                                         "emptyset")
                                                                        (("1"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (skosimp*)
                                                        (("2"
                                                          (lemma
                                                           "nonempty_card[set[T]]"
                                                           ("S" "P!2"))
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "card_rest[set[T]]"
                                                               ("S" "P!2"))
                                                              (("2"
                                                                (expand
                                                                 "nonempty?")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (replace
                                                                     -3)
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "rest[set[T]](P!2)")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (split
                                                                             -2)
                                                                            (("1"
                                                                              (skosimp)
                                                                              (("1"
                                                                                (hide
                                                                                 -2
                                                                                 -3)
                                                                                (("1"
                                                                                  (name
                                                                                   "C"
                                                                                   "choose[set[T]](P!2)")
                                                                                  (("1"
                                                                                    (copy
                                                                                     -3)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "every"
                                                                                       -1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "C")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "constant_over?"
                                                                                           -1)
                                                                                          (("1"
                                                                                            (skosimp)
                                                                                            (("1"
                                                                                              (case
                                                                                               "y!1=0")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 +
                                                                                                 "px!1")
                                                                                                (("1"
                                                                                                  (skosimp)
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "s!1")
                                                                                                      (("1"
                                                                                                        (case-replace
                                                                                                         "s!1=C")
                                                                                                        (("1"
                                                                                                          (replace
                                                                                                           -3)
                                                                                                          (("1"
                                                                                                            (typepred
                                                                                                             "x!1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "x!1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (inst
                                                                                                                 -6
                                                                                                                 "s!1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -6
                                                                                                                   "x!1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "rest")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "remove")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "member")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (inst
                                                                                                           -5
                                                                                                           "s!1")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -5
                                                                                                             "x!1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "rest")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "remove")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "min(abs(y!1),px!1)")
                                                                                                (("1"
                                                                                                  (skosimp)
                                                                                                  (("1"
                                                                                                    (skosimp)
                                                                                                    (("1"
                                                                                                      (typepred
                                                                                                       "s!1")
                                                                                                      (("1"
                                                                                                        (typepred
                                                                                                         "x!1")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "s!1=C")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "x!1")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -4)
                                                                                                              (("1"
                                                                                                                (hide-all-but
                                                                                                                 4)
                                                                                                                (("1"
                                                                                                                  (grind)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (inst
                                                                                                             -5
                                                                                                             "s!1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -5
                                                                                                               "x!1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "rest")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "remove")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (hide-all-but
                                                                                                   (1
                                                                                                    2))
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "every")
                                                                              (("2"
                                                                                (skosimp)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "x!1")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "rest"
                                                                                     -1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "remove")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "member")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert) nil nil))
        nil))
      nil))
    nil)
   ((ae_0? const-decl "bool" measure_theory nil)
    (ae_in? const-decl "bool" measure_theory nil)
    (finite_partition? const-decl "bool" partitions nil)
    (finite_partition nonempty-type-eq-decl nil partitions nil)
    (nonempty? const-decl "bool" sets nil) (rest const-decl "set" sets nil)
    (remove const-decl "set" sets nil) (choose const-decl "(p)" sets nil)
    (card_rest formula-decl nil finite_sets nil)
    (nonempty_card formula-decl nil finite_sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil)
    (card_is_0 formula-decl nil finite_sets nil)
    (Union const-decl "set" sets nil)
    (extensionality_postulate formula-decl nil functions nil)
    (constant_over? const-decl "bool" measure_space nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (partition? const-decl "bool" partitions nil)
    (simple_def2 formula-decl nil measure_space nil)
    (abs_nat formula-decl nil abs_lems reals)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (phi const-decl "nat" measure_space nil)
    (subset? const-decl "bool" sets nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology metric_space)
    (m_monotone formula-decl nil measure_props nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (null_set? const-decl "bool" measure_theory nil)
    (mu const-decl "nnreal" measure_props nil)
    (member const-decl "bool" sets nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (set type-eq-decl nil sets nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (negligible_set? const-decl "bool" measure_theory nil)
    (negligible nonempty-type-eq-decl nil measure_theory nil)
    (fullset const-decl "set" sets nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (simple? const-decl "bool" measure_space nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (setofsets type-eq-decl nil sets nil))
   shostak))
 (isf_ae_eq 0
  (isf_ae_eq-2 "" 3789904015
   ("" (skosimp)
    (("" (lemma "isf_ae_0" ("f" "i1!1-i2!1"))
      (("" (lemma "isf_diff" ("i1" "i1!1" "i2" "i2!1"))
        (("" (assert)
          (("" (expand "isf?")
            (("" (flatten)
              (("" (assert)
                (("" (lemma "isf_integral_abs" ("i" "i1!1-i2!1"))
                  (("" (rewrite "isf_integral_diff")
                    (("" (hide -5)
                      (("" (split -4)
                        (("1" (replace -1)
                          (("1" (expand "<=" -2)
                            (("1" (split)
                              (("1" (assert) nil nil)
                               ("2" (rewrite "abs_eq_0") nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but (-4 1))
                          (("2" (expand "ae_0?")
                            (("2" (expand "ae_eq?")
                              (("2" (expand "pointwise_ae?")
                                (("2" (expand "-")
                                  (("2"
                                    (case-replace
                                     "(LAMBDA (x: T): (i1!1(x) = i2!1(x)))=(LAMBDA (x_1: T): (i1!1(x_1) - i2!1(x_1) = 0))")
                                    (("2" (hide -1 2)
                                      (("2"
                                        (apply-extensionality :hide? t)
                                        (("2"
                                          (case-replace
                                           "i1!1(x!1) = i2!1(x!1)")
                                          (("1" (assert) nil nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (- const-decl "[T -> real]" real_fun_ops reals)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil) (isf_ae_0 formula-decl nil isf nil)
    (isf_abs application-judgement "isf" isf nil)
    (isf_diff application-judgement "isf" isf nil)
    (isf_integral_abs formula-decl nil isf nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (ae_0? const-decl "bool" measure_theory nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (abs_eq_0 formula-decl nil abs_lems reals)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (isf_integral const-decl "real" isf nil) (<= const-decl "bool" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (isf_integral_diff formula-decl nil isf nil)
    (isf_diff judgement-tcc nil isf nil))
   shostak)
  (isf_ae_eq-1 nil 3391010972
   ("" (skosimp)
    (("" (lemma "isf_ae_0" ("f" "i1!1-i2!1"))
      (("" (lemma "isf_diff" ("i1" "i1!1" "i2" "i2!1"))
        (("" (assert)
          (("" (expand "isf?")
            (("" (flatten)
              (("" (assert)
                (("" (lemma "isf_integral_abs" ("i" "i1!1-i2!1"))
                  (("" (rewrite "isf_integral_diff")
                    (("" (hide -5)
                      (("" (split -4)
                        (("1" (replace -1)
                          (("1" (expand "<=" -2)
                            (("1" (split)
                              (("1" (assert) nil nil)
                               ("2" (rewrite "abs_eq_0") nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but (-4 1))
                          (("2" (expand "ae_0?")
                            (("2" (expand "ae_eq?")
                              (("2" (expand "restrict")
                                (("2" (expand "pointwise_ae?")
                                  (("2" (expand "-")
                                    (("2"
                                      (case-replace
                                       "(LAMBDA (x: T): (i1!1(x) = i2!1(x)))=(LAMBDA (x_1: T): (i1!1(x_1) - i2!1(x_1) = 0))")
                                      (("2"
                                        (hide -1 2)
                                        (("2"
                                          (apply-extensionality :hide? t)
                                          (("2"
                                            (case-replace
                                             "i1!1(x!1) = i2!1(x!1)")
                                            (("1" (assert) nil nil)
                                             ("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((ae_eq? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (ae_0? const-decl "bool" measure_theory nil)
    (abs_eq_0 formula-decl nil abs_lems reals))
   shostak))
 (isf_ae_0_le 0
  (isf_ae_0_le-2 "" 3789904015
   ("" (skosimp)
    (("" (lemma "isf_integral_pos" ("i" "plus(i!1)"))
      (("" (split)
        (("1" (lemma "isf_ae_eq" ("i1" "i!1" "i2" "plus(i!1)"))
          (("1" (split)
            (("1" (assert) nil nil)
             ("2" (hide -1 2)
              (("2" (expand "ae_nonneg?")
                (("2" (expand "ae_eq?")
                  (("2" (expand "plus")
                    (("2" (expand "max")
                      (("2" (expand "pointwise_ae?")
                        (("2"
                          (case-replace "(LAMBDA (x_1: T):
            (i!1(x_1) = IF i!1(x_1) < 0 THEN 0 ELSE i!1(x_1) ENDIF))=(LAMBDA (x_1: T): (0 <= i!1(x_1)))")
                          (("2" (apply-extensionality :hide? t)
                            (("2" (case-replace "i!1(x!1) < 0")
                              (("1" (assert) nil nil) ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
        nil))
      nil))
    nil)
   ((plus const-decl "[T -> nnreal]" real_fun_ops_aux reals)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil)
    (isf_integral_pos formula-decl nil isf nil)
    (isf_plus application-judgement "isf" isf nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (isf_ae_eq formula-decl nil isf nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (<= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (ae_nonneg? const-decl "bool" measure_theory nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   shostak)
  (isf_ae_0_le-1 nil 3391011676
   ("" (skosimp)
    (("" (lemma "isf_integral_pos" ("i" "plus(i!1)"))
      (("" (split)
        (("1" (lemma "isf_ae_eq" ("i1" "i!1" "i2" "plus(i!1)"))
          (("1" (split)
            (("1" (assert) nil nil)
             ("2" (hide -1 2)
              (("2" (expand "ae_nonneg?")
                (("2" (expand "ae_eq?")
                  (("2" (expand "restrict")
                    (("2" (expand "plus")
                      (("2" (expand "max")
                        (("2" (expand "pointwise_ae?")
                          (("2"
                            (case-replace "(LAMBDA (x_1: T):
            (i!1(x_1) = IF i!1(x_1) < 0 THEN 0 ELSE i!1(x_1) ENDIF))=(LAMBDA (x_1: T): (0 <= i!1(x_1)))")
                            (("2" (apply-extensionality :hide? t)
                              (("2" (case-replace "i!1(x!1) < 0")
                                (("1" (assert) nil nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
        nil))
      nil))
    nil)
   ((plus const-decl "[T -> nnreal]" real_fun_ops_aux reals)
    (ae_eq? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (ae_nonneg? const-decl "bool" measure_theory nil))
   shostak))
 (isf_ae_le 0
  (isf_ae_le-1 nil 3391012042
   ("" (skosimp)
    (("" (lemma "isf_ae_0_le" ("i" "i2!1-i1!1"))
      (("" (split)
        (("1" (rewrite "isf_integral_diff") (("1" (assert) nil nil)) nil)
         ("2" (hide 2)
          (("2" (expand "ae_nonneg?")
            (("2" (expand "ae_le?")
              (("2" (expand "-")
                (("2" (expand "pointwise_ae?")
                  (("2"
                    (case-replace
                     "(LAMBDA (x_1: T): (0 <= i2!1(x_1) - i1!1(x_1)))=(LAMBDA (x: T): (i1!1(x) <= i2!1(x)))")
                    (("2" (apply-extensionality :hide? t) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((- const-decl "[T -> real]" real_fun_ops reals)
    (isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil) (isf_ae_0_le formula-decl nil isf nil)
    (isf_diff application-judgement "isf" isf nil)
    (ae_le? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (ae_nonneg? const-decl "bool" measure_theory nil)
    (isf_integral_diff formula-decl nil isf nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   shostak))
 (isf_ae_ge_0 0
  (isf_ae_ge_0-2 "" 3789904016
   ("" (skosimp)
    (("" (lemma "isf_ae_0" ("f" "i!1"))
      (("" (assert)
        (("" (lemma "isf_ae_eq" ("i1" "i!1" "i2" "abs(i!1)"))
          (("" (assert)
            (("" (hide-all-but (-1 1))
              (("" (expand "abs")
                (("" (expand "ae_eq?")
                  (("" (expand "ae_nonneg?")
                    (("" (expand "pointwise_ae?")
                      ((""
                        (case-replace
                         "(LAMBDA (x_1: T): (i!1(x_1) = abs(i!1(x_1))))=(LAMBDA (x_1: T): (0 <= i!1(x_1)))")
                        (("" (apply-extensionality :hide? t)
                          (("" (hide-all-but 1) (("" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((isf nonempty-type-eq-decl nil isf nil) (isf? const-decl "bool" isf nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-type-decl nil isf nil) (isf_ae_0 formula-decl nil isf nil)
    (abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (isf_ae_eq formula-decl nil isf nil)
    (ae_eq? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (<= const-decl "bool" reals nil)
    (ae_nonneg? const-decl "bool" measure_theory nil)
    (isf_abs application-judgement "isf" isf nil))
   shostak)
  (isf_ae_ge_0-1 nil 3391012179
   ("" (skosimp)
    (("" (lemma "isf_ae_0" ("f" "i!1"))
      (("" (assert)
        (("" (lemma "isf_ae_eq" ("i1" "i!1" "i2" "abs(i!1)"))
          (("" (assert)
            (("" (hide-all-but (-1 1))
              (("" (expand "abs")
                (("" (expand "ae_eq?")
                  (("" (expand "ae_nonneg?")
                    (("" (expand "restrict")
                      (("" (expand "pointwise_ae?")
                        ((""
                          (case-replace
                           "(LAMBDA (x_1: T): (i!1(x_1) = abs(i!1(x_1))))=(LAMBDA (x_1: T): (0 <= i!1(x_1)))")
                          (("" (apply-extensionality :hide? t)
                            (("" (hide-all-but 1) (("" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((abs const-decl "[T -> nonneg_real]" real_fun_ops reals)
    (ae_eq? const-decl "bool" measure_theory nil)
    (pointwise_ae? const-decl "bool" measure_theory nil)
    (ae_nonneg? const-decl "bool" measure_theory nil))
   shostak))
 (isf_convergence_TCC1 0
  (isf_convergence_TCC1-1 nil 3395328912
   ("" (skosimp)
    (("" (skolem + ("n!1"))
      (("" (expand "pointwise_converges_upto?")
        (("" (flatten)
          (("" (typepred "u!1")
            (("" (expand "increasing_nn_simple?")
              (("" (flatten)
                (("" (hide -2)
                  (("" (inst - "n!1")
                    (("" (expand "nn_simple?")
                      (("" (flatten)
                        (("" (expand "isf?")
                          (("" (assert)
                            (("" (case "forall x: u!1(n!1)(x)<= i!1(x)")
                              (("1" (typepred "i!1")
                                (("1" (expand "isf?")
                                  (("1" (flatten)
                                    (("1"
                                      (lemma
                                       "m_monotone"
                                       ("a"
                                        "nonzero_set?(u!1(n!1))"
                                        "b"
                                        "nonzero_set?(i!1)"))
                                      (("1"
                                        (split -1)
                                        (("1"
                                          (expand "mu_fin?")
                                          (("1"
                                            (expand "x_le")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2 -2)
                                          (("2"
                                            (expand "nonzero_set?")
                                            (("2"
                                              (expand "subset?")
                                              (("2"
                                                (expand "member")
                                                (("2"
                                                  (skosimp)
                                                  (("2"
                                                    (inst - "x!1")
                                                    (("2"
                                                      (inst - "x!1")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2" (skosimp)
                                  (("2" (case "i!1(x!1)<u!1(n!1)(x!1)")
                                    (("1" (expand "pointwise_convergence?")
                                      (("1"
                                        (expand "pointwise_increasing?")
                                        (("1"
                                          (inst -4 "x!1")
                                          (("1"
                                            (inst -5 "x!1")
                                            (("1"
                                              (rewrite
                                               "metric_convergence_def"
                                               *)
                                              (("1"
                                                (expand "metric_converges_to")
                                                (("1"
                                                  (inst
                                                   -4
                                                   "u!1(n!1)(x!1)-i!1(x!1)")
                                                  (("1"
                                                    (skosimp)
                                                    (("1"
                                                      (expand "ball")
                                                      (("1"
                                                        (expand "member")
                                                        (("1"
                                                          (inst
                                                           -4
                                                           "max(n!1,n!2)")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (split -4)
                                                              (("1"
                                                                (expand
                                                                 "increasing?")
                                                                (("1"
                                                                  (inst
                                                                   -5
                                                                   "n!1"
                                                                   "max(n!1,n!2)")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nn_simple? const-decl "bool" measure_space nil)
    (isf? const-decl "bool" isf nil) (<= const-decl "bool" reals nil)
    (isf nonempty-type-eq-decl nil isf nil)
    (m formal-const-decl "measure_type" isf nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (measure? const-decl "bool" generalized_measure_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (nnreal type-eq-decl nil real_types nil)
    (nonzero_set? const-decl "set[T]" isf nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (set type-eq-decl nil sets nil)
    (m_monotone formula-decl nil measure_props nil)
    (subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (pointwise_convergence? const-decl "bool" pointwise_convergence nil)
    (metric_convergence_def formula-decl nil metric_space metric_space)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (u!1 skolem-const-decl "increasing_nn_simple[T, S]" isf nil)
    (n!1 skolem-const-decl "nat" isf nil) (x!1 skolem-const-decl "T" isf nil)
    (i!1 skolem-const-decl "isf" isf nil) (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (ball const-decl "set[T]" metric_space_def metric_space)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}" real_defs
     nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (increasing? const-decl "bool" real_fun_preds reals)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (metric_converges_to const-decl "bool" metric_space_def metric_space)
    (pointwise_increasing? const-decl "bool" pointwise_convergence nil)
    (< const-decl "bool" reals nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (T formal-type-decl nil isf nil)
    (setof type-eq-decl nil defined_types nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (S formal-const-decl "sigma_algebra" isf nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (sequence type-eq-decl nil sequences nil)
    (increasing_nn_simple? const-decl "bool" measure_space nil)
    (increasing_nn_simple nonempty-type-eq-decl nil measure_space nil)
    (pointwise_converges_upto? const-decl "bool" pointwise_convergence nil))
   nil (isf_convergence subtype "isf.u" "[nat -> isf]")))
 (isf_convergence 0
  (isf_convergence-2 "" 3758919342
   ("" (skosimp)
    (("" (name "G" "lambda (n:nat): i!1-u!1(n)")
      (("" (case "pointwise_convergence?(G,lambda x: 0)")
        (("1" (case "pointwise_decreasing?(G)")
          (("1" (case "every(isf?,G)")
            (("1" (expand "converges_upto?")
              (("1" (split)
                (("1" (case "convergence?((isf_integral o G), 0)")
                  (("1" (hide-all-but (-1 1))
                    (("1" (rewrite "metric_convergence_def" *)
                      (("1" (rewrite "metric_convergence_def" *)
                        (("1" (expand "metric_converges_to")
                          (("1" (skosimp)
                            (("1" (inst - "r!1")
                              (("1" (skosimp)
                                (("1" (inst + "n!1")
                                  (("1" (skosimp)
                                    (("1" (inst - "i!2")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "ball")
                                          (("1"
                                            (expand "o")
                                            (("1"
                                              (expand "G")
                                              (("1"
                                                (rewrite "isf_integral_diff")
                                                (("1"
                                                  (name-replace
                                                   "II"
                                                   "isf_integral(i!1)")
                                                  (("1"
                                                    (name-replace
                                                     "IU"
                                                     "isf_integral(u!1(i!2))")
                                                    (("1" (grind) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (case "forall (n:nat,x:T): G(n)(x)>=0")
                      (("1" (hide -5 -6)
                        (("1" (lemma "nonzero_measurable" ("g" "G(0)"))
                          (("1"
                            (lemma "simple_is_bounded_measurable"
                             ("x" "G(0)"))
                            (("1" (expand "bounded_measurable?")
                              (("1" (expand "bounded?")
                                (("1" (skolem - ("M"))
                                  (("1"
                                    (case "FORALL x: 0 <= G(0)(x) & G(0)(x) <= M")
                                    (("1" (hide -2)
                                      (("1"
                                        (case "decreasing?(isf_integral o G)")
                                        (("1"
                                          (name
                                           "IGS"
                                           "image[nat, real](isf_integral o G, fullset[nat])")
                                          (("1"
                                            (case
                                             "nonempty?[real](IGS) AND below_bounded[real](IGS)")
                                            (("1"
                                              (name "AA" "inf(IGS)")
                                              (("1"
                                                (typepred "inf(IGS)")
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (name
                                                     "F"
                                                     "nonzero_set?(G(0))")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (case "mu_fin?(F)")
                                                        (("1"
                                                          (case "0<=AA")
                                                          (("1"
                                                            (case
                                                             "forall (epsilon:posreal): AA<=epsilon*mu(F)")
                                                            (("1"
                                                              (case-replace
                                                               "AA=0")
                                                              (("1"
                                                                (hide -2 -3)
                                                                (("1"
                                                                  (rewrite
                                                                   "metric_convergence_def"
                                                                   +)
                                                                  (("1"
                                                                    (expand
                                                                     "metric_converges_to")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (expand
                                                                         "ball")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (expand
                                                                             "o"
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "greatest_lower_bound")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r!1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "lower_bound")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (case
                                                                                           "z!1<r!1")
                                                                                          (("1"
                                                                                            (hide
                                                                                             1)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "z!1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "IGS"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fullset"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "o"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "image"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (skolem
                                                                                                         -
                                                                                                         ("n!1"))
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "n!1")
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "decreasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -11
                                                                                                                 "n!1"
                                                                                                                 "i!2")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "o"
                                                                                                                     -11)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -6
                                                                                                                       "isf_integral(G(i!2))")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "abs"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "IGS")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "fullset")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "o ")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "image")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 +
                                                                                                                                 "i!2")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide-all-but
                                                                     1)
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case-replace
                                                                 "mu(F)=0")
                                                                (("1"
                                                                  (inst - "1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px"
                                                                    "AA"
                                                                    "py"
                                                                    "mu(F)*2"))
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "AA / (mu(F) * 2)")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skosimp)
                                                              (("2"
                                                                (case
                                                                 "AA>epsilon!1 * mu(F)")
                                                                (("1"
                                                                  (hide 1)
                                                                  (("1"
                                                                    (typepred
                                                                     "mu(F)")
                                                                    (("1"
                                                                      (expand
                                                                       ">="
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "<="
                                                                         -1)
                                                                        (("1"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "posreal_times_posreal_is_posreal"
                                                                             ("px"
                                                                              "epsilon!1"
                                                                              "py"
                                                                              "mu(F)"))
                                                                            (("1"
                                                                              (hide
                                                                               -4)
                                                                              (("1"
                                                                                (name
                                                                                 "EN"
                                                                                 "lambda (n:nat): {x| G(n)(x)>=epsilon!1}")
                                                                                (("1"
                                                                                  (case
                                                                                   "forall (n:nat): measurable_set?(EN(n))")
                                                                                  (("1"
                                                                                    (case
                                                                                     "decreasing?(EN)")
                                                                                    (("1"
                                                                                      (case
                                                                                       "forall (n:nat): subset?(EN(n),F)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "forall (n:nat): mu_fin?(EN(n))")
                                                                                        (("1"
                                                                                          (case
                                                                                           "convergence?(mu o EN, 0)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "forall (n:nat,x): G(n)(x) <= (epsilon!1*phi(F)+M*phi(EN(n)))(x)")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "isf_phi"
                                                                                               ("E"
                                                                                                "F"))
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "isf_scal"
                                                                                                 ("c"
                                                                                                  "epsilon!1"
                                                                                                  "i"
                                                                                                  "phi(F)"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "isf_integral_phi"
                                                                                                   ("E"
                                                                                                    "F"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "isf_integral_scal"
                                                                                                     ("c"
                                                                                                      "epsilon!1"
                                                                                                      "i"
                                                                                                      "phi(F)"))
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "metric_convergence_def"
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "metric_converges_to")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "M")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     ">="
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "<="
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "posreal_div_posreal_is_posreal"
                                                                                                                           ("px"
                                                                                                                            "AA-epsilon!1 * mu(F)"
                                                                                                                            "py"
                                                                                                                            "M"))
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -7
                                                                                                                             "(AA - epsilon!1 * mu(F)) / M")
                                                                                                                            (("1"
                                                                                                                              (skosimp)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "o"
                                                                                                                                 -7)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -6
                                                                                                                                   "n!1"
                                                                                                                                   "_")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -7
                                                                                                                                     "n!1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "mu(EN(n!1))")
                                                                                                                                        (("1"
                                                                                                                                          (case-replace
                                                                                                                                           "abs(-1 * mu(EN(n!1))) = mu(EN(n!1))")
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "div_mult_pos_lt2"
                                                                                                                                               -8)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "isf_phi"
                                                                                                                                                 ("E"
                                                                                                                                                  "EN(n!1)"))
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "isf_scal"
                                                                                                                                                   ("c"
                                                                                                                                                    "M"
                                                                                                                                                    "i"
                                                                                                                                                    "phi[T, S](EN(n!1))"))
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "isf_integral_scal"
                                                                                                                                                     ("c"
                                                                                                                                                      "M"
                                                                                                                                                      "i"
                                                                                                                                                      "phi[T, S](EN(n!1))"))
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "isf_integral_phi")
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "isf_integral_le"
                                                                                                                                                         ("i1"
                                                                                                                                                          "G(n!1)"
                                                                                                                                                          "i2"
                                                                                                                                                          "epsilon!1 * phi(F) + M * phi(EN(n!1))"))
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "isf_integral_add"
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -8)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "greatest_lower_bound")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "lower_bound")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -23
                                                                                                                                                                         "isf_integral(G(n!1))")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "IGS")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "fullset")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "o ")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "image")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!1")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (rewrite
                                                                                                                                                           "isf_add")
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("3"
                                                                                                                                                          (expand
                                                                                                                                                           "every")
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -31
                                                                                                                                                             "n!1")
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "nth")
                                                                                                                                                              (("3"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -12
                                                                                                                                                   "n!1")
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              1
                                                                                                                                              -9
                                                                                                                                              -12))
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replace
                                                                                                                           -1
                                                                                                                           *
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (case-replace
                                                                                                                             "isf_integral o G = lambda (n:nat):0")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "convergence?")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "0")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (apply-extensionality
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "o")
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-23
                                                                                                                                    1
                                                                                                                                    -27
                                                                                                                                    -25))
                                                                                                                                  (("2"
                                                                                                                                    (case-replace
                                                                                                                                     "G(x!1)=lambda x: 0")
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "isf_integral_zero")
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (apply-extensionality
                                                                                                                                         :hide?
                                                                                                                                         t)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "x!2")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!1"
                                                                                                                                             "x!2")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "pointwise_decreasing?")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "x!2")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "decreasing?")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "0"
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide-all-but
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (1
                                                                                                -22
                                                                                                -20
                                                                                                -18))
                                                                                              (("2"
                                                                                                (skosimp)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "*")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "+")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "F")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "nonzero_set?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "EN")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "phi")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("2"
                                                                                                                (case-replace
                                                                                                                 "G(0)(x!1) = 0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "pointwise_decreasing?")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "x!1")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "decreasing?")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -4
                                                                                                                           "0"
                                                                                                                           "n!1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (case-replace
                                                                                                                     "G(n!1)(x!1) >= epsilon!1")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "x!1")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "pointwise_decreasing?")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -5
                                                                                                                             "x!1")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "decreasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -5
                                                                                                                                 "0"
                                                                                                                                 "n!1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "m_decreasing_convergence"
                                                                                               ("E"
                                                                                                "EN"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "x_converges?")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "subset?(IIntersection(EN),EN(0))")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "measurable_set?(IIntersection(EN))")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "m_monotone"
                                                                                                             ("a"
                                                                                                              "IIntersection(EN)"
                                                                                                              "b"
                                                                                                              "EN(0)"))
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "x_le")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "mu_fin?")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "empty?(IIntersection(EN))")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "emptyset_is_empty?"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "m")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "measure?")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1
                                                                                                                                           -2
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "metric_convergence_def"
                                                                                                                                             +)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "o")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -6
                                                                                                                                                 -5)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "m_emptyset")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -2
                                                                                                                                                       -3)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (prop)
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "convergence_sequences.limit_def"
                                                                                                                                                             ("l"
                                                                                                                                                              "0"
                                                                                                                                                              "v"
                                                                                                                                                              "LAMBDA (i:nat): m(EN(i))`2"))
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -3
                                                                                                                                                               -1
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 (-1
                                                                                                                                                                  1))
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "mu")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "convergence")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "metric_converges_to")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "ball")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "r!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!1")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "i!2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (grind)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (propax)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst
                                                                                                                                                                 -10
                                                                                                                                                                 "i!2")
                                                                                                                                                                (("3"
                                                                                                                                                                  (expand
                                                                                                                                                                   "measurable_set?")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide-all-but
                                                                                                                                               1)
                                                                                                                                              (("2"
                                                                                                                                                (grind)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "empty?"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (skosimp)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "IIntersection"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "member")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "EN"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "pointwise_convergence?")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "o")
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -7)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "measurable_set?")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -29
                                                                                                                                                   "x!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "metric_convergence_def"
                                                                                                                                                     -29)
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "metric_converges_to")
                                                                                                                                                      (("1"
                                                                                                                                                        (inst
                                                                                                                                                         -29
                                                                                                                                                         "epsilon!1")
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "ball")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "member")
                                                                                                                                                            (("1"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("1"
                                                                                                                                                                (inst
                                                                                                                                                                 -29
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   (-1
                                                                                                                                                                    -29))
                                                                                                                                                                  (("1"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "n!1")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (grind)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide-all-but
                                                                                                                                                       1)
                                                                                                                                                      (("2"
                                                                                                                                                        (grind)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (rewrite
                                                                                                             "measurable_IIntersection")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            -5))
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "IIntersection")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "0")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skosimp)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "measurable_set?")
                                                                                              (("3"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (skosimp)
                                                                                            (("4"
                                                                                              (inst
                                                                                               -
                                                                                               "x1!1")
                                                                                              (("4"
                                                                                                (assert)
                                                                                                (("4"
                                                                                                  (inst
                                                                                                   -4
                                                                                                   "x1!1")
                                                                                                  (("4"
                                                                                                    (expand
                                                                                                     "measurable_set?")
                                                                                                    (("4"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "n!1")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "m_monotone"
                                                                                               ("a"
                                                                                                "EN(n!1)"
                                                                                                "b"
                                                                                                "F"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "x_le")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "mu_fin?")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (1
                                                                                            -19))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "EN")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "F")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nonzero_set?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "pointwise_decreasing?")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "subset?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "member")
                                                                                                      (("2"
                                                                                                        (skosimp)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "decreasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "0"
                                                                                                               "n!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "decreasing?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "EN")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "pointwise_decreasing?")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -20
                                                                                                       "x!2")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "decreasing?")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -20
                                                                                                           "x!1"
                                                                                                           "y!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "EN")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "simple_is_measurable")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "G(n!1)")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "measurable_ge"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "epsilon!1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "every")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -16
                                                                                               "n!1")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "isf?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (replace
                                                                               -1
                                                                               *
                                                                               rl)
                                                                              (("2"
                                                                                (case-replace
                                                                                 "isf_integral o G = lambda (n:nat): 0")
                                                                                (("1"
                                                                                  (expand
                                                                                   "convergence?")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "0")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality
                                                                                     :hide?
                                                                                     t)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "o")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "isf_integral_pos"
                                                                                         ("i"
                                                                                          "G(x!1)"))
                                                                                        (("2"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "isf_integral_le"
                                                                                             ("i1"
                                                                                              "G(x!1)"
                                                                                              "i2"
                                                                                              "M*phi(F)"))
                                                                                            (("1"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "isf_integral_scal")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "isf_integral_phi")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "isf_phi")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "*")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -13
                                                                                                     "x!2")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "pointwise_decreasing?")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -18
                                                                                                           "x!2")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "decreasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -18
                                                                                                               "0"
                                                                                                               "x!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "phi")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "F")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nonzero_set?")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (rewrite
                                                                                               "isf_scal")
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "isf_phi")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -14
                                                                                               "x!1"
                                                                                               "x!2")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (assert)
                                                              (("3"
                                                                (expand
                                                                 "measurable_set?")
                                                                (("3"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "greatest_lower_bound")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst - "0")
                                                                (("2"
                                                                  (expand
                                                                   "lower_bound")
                                                                  (("2"
                                                                    (split -4)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("3"
                                                                      (skosimp)
                                                                      (("3"
                                                                        (typepred
                                                                         "z!1")
                                                                        (("3"
                                                                          (expand
                                                                           "IGS")
                                                                          (("3"
                                                                            (expand
                                                                             "fullset")
                                                                            (("3"
                                                                              (expand
                                                                               "o ")
                                                                              (("3"
                                                                                (expand
                                                                                 "image")
                                                                                (("3"
                                                                                  (skosimp)
                                                                                  (("3"
                                                                                    (lemma
                                                                                     "isf_integral_pos"
                                                                                     ("i"
                                                                                      "G(x!1)"))
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (skosimp)
                                                                                        (("3"
                                                                                          (inst
                                                                                           -12
                                                                                           "x!1"
                                                                                           "x!2")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "every")
                                                          (("2"
                                                            (inst -10 "0")
                                                            (("2"
                                                              (expand "nth")
                                                              (("2"
                                                                (expand
                                                                 "isf?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (expand
                                                                     "F")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (propax) nil nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (expand "nonempty?")
                                                  (("1"
                                                    (expand "IGS")
                                                    (("1"
                                                      (expand "fullset")
                                                      (("1"
                                                        (expand "o ")
                                                        (("1"
                                                          (expand "image")
                                                          (("1"
                                                            (expand "empty?")
                                                            (("1"
                                                              (expand
                                                               "member")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "isf_integral(G(0))")
                                                                (("1"
                                                                  (inst + "0")
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "every")
                                                                  (("2"
                                                                    (inst
                                                                     -6
                                                                     "0")
                                                                    (("2"
                                                                      (expand
                                                                       "nth")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "below_bounded")
                                                  (("2"
                                                    (inst + "0")
                                                    (("2"
                                                      (expand "lower_bound")
                                                      (("2"
                                                        (skosimp)
                                                        (("2"
                                                          (typepred "z!1")
                                                          (("2"
                                                            (expand "IGS")
                                                            (("2"
                                                              (expand
                                                               "fullset")
                                                              (("2"
                                                                (expand "o ")
                                                                (("2"
                                                                  (expand
                                                                   "image")
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (lemma
                                                                       "isf_integral_pos"
                                                                       ("i"
                                                                        "G(x!1)"))
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (inst
                                                                             -6
                                                                             "x!1"
                                                                             "x!2")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide -6 2)
                                          (("2"
                                            (expand "pointwise_decreasing?")
                                            (("2"
                                              (expand "decreasing?")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "o")
                                                  (("2"
                                                    (lemma
                                                     "isf_integral_le"
                                                     ("i1"
                                                      "G(y!1)"
                                                      "i2"
                                                      "G(x!1)"))
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (skosimp)
                                                        (("2"
                                                          (inst -6 "x!2")
                                                          (("2"
                                                            (inst
                                                             -6
                                                             "x!1"
                                                             "y!1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide-all-but (-1 -3 1))
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst - "x!1")
                                          (("2"
                                            (inst - "0" "x!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "every")
                              (("2" (inst -3 "0")
                                (("2" (expand "nth")
                                  (("2" (expand "isf?")
                                    (("2" (flatten) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp)
                          (("2" (hide -4 -5)
                            (("2" (expand "pointwise_decreasing?")
                              (("2" (expand "pointwise_convergence?")
                                (("2" (inst - "x!1")
                                  (("2" (inst - "x!1")
                                    (("2"
                                      (lemma
                                       "converges_downto_ge"
                                       ("u"
                                        "lambda (n:nat): G(n)(x!1)"
                                        "x"
                                        "0"))
                                      (("2"
                                        (split -1)
                                        (("1"
                                          (inst - "n!1")
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (expand "converges_downto?")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (skosimp)
                    (("3" (expand "every")
                      (("3" (inst - "x1!1")
                        (("3" (expand "nth") (("3" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "pointwise_converges_upto?")
                  (("2" (flatten)
                    (("2" (hide-all-but (-6 1))
                      (("2" (expand "pointwise_increasing?")
                        (("2" (expand "o ")
                          (("2" (expand "increasing?")
                            (("2" (skosimp)
                              (("2"
                                (lemma "isf_integral_le"
                                 ("i1" "u!1(x!1)" "i2" "u!1(y!1)"))
                                (("2" (split -1)
                                  (("1" (propax) nil nil)
                                   ("2" (skosimp)
                                    (("2" (inst - "x!2")
                                      (("2"
                                        (inst - "x!1" "y!1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "every")
              (("2" (expand "nth")
                (("2" (skosimp)
                  (("2" (expand "G")
                    (("2" (rewrite "isf_diff")
                      (("2" (typepred "u!1(n!1)")
                        (("2" (typepred "u!1")
                          (("2" (expand "increasing_nn_simple?")
                            (("2" (flatten)
                              (("2" (typepred "i!1")
                                (("2" (inst - "n!1")
                                  (("2" (hide-all-but (-1 -2 1 -3 -8))
                                    (("2" (expand "isf?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (expand "nn_simple?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (lemma
                                                 "m_monotone"
                                                 ("a"
                                                  "nonzero_set?(u!1(n!1))"
                                                  "b"
                                                  "nonzero_set?(i!1)"))
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "x_le")
                                                    (("2"
                                                      (expand "mu_fin?")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -2 2)
                                                          (("2"
                                                            (expand "subset?")
                                                            (("2"
                                                              (skosimp)
                                                              (("2"
                                                                (expand
                                                                 "pointwise_converges_upto?")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_increasing?")
                                                                  (("2"
                                                                    (expand
                                                                     "pointwise_convergence?")
                                                                    (("2"
                                                                      (inst
                                                                       -5
                                                                       "x!1")
                                                                      (("2"
                                                                        (inst
                                                                         -6
                                                                         "x!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "converges_upto_le"
                                                                           ("u"
                                                                            "lambda (n:nat): u!1(n)(x!1)"
                                                                            "x"
                                                                            "i!1(x!1)"))
                                                                          (("2"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (expand
                                                                                 "nonzero_set?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "/=")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "n!1")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "converges_upto?")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "pointwise_converges_upto?")
            (("2" (flatten)
              (("2" (hide-all-but (-4 1))
                (("2" (expand "pointwise_increasing?")
                  (("2" (expand "pointwise_decreasing?")
                    (("2" (skosimp)
                      (("2" (inst - "x!1")
                        (("2" (expand "decreasing?")
                          (("2" (expand "increasing?")
                            (("2" (skosimp)
                              (("2" (inst - "x!2" "y!1")
                                (("2" (assert)
                                  (("2" (expand "G")
                                    (("2" (expand "-")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide -1 2)
          (("2" (expand "pointwise_converges_upto?")
            (("2" (flatten)
              (("2" (expand "pointwise_convergence?")
                (("2" (skosimp)
                  (("2" (inst - "x!1")
                    (("2" (expand "G")
                      (("2" (hide -2)
                        (("2" (rewrite "metric_convergence_def" *)
                          (("1" (rewrite "metric_convergence_def" *)
                            (("1" (expand "-")
                              (("1" (expand "metric_converges_to")
                                (("1" (skosimp)
                                  (("1" (inst - "r!1")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst + "n!1")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (inst - "i!2")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "ball")
                                                (("1" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide-all-but 1) (("2" (grind) nil nil))
                              nil))
                            nil)
                           ("2" (hide-all-but 1) (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (isf_convergence-1 nil 3395328933
   ("" (skosimp)
    (("" (name "G" "lambda (n:nat): i!1-u!1(n)")
      (("" (case "pointwise_convergence?(G,lambda x: 0)")
        (("1" (case "pointwise_decreasing?(G)")
          (("1" (case "every(isf?,G)")
            (("1" (expand "converges_upto?")
              (("1" (split)
                (("1" (case "convergence?((isf_integral o G), 0)")
                  (("1" (hide-all-but (-1 1))
                    (("1" (rewrite "metric_convergence_def" *)
                      (("1" (rewrite "metric_convergence_def" *)
                        (("1" (expand "metric_converges_to")
                          (("1" (skosimp)
                            (("1" (inst - "r!1")
                              (("1" (skosimp)
                                (("1" (inst + "n!1")
                                  (("1" (skosimp)
                                    (("1" (inst - "i!2")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (expand "ball")
                                          (("1"
                                            (expand "o")
                                            (("1"
                                              (expand "G")
                                              (("1"
                                                (rewrite "isf_integral_diff")
                                                (("1"
                                                  (name-replace
                                                   "II"
                                                   "isf_integral(i!1)")
                                                  (("1"
                                                    (name-replace
                                                     "IU"
                                                     "isf_integral(u!1(i!2))")
                                                    (("1" (grind) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (case "forall (n:nat,x:T): G(n)(x)>=0")
                      (("1" (hide -5 -6)
                        (("1" (lemma "nonzero_measurable" ("g" "G(0)"))
                          (("1"
                            (lemma "simple_is_bounded_measurable"
                             ("x" "G(0)"))
                            (("1" (expand "bounded_measurable?")
                              (("1" (expand "bounded?")
                                (("1" (skolem - ("M"))
                                  (("1"
                                    (case "FORALL x: 0 <= G(0)(x) & G(0)(x) <= M")
                                    (("1" (hide -2)
                                      (("1"
                                        (case "decreasing?(isf_integral o G)")
                                        (("1"
                                          (name
                                           "IGS"
                                           "image[nat, real](isf_integral o G, fullset[nat])")
                                          (("1"
                                            (case
                                             "nonempty?[real](IGS) AND below_bounded[real](IGS)")
                                            (("1"
                                              (name "AA" "inf(IGS)")
                                              (("1"
                                                (typepred "inf(IGS)")
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (name
                                                     "F"
                                                     "nonzero_set?(G(0))")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (case "mu_fin?(F)")
                                                        (("1"
                                                          (case "0<=AA")
                                                          (("1"
                                                            (case
                                                             "forall (epsilon:posreal): AA<=epsilon*mu(F)")
                                                            (("1"
                                                              (case-replace
                                                               "AA=0")
                                                              (("1"
                                                                (hide -2 -3)
                                                                (("1"
                                                                  (rewrite
                                                                   "metric_convergence_def"
                                                                   +)
                                                                  (("1"
                                                                    (expand
                                                                     "metric_converges_to")
                                                                    (("1"
                                                                      (skosimp)
                                                                      (("1"
                                                                        (expand
                                                                         "ball")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (expand
                                                                             "o"
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "greatest_lower_bound")
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "r!1")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (expand
                                                                                       "lower_bound")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (case
                                                                                           "z!1<r!1")
                                                                                          (("1"
                                                                                            (hide
                                                                                             1)
                                                                                            (("1"
                                                                                              (typepred
                                                                                               "z!1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "IGS"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "fullset"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "o"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "image"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (skolem
                                                                                                         -
                                                                                                         ("n!1"))
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           +
                                                                                                           "n!1")
                                                                                                          (("1"
                                                                                                            (skosimp)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "decreasing?")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -11
                                                                                                                 "n!1"
                                                                                                                 "i!2")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "o"
                                                                                                                     -11)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -6
                                                                                                                       "isf_integral(G(i!2))")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "abs"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "IGS")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "fullset")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "o ")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "image")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 +
                                                                                                                                 "i!2")
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (case-replace
                                                                 "mu(F)=0")
                                                                (("1"
                                                                  (inst - "1")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "posreal_div_posreal_is_posreal"
                                                                   ("px"
                                                                    "AA"
                                                                    "py"
                                                                    "mu(F)*2"))
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "AA / (mu(F) * 2)")
                                                                    (("1"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (skosimp)
                                                              (("2"
                                                                (case
                                                                 "AA>epsilon!1 * mu(F)")
                                                                (("1"
                                                                  (hide 1)
                                                                  (("1"
                                                                    (typepred
                                                                     "mu(F)")
                                                                    (("1"
                                                                      (expand
                                                                       ">="
                                                                       -1)
                                                                      (("1"
                                                                        (expand
                                                                         "<="
                                                                         -1)
                                                                        (("1"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "posreal_times_posreal_is_posreal"
                                                                             ("px"
                                                                              "epsilon!1"
                                                                              "py"
                                                                              "mu(F)"))
                                                                            (("1"
                                                                              (hide
                                                                               -4)
                                                                              (("1"
                                                                                (name
                                                                                 "EN"
                                                                                 "lambda (n:nat): {x| G(n)(x)>=epsilon!1}")
                                                                                (("1"
                                                                                  (case
                                                                                   "forall (n:nat): measurable_set?(EN(n))")
                                                                                  (("1"
                                                                                    (case
                                                                                     "decreasing?(EN)")
                                                                                    (("1"
                                                                                      (case
                                                                                       "forall (n:nat): subset?(EN(n),F)")
                                                                                      (("1"
                                                                                        (case
                                                                                         "forall (n:nat): mu_fin?(EN(n))")
                                                                                        (("1"
                                                                                          (case
                                                                                           "convergence?(mu o EN, 0)")
                                                                                          (("1"
                                                                                            (case
                                                                                             "forall (n:nat,x): G(n)(x) <= (epsilon!1*phi(F)+M*phi(EN(n)))(x)")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "isf_phi"
                                                                                               ("E"
                                                                                                "F"))
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "isf_scal"
                                                                                                 ("c"
                                                                                                  "epsilon!1"
                                                                                                  "i"
                                                                                                  "phi(F)"))
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "isf_integral_phi"
                                                                                                   ("E"
                                                                                                    "F"))
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "isf_integral_scal"
                                                                                                     ("c"
                                                                                                      "epsilon!1"
                                                                                                      "i"
                                                                                                      "phi(F)"))
                                                                                                    (("1"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "metric_convergence_def"
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "metric_converges_to")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "ball")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("1"
                                                                                                                  (typepred
                                                                                                                   "M")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     ">="
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "<="
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (split
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (lemma
                                                                                                                           "posreal_div_posreal_is_posreal"
                                                                                                                           ("px"
                                                                                                                            "AA-epsilon!1 * mu(F)"
                                                                                                                            "py"
                                                                                                                            "M"))
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -7
                                                                                                                             "(AA - epsilon!1 * mu(F)) / M")
                                                                                                                            (("1"
                                                                                                                              (skosimp)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "o"
                                                                                                                                 -7)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -6
                                                                                                                                   "n!1"
                                                                                                                                   "_")
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -7
                                                                                                                                     "n!1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      (("1"
                                                                                                                                        (typepred
                                                                                                                                         "mu(EN(n!1))")
                                                                                                                                        (("1"
                                                                                                                                          (case-replace
                                                                                                                                           "abs(-1 * mu(EN(n!1))) = mu(EN(n!1))")
                                                                                                                                          (("1"
                                                                                                                                            (hide
                                                                                                                                             -1)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "div_mult_pos_lt2"
                                                                                                                                               -8)
                                                                                                                                              (("1"
                                                                                                                                                (lemma
                                                                                                                                                 "isf_phi"
                                                                                                                                                 ("E"
                                                                                                                                                  "EN(n!1)"))
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "isf_scal"
                                                                                                                                                   ("c"
                                                                                                                                                    "M"
                                                                                                                                                    "i"
                                                                                                                                                    "phi[T, S](EN(n!1))"))
                                                                                                                                                  (("1"
                                                                                                                                                    (lemma
                                                                                                                                                     "isf_integral_scal"
                                                                                                                                                     ("c"
                                                                                                                                                      "M"
                                                                                                                                                      "i"
                                                                                                                                                      "phi[T, S](EN(n!1))"))
                                                                                                                                                    (("1"
                                                                                                                                                      (rewrite
                                                                                                                                                       "isf_integral_phi")
                                                                                                                                                      (("1"
                                                                                                                                                        (lemma
                                                                                                                                                         "isf_integral_le"
                                                                                                                                                         ("i1"
                                                                                                                                                          "G(n!1)"
                                                                                                                                                          "i2"
                                                                                                                                                          "epsilon!1 * phi(F) + M * phi(EN(n!1))"))
                                                                                                                                                        (("1"
                                                                                                                                                          (split
                                                                                                                                                           -1)
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "isf_integral_add"
                                                                                                                                                             -1)
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -2)
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -8)
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "greatest_lower_bound")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (flatten)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "lower_bound")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (inst
                                                                                                                                                                         -23
                                                                                                                                                                         "isf_integral(G(n!1))")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "IGS")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "fullset")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "o ")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "image")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!1")
                                                                                                                                                                                  nil
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (propax)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil)
                                                                                                                                                         ("2"
                                                                                                                                                          (rewrite
                                                                                                                                                           "isf_add")
                                                                                                                                                          nil
                                                                                                                                                          nil)
                                                                                                                                                         ("3"
                                                                                                                                                          (expand
                                                                                                                                                           "every")
                                                                                                                                                          (("3"
                                                                                                                                                            (inst
                                                                                                                                                             -31
                                                                                                                                                             "n!1")
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "nth")
                                                                                                                                                              (("3"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil)
                                                                                                                                                   ("2"
                                                                                                                                                    (propax)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil)
                                                                                                                                                 ("2"
                                                                                                                                                  (inst
                                                                                                                                                   -12
                                                                                                                                                   "n!1")
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (hide-all-but
                                                                                                                                             (-1
                                                                                                                                              1
                                                                                                                                              -9
                                                                                                                                              -12))
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "abs")
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (grind)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (replace
                                                                                                                           -1
                                                                                                                           *
                                                                                                                           rl)
                                                                                                                          (("2"
                                                                                                                            (case-replace
                                                                                                                             "isf_integral o G = lambda (n:nat):0")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "convergence?")
                                                                                                                              (("1"
                                                                                                                                (skosimp)
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   +
                                                                                                                                   "0")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (apply-extensionality
                                                                                                                               :hide?
                                                                                                                               t)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "o")
                                                                                                                                (("2"
                                                                                                                                  (hide-all-but
                                                                                                                                   (-23
                                                                                                                                    1
                                                                                                                                    -27
                                                                                                                                    -25))
                                                                                                                                  (("2"
                                                                                                                                    (case-replace
                                                                                                                                     "G(x!1)=lambda x: 0")
                                                                                                                                    (("1"
                                                                                                                                      (rewrite
                                                                                                                                       "isf_integral_zero")
                                                                                                                                      nil
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (hide
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (apply-extensionality
                                                                                                                                         :hide?
                                                                                                                                         t)
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "x!2")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "x!1"
                                                                                                                                             "x!2")
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "pointwise_decreasing?")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "x!2")
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "decreasing?")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "0"
                                                                                                                                                     "x!1")
                                                                                                                                                    (("2"
                                                                                                                                                      (flatten)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide-all-but
                                                                                               (1
                                                                                                -22
                                                                                                -20
                                                                                                -18))
                                                                                              (("2"
                                                                                                (skosimp)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "*")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "+")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "F")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "nonzero_set?")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "EN")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "phi")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "member")
                                                                                                              (("2"
                                                                                                                (case-replace
                                                                                                                 "G(0)(x!1) = 0")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "pointwise_decreasing?")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -4
                                                                                                                       "x!1")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "decreasing?")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -4
                                                                                                                           "0"
                                                                                                                           "n!1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (case-replace
                                                                                                                     "G(n!1)(x!1) >= epsilon!1")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "x!1")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "pointwise_decreasing?")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -5
                                                                                                                             "x!1")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "decreasing?")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -5
                                                                                                                                 "0"
                                                                                                                                 "n!1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "m_decreasing_convergence"
                                                                                               ("E"
                                                                                                "EN"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "x_converges?")
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "subset?(IIntersection(EN),EN(0))")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "measurable_set?(IIntersection(EN))")
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "m_monotone"
                                                                                                             ("a"
                                                                                                              "IIntersection(EN)"
                                                                                                              "b"
                                                                                                              "EN(0)"))
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "x_le")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "mu_fin?")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (case
                                                                                                                             "empty?(IIntersection(EN))")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "emptyset_is_empty?"
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (typepred
                                                                                                                                   "m")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "measure?")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1
                                                                                                                                           -2
                                                                                                                                           -3)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "metric_convergence_def"
                                                                                                                                             +)
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "o")
                                                                                                                                              (("1"
                                                                                                                                                (replace
                                                                                                                                                 -6
                                                                                                                                                 -5)
                                                                                                                                                (("1"
                                                                                                                                                  (lemma
                                                                                                                                                   "m_emptyset")
                                                                                                                                                  (("1"
                                                                                                                                                    (replace
                                                                                                                                                     -1)
                                                                                                                                                    (("1"
                                                                                                                                                      (hide
                                                                                                                                                       -2
                                                                                                                                                       -3)
                                                                                                                                                      (("1"
                                                                                                                                                        (assert)
                                                                                                                                                        (("1"
                                                                                                                                                          (prop)
                                                                                                                                                          (("1"
                                                                                                                                                            (lemma
                                                                                                                                                             "convergence_sequences.limit_def"
                                                                                                                                                             ("l"
                                                                                                                                                              "0"
                                                                                                                                                              "v"
                                                                                                                                                              "LAMBDA (i:nat): m(EN(i))`2"))
                                                                                                                                                            (("1"
                                                                                                                                                              (replace
                                                                                                                                                               -3
                                                                                                                                                               -1
                                                                                                                                                               rl)
                                                                                                                                                              (("1"
                                                                                                                                                                (hide-all-but
                                                                                                                                                                 (-1
                                                                                                                                                                  1))
                                                                                                                                                                (("1"
                                                                                                                                                                  (expand
                                                                                                                                                                   "mu")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "convergence")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "metric_converges_to")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (expand
                                                                                                                                                                           "ball")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (skosimp)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (inst
                                                                                                                                                                               -
                                                                                                                                                                               "r!1")
                                                                                                                                                                              (("1"
                                                                                                                                                                                (skosimp)
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   +
                                                                                                                                                                                   "n!1")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (skosimp)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (inst
                                                                                                                                                                                       -
                                                                                                                                                                                       "i!2")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (grind)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (propax)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("3"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("3"
                                                                                                                                                                (inst
                                                                                                                                                                 -10
                                                                                                                                                                 "i!2")
                                                                                                                                                                (("3"
                                                                                                                                                                  (expand
                                                                                                                                                                   "measurable_set?")
                                                                                                                                                                  (("3"
                                                                                                                                                                    (propax)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (expand
                                                                                                                               "empty?"
                                                                                                                               1)
                                                                                                                              (("2"
                                                                                                                                (skosimp)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "IIntersection"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "member")
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "EN"
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "pointwise_convergence?")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "o")
                                                                                                                                            (("2"
                                                                                                                                              (replace
                                                                                                                                               -7)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "measurable_set?")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -29
                                                                                                                                                   "x!1")
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "metric_convergence_def"
                                                                                                                                                     -29)
                                                                                                                                                    (("2"
                                                                                                                                                      (expand
                                                                                                                                                       "metric_converges_to")
                                                                                                                                                      (("2"
                                                                                                                                                        (inst
                                                                                                                                                         -29
                                                                                                                                                         "epsilon!1")
                                                                                                                                                        (("2"
                                                                                                                                                          (expand
                                                                                                                                                           "ball")
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "member")
                                                                                                                                                            (("2"
                                                                                                                                                              (skosimp)
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -29
                                                                                                                                                                 "n!1")
                                                                                                                                                                (("2"
                                                                                                                                                                  (hide-all-but
                                                                                                                                                                   (-1
                                                                                                                                                                    -29))
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -
                                                                                                                                                                     "n!1")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (grind)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (rewrite
                                                                                                             "measurable_IIntersection")
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           (1
                                                                                                            -5))
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "subset?")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "IIntersection")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "member")
                                                                                                                (("2"
                                                                                                                  (skosimp)
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "0")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (skosimp)
                                                                                            (("3"
                                                                                              (expand
                                                                                               "measurable_set?")
                                                                                              (("3"
                                                                                                (propax)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("4"
                                                                                            (skosimp)
                                                                                            (("4"
                                                                                              (inst
                                                                                               -
                                                                                               "x1!1")
                                                                                              (("4"
                                                                                                (assert)
                                                                                                (("4"
                                                                                                  (inst
                                                                                                   -4
                                                                                                   "x1!1")
                                                                                                  (("4"
                                                                                                    (expand
                                                                                                     "measurable_set?")
                                                                                                    (("4"
                                                                                                      (propax)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "n!1")
                                                                                            (("2"
                                                                                              (lemma
                                                                                               "m_monotone"
                                                                                               ("a"
                                                                                                "EN(n!1)"
                                                                                                "b"
                                                                                                "F"))
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "x_le")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "mu_fin?")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp)
                                                                                        (("2"
                                                                                          (hide-all-but
                                                                                           (1
                                                                                            -19))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "EN")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "F")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nonzero_set?")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "pointwise_decreasing?")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "subset?")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "member")
                                                                                                      (("2"
                                                                                                        (skosimp)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "decreasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "0"
                                                                                                               "n!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "decreasing?")
                                                                                        (("2"
                                                                                          (skosimp)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "subset?")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "EN")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "member")
                                                                                                (("2"
                                                                                                  (skosimp)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "pointwise_decreasing?")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -20
                                                                                                       "x!2")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "decreasing?")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -20
                                                                                                           "x!1"
                                                                                                           "y!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (skosimp)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "EN")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "simple_is_measurable")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "G(n!1)")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "measurable_ge"
                                                                                             -1)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "epsilon!1")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "measurable_set?")
                                                                                                (("1"
                                                                                                  (propax)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "every")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -16
                                                                                               "n!1")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "nth")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "isf?")
                                                                                                  (("2"
                                                                                                    (flatten)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (replace
                                                                               -1
                                                                               *
                                                                               rl)
                                                                              (("2"
                                                                                (case-replace
                                                                                 "isf_integral o G = lambda (n:nat): 0")
                                                                                (("1"
                                                                                  (expand
                                                                                   "convergence?")
                                                                                  (("1"
                                                                                    (skosimp)
                                                                                    (("1"
                                                                                      (inst
                                                                                       +
                                                                                       "0")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality
                                                                                     :hide?
                                                                                     t)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "o")
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "isf_integral_pos"
                                                                                         ("i"
                                                                                          "G(x!1)"))
                                                                                        (("2"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (lemma
                                                                                             "isf_integral_le"
                                                                                             ("i1"
                                                                                              "G(x!1)"
                                                                                              "i2"
                                                                                              "M*phi(F)"))
                                                                                            (("1"
                                                                                              (split
                                                                                               -1)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "isf_integral_scal")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "isf_integral_phi")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (rewrite
                                                                                                   "isf_phi")
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "*")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -13
                                                                                                     "x!2")
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "pointwise_decreasing?")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -18
                                                                                                           "x!2")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "decreasing?")
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -18
                                                                                                               "0"
                                                                                                               "x!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "phi")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "member")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "F")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "nonzero_set?")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (rewrite
                                                                                               "isf_scal")
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "isf_phi")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skosimp)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -14
                                                                                               "x!1"
                                                                                               "x!2")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("3"
                                                              (assert)
                                                              (("3"
                                                                (expand
                                                                 "measurable_set?")
                                                                (("3"
                                                                  (propax)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand
                                                             "greatest_lower_bound")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst - "0")
                                                                (("2"
                                                                  (expand
                                                                   "lower_bound")
                                                                  (("2"
                                                                    (split -4)
                                                                    (("1"
                                                                      (propax)
                                                                      nil
                                                                      nil)
                                                                     ("2"
                                                                      (assert)
                                                                      nil
                                                                      nil)
                                                                     ("3"
                                                                      (skosimp)
                                                                      (("3"
                                                                        (typepred
                                                                         "z!1")
                                                                        (("3"
                                                                          (expand
                                                                           "IGS")
                                                                          (("3"
                                                                            (expand
                                                                             "fullset")
                                                                            (("3"
                                                                              (expand
                                                                               "o ")
                                                                              (("3"
                                                                                (expand
                                                                                 "image")
                                                                                (("3"
                                                                                  (skosimp)
                                                                                  (("3"
                                                                                    (lemma
                                                                                     "isf_integral_pos"
                                                                                     ("i"
                                                                                      "G(x!1)"))
                                                                                    (("3"
                                                                                      (assert)
                                                                                      (("3"
                                                                                        (skosimp)
                                                                                        (("3"
                                                                                          (inst
                                                                                           -12
                                                                                           "x!1"
                                                                                           "x!2")
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "every")
                                                          (("2"
                                                            (inst -10 "0")
                                                            (("2"
                                                              (expand "nth")
                                                              (("2"
                                                                (expand
                                                                 "isf?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (expand
                                                                     "F")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("3"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (propax) nil nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (split)
                                                (("1"
                                                  (expand "nonempty?")
                                                  (("1"
                                                    (expand "IGS")
                                                    (("1"
                                                      (expand "fullset")
                                                      (("1"
                                                        (expand "o ")
                                                        (("1"
                                                          (expand "image")
                                                          (("1"
                                                            (expand "empty?")
                                                            (("1"
                                                              (expand
                                                               "member")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "isf_integral(G(0))")
                                                                (("1"
                                                                  (inst + "0")
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "every")
                                                                  (("2"
                                                                    (inst
                                                                     -6
                                                                     "0")
                                                                    (("2"
                                                                      (expand
                                                                       "nth")
                                                                      (("2"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "below_bounded")
                                                  (("2"
                                                    (inst + "0")
                                                    (("2"
                                                      (expand "lower_bound")
                                                      (("2"
                                                        (skosimp)
                                                        (("2"
                                                          (typepred "z!1")
                                                          (("2"
                                                            (expand "IGS")
                                                            (("2"
                                                              (expand
                                                               "fullset")
                                                              (("2"
                                                                (expand "o ")
                                                                (("2"
                                                                  (expand
                                                                   "image")
                                                                  (("2"
                                                                    (skosimp)
                                                                    (("2"
                                                                      (lemma
                                                                       "isf_integral_pos"
                                                                       ("i"
                                                                        "G(x!1)"))
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (assert)
                                                                          nil
                                                                          nil)
                                                                         ("2"
                                                                          (skosimp)
                                                                          (("2"
                                                                            (inst
                                                                             -6
                                                                             "x!1"
                                                                             "x!2")
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide -6 2)
                                          (("2"
                                            (expand "pointwise_decreasing?")
                                            (("2"
                                              (expand "decreasing?")
                                              (("2"
                                                (skosimp)
                                                (("2"
                                                  (expand "o")
                                                  (("2"
                                                    (lemma
                                                     "isf_integral_le"
                                                     ("i1"
                                                      "G(y!1)"
                                                      "i2"
                                                      "G(x!1)"))
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (skosimp)
                                                        (("2"
                                                          (inst -6 "x!2")
                                                          (("2"
                                                            (inst
                                                             -6
                                                             "x!1"
                                                             "y!1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide-all-but (-1 -3 1))
                                      (("2"
                                        (skosimp)
                                        (("2"
                                          (inst - "x!1")
                                          (("2"
                                            (inst - "0" "x!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "every")
                              (("2" (inst -3 "0")
                                (("2" (expand "nth")
                                  (("2" (expand "isf?")
                                    (("2" (flatten) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (skosimp)
                          (("2" (hide -4 -5)
                            (("2" (expand "pointwise_decreasing?")
                              (("2" (expand "pointwise_convergence?")
                                (("2" (inst - "x!1")
                                  (("2" (inst - "x!1")
                                    (("2"
                                      (lemma
                                       "converges_downto_ge"
                                       ("u"
                                        "lambda (n:nat): G(n)(x!1)"
                                        "x"
                                        "0"))
                                      (("2"
                                        (split -1)
                                        (("1"
                                          (inst - "n!1")
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (expand "converges_downto?")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (skosimp)
                    (("3" (expand "every")
                      (("3" (inst - "x1!1")
                        (("3" (expand "nth") (("3" (propax) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (expand "pointwise_converges_upto?")
                  (("2" (flatten)
                    (("2" (hide-all-but (-6 1))
                      (("2" (expand "pointwise_increasing?")
                        (("2" (expand "o ")
                          (("2" (expand "increasing?")
                            (("2" (skosimp)
                              (("2"
                                (lemma "isf_integral_le"
                                 ("i1" "u!1(x!1)" "i2" "u!1(y!1)"))
                                (("2" (split -1)
                                  (("1" (propax) nil nil)
                                   ("2" (skosimp)
                                    (("2" (inst - "x!2")
                                      (("2"
                                        (inst - "x!1" "y!1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "every")
              (("2" (expand "nth")
                (("2" (skosimp)
                  (("2" (expand "G")
                    (("2" (rewrite "isf_diff")
                      (("2" (typepred "u!1(n!1)")
                        (("2" (typepred "u!1")
                          (("2" (expand "increasing_nn_simple?")
                            (("2" (flatten)
                              (("2" (typepred "i!1")
                                (("2" (inst - "n!1")
                                  (("2" (hide-all-but (-1 -2 1 -3 -8))
                                    (("2" (expand "isf?")
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (expand "nn_simple?")
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (lemma
                                                 "m_monotone"
                                                 ("a"
                                                  "nonzero_set?(u!1(n!1))"
                                                  "b"
                                                  "nonzero_set?(i!1)"))
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "x_le")
                                                    (("2"
                                                      (expand "mu_fin?")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -2 2)
                                                          (("2"
                                                            (expand "subset?")
                                                            (("2"
                                                              (skosimp)
                                                              (("2"
                                                                (expand
                                                                 "pointwise_converges_upto?")
                                                                (("2"
                                                                  (expand
                                                                   "pointwise_increasing?")
                                                                  (("2"
                                                                    (expand
                                                                     "pointwise_convergence?")
                                                                    (("2"
                                                                      (inst
                                                                       -5
                                                                       "x!1")
                                                                      (("2"
                                                                        (inst
                                                                         -6
                                                                         "x!1")
                                                                        (("2"
                                                                          (lemma
                                                                           "converges_upto_le"
                                                                           ("u"
                                                                            "lambda (n:nat): u!1(n)(x!1)"
                                                                            "x"
                                                                            "i!1(x!1)"))
                                                                          (("2"
                                                                            (split
                                                                             -1)
                                                                            (("1"
                                                                              (expand
                                                                               "member")
                                                                              (("1"
                                                                                (expand
                                                                                 "nonzero_set?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "/=")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "n!1")
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (expand
                                                                                 "converges_upto?")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "pointwise_converges_upto?")
            (("2" (flatten)
              (("2" (hide-all-but (-4 1))
                (("2" (expand "pointwise_increasing?")
                  (("2" (expand "pointwise_decreasing?")
                    (("2" (skosimp)
                      (("2" (inst - "x!1")
                        (("2" (expand "decreasing?")
                          (("2" (expand "increasing?")
                            (("2" (skosimp)
                              (("2" (inst - "x!2" "y!1")
                                (("2" (assert)
                                  (("2" (expand "G")
                                    (("2" (expand "-")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide -1 2)
          (("2" (expand "pointwise_converges_upto?")
            (("2" (flatten)
              (("2" (expand "pointwise_convergence?")
                (("2" (skosimp)
                  (("2" (inst - "x!1")
                    (("2" (expand "G")
                      (("2" (hide -2)
                        (("2" (rewrite "metric_convergence_def" *)
                          (("2" (rewrite "metric_convergence_def" *)
                            (("2" (expand "-")
                              (("2" (expand "metric_converges_to")
                                (("2" (skosimp)
                                  (("2" (inst - "r!1")
                                    (("2" (skosimp)
                                      (("2"
                                        (inst + "n!1")
                                        (("2"
                                          (skosimp)
                                          (("2"
                                            (inst - "i!2")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "ball")
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((pointwise_convergence? const-decl "bool" pointwise_convergence nil)
    (converges_downto? const-decl "bool" convergence_aux metric_space)
    (converges_downto_ge formula-decl nil convergence_aux metric_space)
    (simple_is_bounded_measurable judgement-tcc nil measure_space nil)
    (simple? const-decl "bool" measure_space nil)
    (simple nonempty-type-eq-decl nil measure_space nil)
    (bounded? const-decl "bool" sup_norm nil)
    (decreasing? const-decl "bool" real_fun_preds reals)
    (nonempty? const-decl "bool" sets nil)
    (below_bounded const-decl "bool" bounded_reals reals)
    (measurable_set? const-decl "bool" measure_space_def nil)
    (measurable_set nonempty-type-eq-decl nil measure_space_def nil)
    (extended_nnreal nonempty-type-eq-decl nil extended_nnreal
     extended_nnreal)
    (measure? const-decl "bool" generalized_measure_def nil)
    (measure_type nonempty-type-eq-decl nil generalized_measure_def nil)
    (mu_fin? const-decl "bool" measure_props nil)
    (mu const-decl "nnreal" measure_props nil)
    (lower_bound const-decl "bool" bound_defs reals)
    (measurable_ge formula-decl nil measure_space_def nil)
    (subset? const-decl "bool" sets nil)
    (decreasing? const-decl "bool" fun_preds_partial structures)
    (measurable_IIntersection judgement-tcc nil measure_space_def nil)
    (m_monotone formula-decl nil measure_props nil)
    (x_le const-decl "bool" extended_nnreal extended_nnreal)
    (empty? const-decl "bool" sets nil)
    (limit_def formula-decl nil convergence_sequences analysis)
    (convergent? const-decl "bool" convergence_sequences analysis)
    (convergence const-decl "bool" convergence_sequences analysis)
    (m_emptyset formula-decl nil measure_props nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (x_converges? const-decl "bool" extended_nnreal extended_nnreal)
    (m_decreasing_convergence formula-decl nil measure_props nil)
    (phi const-decl "nat" measure_space nil)
    (nth const-decl "T" sequences nil)
    (inf const-decl "{x | greatest_lower_bound(<=)(x, Sl)}" bounded_reals
         reals)
    (greatest_lower_bound const-decl "bool" bound_defs reals)
    (inf_set type-eq-decl nil bounded_reals reals)
    (fullset const-decl "set" sets nil) (set type-eq-decl nil sets nil)
    (bounded_measurable? const-decl "bool" measure_space nil)
    (metric? const-decl "bool" metric_def metric_space)
    (member const-decl "bool" sets nil)
    (ball const-decl "set[T]" metric_space_def metric_space)
    (metric_converges_to const-decl "bool" metric_space_def metric_space)
    (metric_zero? const-decl "bool" metric_def metric_space)
    (metric_symmetric? const-decl "bool" metric_def metric_space)
    (metric_triangle? const-decl "bool" metric_def metric_space)
    (metric_convergence_def formula-decl nil metric_space metric_space)
    (convergence? const-decl "bool" topological_convergence topology)
    (metric_induced_topology const-decl "setofsets[T]" metric_space_def
     metric_space)
    (metric_induced_topology_is_second_countable name-judgement
     "second_countable" real_topology metric_space)
    (pointwise_increasing? const-decl "bool" pointwise_convergence nil)
    (increasing? const-decl "bool" real_fun_preds reals)
    (pointwise_converges_upto? const-decl "bool" pointwise_convergence nil)
    (converges_upto? const-decl "bool" convergence_aux metric_space)
    (converges_upto_le formula-decl nil convergence_aux metric_space)
    (nn_simple? const-decl "bool" measure_space nil)
    (pointwise_decreasing? const-decl "bool" pointwise_convergence nil)
    (setofsets type-eq-decl nil sets nil)
    (sigma_algebra? const-decl "bool" subset_algebra_def nil)
    (sigma_algebra nonempty-type-eq-decl nil subset_algebra_def nil)
    (measurable_function? const-decl "bool" measure_space_def nil)
    (measurable_function nonempty-type-eq-decl nil measure_space_def nil)
    (sequence type-eq-decl nil sequences nil)
    (increasing_nn_simple? const-decl "bool" measure_space nil)
    (increasing_nn_simple nonempty-type-eq-decl nil measure_space nil))
   shostak)))

