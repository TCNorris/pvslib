;Wednesday, November 26, 2014 1:51 PM (to Jonathan Ostroff <jonathan@yorku.ca>)

(in-package :pvs)

(defun maybe-instantiate-from-decl-formals* (reses ex)
  (when reses
    (let* ((dfmls (decl-formals (current-declaration)))
	   (fparams (when dfmls (free-params (car reses))))
	   (adecl (let ((dfml (find-if #'decl-formal-type? fparams)))
		    (when dfml (associated-decl dfml)))))
      (or (when (and fparams (length= fparams dfmls)
		     (every #'(lambda (fp)
				(and (decl-formal? fp)
				     (member fp dfmls :test #'same-id)))
			    fparams))
	    (assert (every #'(lambda (fp) (eq (associated-decl fp) adecl))
			   (cdr fparams)))
	    (let* ((mi (mk-modname (id (current-theory)) nil nil nil (mk-dactuals dfmls)
				   (current-declaration)))
		   (nex (subst-mod-params ex mi (current-theory) adecl)))
	      (when (fully-instantiated? nex)
		(setf (resolutions ex) (resolutions nex)
		      (actuals ex) (actuals nex)
		      (dactuals ex) (dactuals nex)
		      (free-parameters ex) 'unbound)
		(assert (fully-instantiated? ex))
		ex)))
	  (maybe-instantiate-from-decl-formals* (cdr reses) ex)))))
