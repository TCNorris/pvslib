(in-package :pvs)

(defmethod typecheck* ((type type-name) expected kind arguments)
  (declare (ignore expected kind))
  (unless (and (resolution type)
	       (null arguments))
    (call-next-method type nil 'type arguments)
    (set-type type nil)
    (let ((tval (type (resolution type))))
      (when (and (formals (declaration (resolution type)))
		 (null arguments))
	(type-error type "Type name must have arguments"))
      (assert tval)
      ;; (when (mod-id type)
      ;; 	(cond ((null (print-type tval))
      ;; 	       (setq tval (copy tval 'print-type (copy type))))
      ;; 	      ((and (type-name? (print-type tval))
      ;; 		    (not (mod-id (print-type tval))))
      ;; 	       (setq tval (copy tval
      ;; 			    'print-type (copy (print-type tval)
      ;; 					  'mod-id (mod-id type)))))))
      ;; (if (eq tval 'type)
      ;; 	  type
      ;; 	  tval)
      ))
  (type (resolution type)))
