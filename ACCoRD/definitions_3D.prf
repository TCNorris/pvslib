(definitions_3D
 (nzv2 0
  (nzv2-1 nil 3431293552 ("" (skosimp :preds? t) nil nil)
   ((Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil (nzv2 subtype "vect_3D_2D.vect2(definitions_3D.nzv)" "Nz_vect2")))
 (break_symmetry_neg 0
  (break_symmetry_neg-1 nil 3451920049
   ("" (grind) (("" (decompose-equality 1) nil nil)) nil)
   ((minus_odd_is_odd application-judgement "odd_int" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_3D vectors)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_3D vectors)
    (Nz_vect3 type-eq-decl nil vectors_3D vectors)
    (break_symmetry const-decl "Sign" definitions_3D nil)
    (- const-decl "Vector" vectors_3D vectors))
   shostak))
 (vs_only_symm 0
  (vs_only_symm-1 nil 3466174206
   ("" (skeep) (("" (expand "vs_only?") (("" (ground) nil nil)) nil)) nil)
   ((vs_only? const-decl "bool" definitions_3D nil)) shostak)))

