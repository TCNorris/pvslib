(bands_3D
 (trk_bands_3D_TCC1 0
  (trk_bands_3D_TCC1-1 nil 3477656172 ("" (assuming-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil))
   nil
   (trk_bands_3D assuming
    "bands_2D[bands_3D.D, bands_3D.B, bands_3D.T, bands_3D.gsmin, bands_3D.gsmax]"
    "gs_min_lt_max: ASSUMPTION reals.<(bands_2D.gsmin, bands_2D.gsmax)")))
 (trk_bands_3D_TCC2 0
  (trk_bands_3D_TCC2-1 nil 3477656172 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (/= const-decl "boolean" notequal nil))
   nil
   (trk_bands_3D subtype "bands_3D.TT"
    "{AB: real_types.posreal | reals.>(AB, bands_3D.BB)}")))
 (trk_bands_3D_TCC3 0
  (trk_bands_3D_TCC3-1 nil 3477656172 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (>= const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Theta_H const-decl "real" vertical nil)
    (/= const-decl "boolean" notequal nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (trk_bands_3D assuming
    "bands_2D[bands_3D.D, bands_3D.BB, bands_3D.TT, bands_3D.gsmin, bands_3D.gsmax]"
    "gs_min_lt_max: ASSUMPTION reals.<(bands_2D.gsmin, bands_2D.gsmax)")))
 (trk_bands_3D_TCC4 0
  (trk_bands_3D_TCC4-1 nil 3477656172 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (>= const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Theta_H const-decl "real" vertical nil)
    (/= const-decl "boolean" notequal nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (trk_bands_3D subtype "fseqs[real].empty_seq" "fseq[real]")))
 (trk_bands_3D_TCC5 0
  (trk_bands_3D_TCC5-1 nil 3477656172 ("" (assuming-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (<= const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (>= const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Theta_H const-decl "real" vertical nil)
    (/= const-decl "boolean" notequal nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (trk_bands_3D subtype
    "fseqs_ops[real].add(0, fseqs_ops[real].add(number_fields.*(2, pi_def.pi), fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_2D[bands_3D.gsmin, bands_3D.gsmax].trk_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}")))
 (trk_bands_3D_TCC6 0
  (trk_bands_3D_TCC6-1 nil 3477656172 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (Theta_H const-decl "real" vertical nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (default const-decl "T" fseqs "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (real_times_real_is_real application-judgement "real" reals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil (trk_bands_3D subtype "fseqs[real].empty_seq" "fseq[real]")))
 (trk_bands_3D_TCC7 0
  (trk_bands_3D_TCC7-2 nil 3768336227
   ("" (skeep)
    (("" (expand "add")
      (("" (expand "insert")
        (("" (expand "empty_seq")
          (("" (split 2)
            (("1" (expand "trk_fseq?")
              (("1" (skosimp*)
                (("1" (lift-if) (("1" (ground) nil nil)) nil)) nil))
              nil)
             ("2" (expand "increasing?")
              (("2" (skosimp*)
                (("2" (case "i!1 = 0 AND j!1 = 1")
                  (("1" (flatten) (("1" (assert) nil nil)) nil)
                   ("2" (typepred "i!1") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((insert const-decl "fseq" fseqs_ops "structures/")
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonzero_abs_is_pos application-judgement "{y: posreal | y >= x}"
     real_defs nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def
     "trig/"))
   nil
   (trk_bands_3D subtype
    "fseqs_ops[real].add(0, fseqs_ops[real].add(number_fields.*(2, pi_def.pi), fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_2D[bands_3D.gsmin, bands_3D.gsmax].trk_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))
  (trk_bands_3D_TCC7-1 nil 3477736096
   ("" (skeep)
    (("" (skosimp*)
      (("" (expand "add")
        (("" (expand "insert")
          (("" (expand "empty_seq")
            (("" (split 4)
              (("1" (expand "trk_fseq?")
                (("1" (skosimp*)
                  (("1" (lift-if)
                    (("1" (split +)
                      (("1" (flatten)
                        (("1" (assert) (("1" (assert) nil nil)) nil))
                        nil)
                       ("2" (flatten) (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "increasing?")
                (("2" (skosimp*)
                  (("2" (case "i!1 = 0 AND j!1 = 1")
                    (("1" (flatten) (("1" (assert) nil nil)) nil)
                     ("2" (typepred "i!1")
                      (("2" (typepred "j!1") (("2" (assert) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((insert const-decl "fseq" fseqs_ops "structures/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def
     "trig/"))
   nil
   (trk_bands_3D subtype
    "fseqs_ops[real].add(0, fseqs_ops[real].add(number_fields.*(2, pi_def.pi), fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_2D[bands_3D.gsmin, bands_3D.gsmax].trk_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}")))
 (gs_bands_3D_TCC1 0
  (gs_bands_3D_TCC1-1 nil 3477656172 ("" (subtype-tcc) nil nil)
   ((Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers
     nil)
    (mult_divides1 application-judgement "(divides(n))" divides nil)
    (mult_divides2 application-judgement "(divides(m))" divides nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (>= const-decl "bool" reals nil)
    (/= const-decl "boolean" notequal nil)
    (Theta_H const-decl "real" vertical nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (default const-decl "T" fseqs "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (<= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal"
     real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (gs_bands_3D subtype
    "fseqs_ops[real].add(bands_3D.gsmin, fseqs_ops[real].add(bands_3D.gsmax, fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_2D[bands_3D.gsmin, bands_3D.gsmax].gs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}")))
 (gs_bands_3D_TCC2 0
  (gs_bands_3D_TCC2-1 nil 3477736096 ("" (subtype-tcc) nil nil)
   ((Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (NOT const-decl "[bool -> bool]" booleans nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (default const-decl "T" fseqs "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (<= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (increasing? const-decl "bool" sort_fseq "structures/"))
   nil
   (gs_bands_3D subtype
    "fseqs_ops[real].add(bands_3D.gsmin, fseqs_ops[real].add(bands_3D.gsmax, fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_2D[bands_3D.gsmin, bands_3D.gsmax].gs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}")))
 (vs_bands_3D_TCC1 0
  (vs_bands_3D_TCC1-1 nil 3477656172 ("" (assuming-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil) nil
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (* const-decl "real" vectors_2D "vectors/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (sq const-decl "nonneg_real" sq "reals/")
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (vs_bands_3D assuming
    "bands_1D[bands_3D.H, bands_3D.B, bands_3D.T, bands_3D.vsmin, bands_3D.vsmax]"
    "vs_min_lt_max: ASSUMPTION reals.<(bands_1D.vsmin, bands_1D.vsmax)")))
 (vs_bands_3D_TCC2 0
  (vs_bands_3D_TCC2-1 nil 3477656172
   ("" (skeep)
    (("" (assert)
      (("" (lemma "Delta_gt_0_nzv")
        (("" (inst?) (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/") nil
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Delta_gt_0_nzv formula-decl nil horizontal nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil))
   nil
   (vs_bands_3D subtype
    "vect_3D_2D.vect2((vectors_3D.-)(bands_3D.vo, bands_3D.vi))"
    "{nzv | reals.>=(horizontal[bands_3D.D].Delta(vect_3D_2D.vect2(bands_3D.s), horizontal.nzv), 0)}")))
 (vs_bands_3D_TCC3 0
  (vs_bands_3D_TCC3-2 nil 3768336336
   ("" (skeep)
    (("" (hide-all-but (-2 2))
      (("" (grind :exclude "Theta_D") nil nil)) nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (Delta const-decl "real" horizontal nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (Theta_D const-decl "real" horizontal nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (<= const-decl "bool" reals nil)
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (- const-decl "Vector" vectors_3D "vectors/")
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil))
   nil
   (vs_bands_3D subtype "bands_3D.TT"
    "{AB: real_types.posreal | reals.>(AB, bands_3D.BB)}"))
  (vs_bands_3D_TCC3-1 nil 3477656172
   ("" (skeep)
    (("" (skosimp*)
      (("" (replace -2)
        (("" (hide-all-but 2) (("" (grind :exclude "Theta_D") nil nil))
          nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/") nil
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil))
   nil
   (vs_bands_3D subtype "bands_3D.TT"
    "{AB: real_types.posreal | reals.>(AB, bands_3D.BB)}")))
 (vs_bands_3D_TCC4 0
  (vs_bands_3D_TCC4-1 nil 3477656172
   ("" (skeep)
    (("" (hide-all-but (-2 2))
      (("" (grind :exclude "Theta_D") nil nil)) nil))
    nil)
   ((min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil) nil
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (<= const-decl "bool" reals nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Theta_D const-decl "real" horizontal nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (Delta const-decl "real" horizontal nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil))
   nil
   (vs_bands_3D assuming
    "bands_1D[bands_3D.H, bands_3D.BB, bands_3D.TT, bands_3D.vsmin, bands_3D.vsmax]"
    "vs_min_lt_max: ASSUMPTION reals.<(bands_1D.vsmin, bands_1D.vsmax)")))
 (vs_bands_3D_TCC5 0
  (vs_bands_3D_TCC5-2 nil 3768336371
   ("" (skeep)
    (("" (skosimp*)
      (("" (typepred "i!1")
        (("" (expand "empty_seq") (("" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (empty_seq const-decl "fsq" fseqs "structures/"))
   nil (vs_bands_3D subtype "fseqs[real].empty_seq" "fseq[real]"))
  (vs_bands_3D_TCC5-1 nil 3477656172
   ("" (skeep) (("" (skosimp*) (("" (assert) nil nil)) nil)) nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil (vs_bands_3D subtype "fseqs[real].empty_seq" "fseq[real]")))
 (vs_bands_3D_TCC6 0
  (vs_bands_3D_TCC6-2 nil 3768336430
   ("" (skeep)
    (("" (skosimp*)
      (("" (expand "add")
        (("" (expand "insert")
          (("" (expand "empty_seq")
            (("" (split 3)
              (("1" (expand "vs_fseq?")
                (("1" (skosimp*)
                  (("1" (lift-if) (("1" (ground) nil nil)) nil)) nil))
                nil)
               ("2" (expand "increasing?")
                (("2" (skosimp*)
                  (("2" (typepred "i!1") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((add const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (increasing? const-decl "bool" sort_fseq "structures/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal_max application-judgement
     "{z: posreal | z >= x AND z >= y}" real_defs nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (posreal_min application-judgement
     "{z: posreal | z <= x AND z <= y}" real_defs nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (insert const-decl "fseq" fseqs_ops "structures/"))
   nil
   (vs_bands_3D subtype
    "fseqs_ops[real].add(bands_3D.vsmin, fseqs_ops[real].add(bands_3D.vsmax, fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_vertical[bands_3D.vsmin, bands_3D.vsmax].vs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))
  (vs_bands_3D_TCC6-1 nil 3477656172
   ("" (skeep)
    (("" (skosimp*)
      (("" (typepred "i!1")
        (("" (expand "empty_seq") (("" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   ((empty_seq const-decl "fsq" fseqs "structures/")
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil))
   nil
   (vs_bands_3D subtype
    "fseqs_ops[real].add(bands_3D.vsmin, fseqs_ops[real].add(bands_3D.vsmax, fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_vertical[bands_3D.vsmin, bands_3D.vsmax].vs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}")))
 (vs_bands_3D_TCC7 0
  (vs_bands_3D_TCC7-2 "" 3504804951
   ("" (skeep)
    (("" (skosimp*)
      (("" (expand "add")
        (("" (expand "insert")
          (("" (expand "empty_seq")
            (("" (split 3)
              (("1" (expand "vs_fseq?")
                (("1" (skosimp*)
                  (("1" (lift-if)
                    (("1" (ground)
                      (("1" (lift-if) (("1" (ground) nil nil)) nil)
                       ("2" (lift-if) (("2" (ground) nil nil)) nil)
                       ("3" (lift-if) (("3" (ground) nil nil)) nil)
                       ("4" (lift-if) (("4" (ground) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "increasing?")
                (("2" (skosimp*)
                  (("2" (typepred "i!1") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((insert const-decl "fseq" fseqs_ops "structures/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (add const-decl "fseq" fseqs_ops "structures/"))
   shostak (vs_bands_3D subtype "fseqs[real].empty_seq" "fseq[real]"))
  (vs_bands_3D_TCC7-1 nil 3477744697
   ("" (skeep)
    (("" (skosimp*)
      (("" (expand "add")
        (("" (expand "insert")
          (("" (expand "empty_seq")
            (("" (split 3)
              (("1" (expand "vs_fseq?")
                (("1" (skosimp*)
                  (("1" (lift-if) (("1" (ground) nil nil)) nil)) nil))
                nil)
               ("2" (expand "increasing?")
                (("2" (skosimp*)
                  (("2" (typepred "i!1") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((insert const-decl "fseq" fseqs_ops "structures/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (add const-decl "fseq" fseqs_ops "structures/"))
   nil (vs_bands_3D subtype "fseqs[real].empty_seq" "fseq[real]")))
 (vs_bands_3D_TCC8 0
  (vs_bands_3D_TCC8-2 nil 3768336489
   ("" (skeep)
    (("" (expand "add")
      (("" (expand "insert")
        (("" (expand "empty_seq")
          (("" (split 3)
            (("1" (expand "vs_fseq?")
              (("1" (skosimp*)
                (("1" (lift-if) (("1" (ground) nil nil)) nil)) nil))
              nil)
             ("2" (expand "increasing?")
              (("2" (skosimp*) (("2" (assert) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((insert const-decl "fseq" fseqs_ops "structures/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (add const-decl "fseq" fseqs_ops "structures/"))
   nil
   (vs_bands_3D subtype
    "fseqs_ops[real].add(bands_3D.vsmin, fseqs_ops[real].add(bands_3D.vsmax, fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_vertical[bands_3D.vsmin, bands_3D.vsmax].vs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}"))
  (vs_bands_3D_TCC8-1 nil 3477744697
   ("" (skeep)
    (("" (skosimp*)
      (("" (expand "empty_seq") (("" (propax) nil nil)) nil)) nil))
    nil)
   ((empty_seq const-decl "fsq" fseqs "structures/")) nil
   (vs_bands_3D subtype
    "fseqs_ops[real].add(bands_3D.vsmin, fseqs_ops[real].add(bands_3D.vsmax, fseqs[real].empty_seq))"
    "{fs: (fseqs_aux_vertical[bands_3D.vsmin, bands_3D.vsmax].vs_fseq?) | sort_fseq[real, reals.<=].increasing?(fs)}")))
 (trk_bands_3D_not_empty 0
  (trk_bands_3D_not_empty-1 nil 3481653292
   ("" (skeep)
    (("" (expand "trk_bands_3D")
      (("" (lift-if)
        (("" (ground)
          (("1" (lemma "trk_bands_not_empty[D,B,T,gsmin,gsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("2"
            (lemma
             "trk_bands_not_empty[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
           min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("3" (expand "max")
            (("3" (expand "min")
              (("3" (expand "add")
                (("3" (expand "insert")
                  (("3" (expand "empty_seq") (("3" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("4"
            (lemma "trk_bands_not_empty
          [D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
           min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("5" (expand "add")
            (("5" (expand "insert")
              (("5" (expand "empty_seq") (("5" (assert) nil nil)) nil))
              nil))
            nil)
           ("6" (expand "add")
            (("6" (expand "empty_seq")
              (("6" (expand "insert") (("6" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((trk_bands_3D const-decl
     "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def "trig/")
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (< const-decl "bool" reals nil)
    (trk_bands_not_empty formula-decl nil bands_2D nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (H formal-const-decl "posreal" bands_3D nil)
    (Theta_H const-decl "real" vertical nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (add const-decl "fseq" fseqs_ops "structures/"))
   shostak))
 (trk_bands_last_TCC1 0
  (trk_bands_last_TCC1-1 nil 3482239733
   ("" (skeep)
    (("" (lemma "trk_bands_3D_not_empty")
      (("" (inst?) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((trk_bands_3D_not_empty formula-decl nil bands_3D nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil))
   nil
   (trk_bands_last subtype "(number_fields.-)(bands_3D.trkb`length, 1)"
    "nat")))
 (trk_bands_last 0
  (trk_bands_last-2 "" 3504805750
   ("" (skeep)
    (("" (name "trkbb" "trk_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(2*pi,trkbb)")
            (("1" (expand "member")
              (("1" (skosimp*)
                (("1" (typepred "trkbb")
                  (("1" (expand "increasing?")
                    (("1" (inst - "i!1" "trkbb`length-1")
                      (("1" (assert)
                        (("1" (expand "trk_fseq?")
                          (("1" (inst - "trkbb`length-1")
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "trkbb")
                  (("2" (expand "trk_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "trk_bands_critical[D,B,T,gsmin,gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (hide 2)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (hide 1)
                                    (("1"
                                      (expand "to2pi")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("2"
                          (lemma
                           "trk_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                        min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "to2pi")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (assert)
                                  (("1"
                                    (expand "empty_seq")
                                    (("1" (propax) nil nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4"
                          (lemma
                           "trk_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                        min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "to2pi")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("5" (expand "member")
                          (("5" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((trk_bands_3D const-decl
     "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def "trig/")
    nil
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (H formal-const-decl "posreal" bands_3D nil)
    (Theta_H const-decl "real" vertical nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (trk_bands_critical formula-decl nil bands_2D nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (to2pi const-decl "nnreal_lt_2pi" to2pi "trig/")
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def "trig/")
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (cos const-decl "real" sincos_def "trig/")
    (< const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (member const-decl "bool" fseqs "structures/"))
   shostak)
  (trk_bands_last-1 nil 3482239733
   ("" (skeep)
    (("" (name "trkbb" "trk_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(2*pi,trkbb)")
            (("1" (expand "member")
              (("1" (skosimp*)
                (("1" (typepred "trkbb")
                  (("1" (expand "increasing?")
                    (("1" (inst - "i!1" "trkbb`length-1")
                      (("1" (assert)
                        (("1" (expand "trk_fseq?")
                          (("1" (inst - "trkbb`length-1")
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "trkbb")
                  (("2" (expand "trk_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "trk_bands_critical[D,B,T,gsmin,gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (hide 2)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (hide 1)
                                    (("1"
                                      (expand "to2pi")
                                      (("1" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("2"
                          (lemma
                           "trk_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                  min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "to2pi")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4"
                          (lemma
                           "trk_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                  min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "to2pi")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("5" (expand "member")
                          (("5" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((increasing? const-decl "bool" sort_fseq "structures/")
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (trk_bands_critical formula-decl nil bands_2D nil)
    (to2pi const-decl "nnreal_lt_2pi" to2pi "trig/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (member const-decl "bool" fseqs "structures/"))
   shostak))
 (trk_bands_first 0
  (trk_bands_first-1 nil 3482241439
   ("" (skeep)
    (("" (name "trkbb" "trk_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(0,trkbb)")
            (("1" (typepred "trkbb")
              (("1" (expand "increasing?")
                (("1" (expand "member")
                  (("1" (skosimp*)
                    (("1" (inst - "0" "i!1")
                      (("1" (assert)
                        (("1" (expand "trk_fseq?")
                          (("1" (inst - "0") (("1" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "trkbb")
                  (("2" (expand "trk_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "trk_bands_critical[D, B, T, gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "to2pi")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("2"
                          (lemma
                           "trk_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                  min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "to2pi")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4"
                          (lemma
                           "trk_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                  min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (flatten)
                                (("1"
                                  (expand "to2pi")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("5" (expand "member")
                          (("5" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((trk_bands_3D const-decl
     "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil) nil
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Theta_H const-decl "real" vertical nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (trk_bands_critical formula-decl nil bands_2D nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (nonneg_floor_is_nat application-judgement "nat" floor_ceil nil)
    (to2pi const-decl "nnreal_lt_2pi" to2pi "trig/")
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nnreal_div_posreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def "trig/")
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (cos const-decl "real" sincos_def "trig/")
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def "trig/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" fseqs "structures/"))
   shostak))
 (gs_bands_3D_not_empty 0
  (gs_bands_3D_not_empty-1 nil 3481653604
   ("" (skeep)
    (("" (expand "gs_bands_3D")
      (("" (lift-if)
        (("" (ground)
          (("1" (lemma "gs_bands_not_empty[D, B, T, gsmin, gsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("2"
            (lemma "gs_bands_not_empty
          [D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
           min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("3" (expand "add")
            (("3" (expand "insert")
              (("3" (expand "empty_seq") (("3" (assert) nil nil)) nil))
              nil))
            nil)
           ("4"
            (lemma "gs_bands_not_empty
          [D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
           min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("5" (expand "empty_seq")
            (("5" (expand "add")
              (("5" (expand "insert") (("5" (assert) nil nil)) nil))
              nil))
            nil)
           ("6" (expand "empty_seq")
            (("6" (expand "add")
              (("6" (expand "insert") (("6" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((gs_bands_3D const-decl
     "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (< const-decl "bool" reals nil)
    (gs_bands_not_empty formula-decl nil bands_2D nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (H formal-const-decl "posreal" bands_3D nil)
    (Theta_H const-decl "real" vertical nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (add const-decl "fseq" fseqs_ops "structures/"))
   shostak))
 (gs_bands_last_TCC1 0
  (gs_bands_last_TCC1-1 nil 3482240281
   ("" (skeep)
    (("" (lemma "gs_bands_3D_not_empty")
      (("" (inst?) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((gs_bands_3D_not_empty formula-decl nil bands_3D nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil))
   nil
   (gs_bands_last subtype "(number_fields.-)(bands_3D.gsb`length, 1)"
    "nat")))
 (gs_bands_last 0
  (gs_bands_last-2 "" 3504805883
   ("" (skeep)
    (("" (name "gsbb" "gs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(gsmax,gsbb)")
            (("1" (expand "member")
              (("1" (skosimp*)
                (("1" (typepred "gsbb")
                  (("1" (expand "increasing?")
                    (("1" (inst - "i!1" "gsbb`length-1")
                      (("1" (assert)
                        (("1" (expand "gs_fseq?")
                          (("1" (inst - "gsbb`length-1")
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "gsbb")
                  (("2" (expand "gs_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "gs_bands_critical[D,B,T,gsmin,gsmax]")
                          (("1" (inst?) (("1" (assert) nil nil)) nil))
                          nil)
                         ("2"
                          (lemma
                           "gs_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                                    min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("2" (inst?) (("2" (assert) nil nil)) nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4"
                          (lemma
                           "gs_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                                    min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("4" (inst?) (("4" (assert) nil nil)) nil))
                          nil)
                         ("5" (expand "member")
                          (("5" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((gs_bands_3D const-decl
     "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil) nil
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (Theta_H const-decl "real" vertical nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (gs_bands_critical formula-decl nil bands_2D nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" fseqs "structures/"))
   shostak)
  (gs_bands_last-1 nil 3482240330
   ("" (skeep)
    (("" (name "gsbb" "gs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(gsmax,gsbb)")
            (("1" (expand "member")
              (("1" (skosimp*)
                (("1" (typepred "gsbb")
                  (("1" (expand "increasing?")
                    (("1" (inst - "i!1" "gsbb`length-1")
                      (("1" (assert)
                        (("1" (expand "gs_fseq?")
                          (("1" (inst - "gsbb`length-1")
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "gsbb")
                  (("2" (expand "gs_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "gs_bands_critical[D,B,T,gsmin,gsmax]")
                          (("1" (inst?) (("1" (assert) nil nil)) nil))
                          nil)
                         ("2"
                          (lemma
                           "gs_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                              min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("2" (inst?) (("2" (assert) nil nil)) nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4"
                          (lemma
                           "gs_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                              min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("4" (inst?) (("4" (assert) nil nil)) nil))
                          nil)
                         ("5" (expand "member")
                          (("5" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((increasing? const-decl "bool" sort_fseq "structures/")
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (gs_bands_critical formula-decl nil bands_2D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (member const-decl "bool" fseqs "structures/"))
   nil))
 (gs_bands_first 0
  (gs_bands_first-1 nil 3482241931
   ("" (skeep)
    (("" (name "gsbb" "gs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(gsmin,gsbb)")
            (("1" (typepred "gsbb")
              (("1" (expand "increasing?")
                (("1" (expand "member")
                  (("1" (skosimp*)
                    (("1" (inst - "0" "i!1")
                      (("1" (assert)
                        (("1" (expand "gs_fseq?")
                          (("1" (inst - "0") (("1" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "gsbb")
                  (("2" (expand "gs_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "gs_bands_critical[D, B, T, gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("2"
                          (lemma
                           "gs_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                              min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4"
                          (lemma
                           "gs_bands_critical[D, max(Theta_H(s`z, vo`z - vi`z, -1), B),
                              min(Theta_H(s`z, vo`z - vi`z, 1), T), gsmin, gsmax]")
                          (("1" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("5" (expand "member")
                          (("5" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((gs_bands_3D const-decl
     "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil) nil
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Theta_H const-decl "real" vertical nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (gs_bands_critical formula-decl nil bands_2D nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" fseqs "structures/"))
   nil))
 (vs_bands_3D_not_empty 0
  (vs_bands_3D_not_empty-1 nil 3481653846
   ("" (skeep)
    (("" (expand "vs_bands_3D")
      (("" (lift-if)
        (("" (ground)
          (("1" (lemma "vs_bands_not_empty[H, B, T, vsmin, vsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("2"
            (lemma "vs_bands_not_empty
          [H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
           min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin, vsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("3" (expand "empty_seq")
            (("3" (expand "add")
              (("3" (expand "insert") (("3" (assert) nil nil)) nil))
              nil))
            nil)
           ("4" (expand "empty_seq")
            (("4" (expand "add")
              (("4" (expand "insert") (("4" (assert) nil nil)) nil))
              nil))
            nil)
           ("5"
            (lemma "vs_bands_not_empty
          [H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
           min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin, vsmax]")
            (("1" (inst?) nil nil) ("2" (assert) nil nil)) nil)
           ("6" (expand "empty_seq")
            (("6" (expand "add")
              (("6" (expand "insert") (("6" (assert) nil nil)) nil))
              nil))
            nil)
           ("7" (expand "empty_seq")
            (("7" (expand "add")
              (("7" (expand "insert") (("7" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vs_bands_3D const-decl
     "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" bands_3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (< const-decl "bool" reals nil)
    (vs_bands_not_empty formula-decl nil bands_1D nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (vsmin formal-const-decl "real" bands_3D nil)
    (vsmax formal-const-decl "{x: real | x > vsmin}" bands_3D nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (D formal-const-decl "posreal" bands_3D nil)
    (Delta const-decl "real" horizontal nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (Theta_D const-decl "real" horizontal nil)
    (Vector type-eq-decl nil vectors_3D "vectors/") nil
    (<= const-decl "bool" reals nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (add const-decl "fseq" fseqs_ops "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/"))
   shostak))
 (vs_bands_last_TCC1 0
  (vs_bands_last_TCC1-1 nil 3482240478
   ("" (skeep)
    (("" (lemma "vs_bands_3D_not_empty")
      (("" (inst?) (("" (assert) nil nil)) nil)) nil))
    nil)
   ((vs_bands_3D_not_empty formula-decl nil bands_3D nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil))
   nil
   (vs_bands_last subtype "(number_fields.-)(bands_3D.vsb`length, 1)"
    "nat")))
 (vs_bands_last 0
  (vs_bands_last-2 "" 3504805998
   ("" (skeep)
    (("" (name "vsbb" "vs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(vsmax,vsbb)")
            (("1" (expand "member")
              (("1" (skosimp*)
                (("1" (typepred "vsbb")
                  (("1" (expand "increasing?")
                    (("1" (inst - "i!1" "vsbb`length-1")
                      (("1" (assert)
                        (("1" (expand "vs_fseq?")
                          (("1" (inst - "vsbb`length-1")
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "vsbb")
                  (("2" (expand "vs_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "vs_bands_critical[H,B,T,vsmin,vsmax]")
                          (("1" (inst?) (("1" (assert) nil nil)) nil))
                          nil)
                         ("2"
                          (lemma
                           "vs_bands_critical[H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
                  min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin,
                  vsmax]")
                          (("2" (inst?) (("2" (assert) nil nil)) nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (expand "member")
                          (("4" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("5"
                          (lemma
                           "vs_bands_critical[H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
                  min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin,
                  vsmax]")
                          (("5" (inst?) (("5" (assert) nil nil)) nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("7" (expand "member")
                          (("7" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vs_bands_3D const-decl
     "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (vsmax formal-const-decl "{x: real | x > vsmin}" bands_3D nil)
    (> const-decl "bool" reals nil)
    (vsmin formal-const-decl "real" bands_3D nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil) nil
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil) nil
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Theta_D const-decl "real" horizontal nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (Delta const-decl "real" horizontal nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (vs_bands_critical formula-decl nil bands_1D nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" fseqs "structures/"))
   shostak)
  (vs_bands_last-1 nil 3482240492
   ("" (skeep)
    (("" (name "vsbb" "vs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(vsmax,vsbb)")
            (("1" (expand "member")
              (("1" (skosimp*)
                (("1" (typepred "vsbb")
                  (("1" (expand "increasing?")
                    (("1" (inst - "i!1" "vsbb`length-1")
                      (("1" (assert)
                        (("1" (expand "vs_fseq?")
                          (("1" (inst - "vsbb`length-1")
                            (("1" (flatten) (("1" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "vsbb")
                  (("2" (expand "vs_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "vs_bands_critical[H,B,T,vsmin,vsmax]")
                          (("1" (inst?) (("1" (assert) nil nil)) nil))
                          nil)
                         ("2"
                          (lemma
                           "vs_bands_critical[H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
                  min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin,
                  vsmax]")
                          (("2" (inst?) (("2" (assert) nil nil)) nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (expand "member")
                          (("4" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("5"
                          (lemma
                           "vs_bands_critical[H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
                  min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin,
                  vsmax]")
                          (("5" (inst?) (("5" (assert) nil nil)) nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("7" (expand "member")
                          (("7" (inst + "1")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((member const-decl "bool" fseqs "structures/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (vs_bands_critical formula-decl nil bands_1D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (Delta const-decl "real" horizontal nil)
    (Sign type-eq-decl nil sign "reals/")
    (Theta_D const-decl "real" horizontal nil)
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (fseq type-eq-decl nil fseqs "structures/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (increasing? const-decl "bool" sort_fseq "structures/"))
   nil))
 (vs_bands_first 0
  (vs_bands_first-1 nil 3482242090
   ("" (skeep)
    (("" (name "vsbb" "vs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (case "member(vsmin,vsbb)")
            (("1" (typepred "vsbb")
              (("1" (expand "increasing?")
                (("1" (expand "member")
                  (("1" (skosimp*)
                    (("1" (inst - "0" "i!1")
                      (("1" (assert)
                        (("1" (expand "vs_fseq?")
                          (("1" (inst - "0") (("1" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 2)
              (("2" (hide -)
                (("2" (expand "vsbb")
                  (("2" (expand "vs_bands_3D")
                    (("2" (lift-if)
                      (("2" (ground)
                        (("1"
                          (lemma
                           "vs_bands_critical[H, B, T, vsmin, vsmax]")
                          (("1" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("2"
                          (lemma
                           "vs_bands_critical[H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
                  min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin,
                  vsmax]")
                          (("1" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("3" (expand "member")
                          (("3" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("4" (expand "member")
                          (("4" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("5"
                          (lemma
                           "vs_bands_critical[H, max(Theta_D(vect2(s), vect2(vo - vi), -1), B),
                  min(Theta_D(vect2(s), vect2(vo - vi), 1), T), vsmin,
                  vsmax]")
                          (("1" (inst?)
                            (("1" (assert) nil nil)
                             ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil)
                         ("6" (expand "member")
                          (("6" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("7" (expand "member")
                          (("7" (inst + "0")
                            (("1" (expand "add")
                              (("1"
                                (expand "insert")
                                (("1"
                                  (expand "empty_seq")
                                  (("1" (propax) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "add")
                              (("2"
                                (expand "insert")
                                (("2"
                                  (expand "empty_seq")
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vs_bands_3D const-decl
     "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (vsmax formal-const-decl "{x: real | x > vsmin}" bands_3D nil)
    (> const-decl "bool" reals nil)
    (vsmin formal-const-decl "real" bands_3D nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil) nil
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil) nil
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Theta_D const-decl "real" horizontal nil)
    (Sign type-eq-decl nil sign "reals/")
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (Delta const-decl "real" horizontal nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (vs_bands_critical formula-decl nil bands_1D nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (member const-decl "bool" fseqs "structures/"))
   nil))
 (red_trk_band_3D?_TCC1 0
  (red_trk_band_3D?_TCC1-1 nil 3477656172 ("" (subtype-tcc) nil nil)
   nil nil (red_trk_band_3D? subtype "bands_3D.i" "nat")))
 (red_trk_band_3D?_TCC2 0
  (red_trk_band_3D?_TCC2-1 nil 3477656172 ("" (subtype-tcc) nil nil)
   nil nil
   (red_trk_band_3D? subtype "(number_fields.+)(bands_3D.i, 1)"
    "nat")))
 (red_gs_band_3D?_TCC1 0
  (red_gs_band_3D?_TCC1-1 nil 3477656172 ("" (subtype-tcc) nil nil) nil
   nil (red_gs_band_3D? subtype "bands_3D.i" "nat")))
 (red_gs_band_3D?_TCC2 0
  (red_gs_band_3D?_TCC2-1 nil 3477656172 ("" (subtype-tcc) nil nil) nil
   nil
   (red_gs_band_3D? subtype "(number_fields.+)(bands_3D.i, 1)" "nat")))
 (red_vs_band_3D?_TCC1 0
  (red_vs_band_3D?_TCC1-1 nil 3477656172 ("" (subtype-tcc) nil nil) nil
   nil (red_vs_band_3D? subtype "bands_3D.i" "nat")))
 (red_vs_band_3D?_TCC2 0
  (red_vs_band_3D?_TCC2-1 nil 3477656172 ("" (subtype-tcc) nil nil) nil
   nil
   (red_vs_band_3D? subtype "(number_fields.+)(bands_3D.i, 1)" "nat")))
 (trk_red_bands_3D 0
  (trk_red_bands_3D-2 "" 3504809305
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "trk_bands_3D(s,vo,vi) = trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(trk_bands[D, B, T, gsmin, gsmax]
                                                                                           (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                           (1 + i!1)
                                                                                        +
                                                                                        trk_bands[D, B, T, gsmin, gsmax]
                                                                                            (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                            (i!1))
                                                                                       / 2")
                    (("1" (case "mp >= 0")
                      (("1" (expand "red_trk_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vtrk_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "trk2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "trk_red_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_trk_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vtrk" -1 1)
                                                (("1"
                                                  (expand
                                                   "Vtrk_3D"
                                                   1
                                                   1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_trk2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (case
                                                                   "x!1 >=0 AND x!1 < 2*pi")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vtrk_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vtrk_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "trk2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vtrk")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vtrk_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_trk2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "trk_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= 0 AND x!1 <2*pi")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_3D?")
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_2D?")
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "t!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Vtrk_3D")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vect2_sub")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_trk2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Vtrk")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "trk_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (typepred
                           "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                          (("2" (expand "trk_fseq?")
                            (("2" (inst-cp - "i!1")
                              (("2"
                                (inst - "i!1+1")
                                (("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (typepred "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
            (("2" (expand "trk_fseq?")
              (("2" (expand "trk_bands_3D") (("2" (assert) nil nil))
                nil))
              nil))
            nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "trk_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (assert)
                          (("1" (skosimp*)
                            (("1"
                              (name "mp"
                                    "(trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                                         (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                         (1 + i!1)
                                                                                                      +
                                                                                                      trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                                          (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                          (i!1))
                                                                                                     / 2")
                              (("1"
                                (case "mp >= 0")
                                (("1"
                                  (expand "red_trk_band_3D?")
                                  (("1"
                                    (replace -2)
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (expand "Vtrk_3D" 2 1)
                                        (("1"
                                          (rewrite "vz_distr_sub")
                                          (("1"
                                            (expand "trk2v3" 2 1)
                                            (("1"
                                              (expand "Vtrk_3D" 2 1)
                                              (("1"
                                                (rewrite
                                                 "vz_distr_sub")
                                                (("1"
                                                  (expand "trk2v3" 2 1)
                                                  (("1"
                                                    (case
                                                     "Vtrk_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "trk_red_bands[D,BB,TT,gsmin,gsmax]")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "s"
                                                           "vi"
                                                           "vo")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "i!1")
                                                              (("1"
                                                                (expand
                                                                 "red_trk_band?")
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (expand
                                                                     "Vtrk"
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "Vtrk_3D"
                                                                       2
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "vect2_sub")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_trk2v3")
                                                                          (("1"
                                                                            (expand
                                                                             "trk2v2"
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "trk2v2"
                                                                               2
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "cd2d?")
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         -2)
                                                                                        (("1"
                                                                                          (hide
                                                                                           (-2
                                                                                            -3))
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "cd3d")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "cd3d_rewrite")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "x!1 >= 0 AND x!1 <2*pi")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd2d")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Vtrk")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Vtrk_3D")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "vect2_sub")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vect2_trk2v3")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "trk2v2")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "cd2d?")
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "omega_vv")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "tau_vv")
                                                                                                                                  (("1"
                                                                                                                                    (lift-if)
                                                                                                                                    (("1"
                                                                                                                                      (ground)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "Vtrk_3D")
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "vz_distr_sub")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "trk2v3")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "trk_fseq?")
                                                                                                          (("2"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "i!1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "i!1+1")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "i!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "omega_vv")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "tau_vv")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (split
                                                                                         -3)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "omega_vv"
                                                                                           (-1
                                                                                            +))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "tau_vv")
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide
                                                                                           -2)
                                                                                          (("3"
                                                                                            (skosimp*)
                                                                                            (("3"
                                                                                              (case
                                                                                               "x!1 >= 0 AND x!1 <2*pi")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x!1")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "cd3d")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d_rewrite")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd2d")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "cd2d?")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "Vtrk_3D")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "Vtrk")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "vz_distr_sub")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vect2_sub")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vect2_trk2v3")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "trk2v3")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "trk2v2")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "omega_vv")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "tau_vv")
                                                                                                                                  (("1"
                                                                                                                                    (lift-if)
                                                                                                                                    (("1"
                                                                                                                                      (ground)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "Vtrk_3D")
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "vz_distr_sub")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "trk2v3")
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "trk_fseq?")
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "i!1")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!1+1")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "i!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "i!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand
                                                       "Vtrk_3D")
                                                      (("2"
                                                        (rewrite
                                                         "vz_distr_sub")
                                                        (("2"
                                                          (expand
                                                           "trk2v3")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (typepred "i!1")
                                  (("2"
                                    (assert)
                                    (("2"
                                      (typepred
                                       "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                      (("2"
                                        (expand "trk_fseq?")
                                        (("2"
                                          (inst-cp - "i!1")
                                          (("2"
                                            (inst - "i!1+1")
                                            (("2"
                                              (flatten)
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (skosimp*)
                            (("2" (hide 3)
                              (("2"
                                (split)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (hide 1)
                                    (("1"
                                      (expand "red_trk_band_3D?")
                                      (("1"
                                        (name
                                         "mp"
                                         "(structures@add(gsmin, structures@add(gsmax, empty_seq))`seq(1 + i!1) +
                                                        structures@add(gsmin, add(gsmax, empty_seq))`seq(i!1))
                                                       / 2")
                                        (("1"
                                          (case
                                           "Vtrk_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                          (("1"
                                            (rewrite "cd3d_rewrite")
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (expand "Vtrk_3D")
                                            (("2"
                                              (rewrite "vz_distr_sub")
                                              (("2"
                                                (expand "trk2v3")
                                                (("2"
                                                  (propax)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (expand "red_trk_band_3D?")
                                    (("2"
                                      (name
                                       "mp"
                                       "(structures@add(0, structures@add(2 * pi, empty_seq))`seq(1 + i!1) +
                                       structures@add(0, structures@add(2 * pi, empty_seq))`seq(i!1))
                                      / 2")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (inst - "mp")
                                          (("1"
                                            (rewrite "cd3d")
                                            nil
                                            nil)
                                           ("2"
                                            (expand "add")
                                            (("2"
                                              (expand "insert")
                                              (("2"
                                                (expand "empty_seq")
                                                (("2"
                                                  (case "i!1 = 0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (typepred
                                                       "gsmax")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "i!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "add")
                                                        (("2"
                                                          (expand
                                                           "insert")
                                                          (("2"
                                                            (expand
                                                             "empty_seq")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (flatten)
            (("2" (skosimp*)
              (("2" (split)
                (("1" (flatten)
                  (("1" (hide 1)
                    (("1" (expand "red_trk_band_3D?")
                      (("1" (rewrite "cd3d" :dir rl)
                        (("1" (expand "conflict_3D?")
                          (("1" (skosimp*)
                            (("1" (expand "Vtrk_3D" -1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "trk2v3")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (typepred "trk_bands_3D(s, vo, vi)")
                  (("2" (expand "trk_fseq?")
                    (("2" (inst-cp - "i!1")
                      (("2" (inst - "i!1+1")
                        (("2" (flatten)
                          (("2" (expand "red_trk_band_3D?")
                            (("2"
                              (name "mp"
                                    "(trk_bands_3D(s, vo, vi)`seq(1 + i!1) +
                                                trk_bands_3D(s, vo, vi)`seq(i!1))
                                               / 2")
                              (("2"
                                (replace -1)
                                (("2"
                                  (inst - "mp")
                                  (("1" (rewrite "cd3d") nil nil)
                                   ("2"
                                    (typepred
                                     "trk_bands_3D(s, vo, vi)")
                                    (("2"
                                      (expand "increasing?")
                                      (("2"
                                        (inst - "i!1" "i!1+1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (trk_bands const-decl "{fs: (trk_fseq?) | increasing?(fs)}"
     bands_2D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (trk_bands_3D const-decl
     "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vect2_trk2v3 formula-decl nil bands_util nil)
    (trk2v2_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (trk2v2_Nzv application-judgement "Nz_vect2" bands_util nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (Vtrk_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (cos const-decl "real" sincos_def "trig/")
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def "trig/")
    (cd2d formula-decl nil cd2d nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def "trig/")
    (cd3d formula-decl nil cd3d nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (Vtrk const-decl "Vect2" bands_util nil)
    (red_trk_band? const-decl "bool" bands_2D nil)
    (trk_red_bands formula-decl nil bands_2D nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (trk2v3_Nzv application-judgement "Nzv2_vect3" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (trk_only? const-decl "bool" definitions nil)
    (trk2v3 const-decl
     "(LAMBDA (vo2: Vect3): trk_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)"
     bands_util nil)
    (cd3d_rewrite formula-decl nil cd3d nil)
    (Vector type-eq-decl nil vectors_3D "vectors/") nil
    (Vtrk_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (red_trk_band_3D? const-decl "bool" bands_3D nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (subrange type-eq-decl nil integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil) nil nil
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil) nil
    nil (insert const-decl "fseq" fseqs_ops "structures/")
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    nil nil nil nil nil nil nil
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (tau_vv const-decl "real" cd2d nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (omega_vv const-decl "real" cd2d nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D
     "vectors/")
    (cd2d? const-decl "bool" cd2d nil)
    (trk2v2 const-decl "(trk_only?(vo2))" bands_util nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil))
   shostak)
  (trk_red_bands_3D-1 nil 3477656709
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "trk_bands_3D(s,vo,vi) = trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(trk_bands[D, B, T, gsmin, gsmax]
                                                                                (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                (1 + i!1)
                                                                             +
                                                                             trk_bands[D, B, T, gsmin, gsmax]
                                                                                 (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                 (i!1))
                                                                            / 2")
                    (("1" (case "mp >= 0")
                      (("1" (expand "red_trk_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vtrk_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "trk2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "trk_red_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_trk_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vtrk" -1 1)
                                                (("1"
                                                  (expand
                                                   "Vtrk_3D"
                                                   1
                                                   1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_trk2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (case
                                                                   "x!1 >=0 AND x!1 < 2*pi")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vtrk_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vtrk_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "trk2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vtrk")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vtrk_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_trk2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "trk_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= 0 AND x!1 <2*pi")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_3D?")
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_2D?")
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "t!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Vtrk_3D")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vect2_sub")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_trk2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Vtrk")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "trk_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (typepred
                                                           "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                          (("2"
                                                            (expand
                                                             "trk_fseq?")
                                                            (("2"
                                                              (inst-cp
                                                               -
                                                               "i!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1+1")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                        (("2" (expand "trk_fseq?")
                          (("2" (inst-cp - "i!1")
                            (("2" (inst - "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "trk_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "trk_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (name
                                 "mp"
                                 "(trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                          (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                          (1 + i!1)
                                                                                       +
                                                                                       trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                           (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                           (i!1))
                                                                                      / 2")
                                (("1"
                                  (case "mp >= 0")
                                  (("1"
                                    (expand "red_trk_band_3D?")
                                    (("1"
                                      (replace -2)
                                      (("1"
                                        (rewrite "cd3d_rewrite")
                                        (("1"
                                          (expand "Vtrk_3D" 2 1)
                                          (("1"
                                            (rewrite "vz_distr_sub")
                                            (("1"
                                              (expand "trk2v3" 2 1)
                                              (("1"
                                                (expand "Vtrk_3D" 2 1)
                                                (("1"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("1"
                                                    (expand
                                                     "trk2v3"
                                                     2
                                                     1)
                                                    (("1"
                                                      (case
                                                       "Vtrk_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "trk_red_bands[D,BB,TT,gsmin,gsmax]")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "s"
                                                             "vi"
                                                             "vo")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "i!1")
                                                                (("1"
                                                                  (expand
                                                                   "red_trk_band?")
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (expand
                                                                       "Vtrk"
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "Vtrk_3D"
                                                                         2
                                                                         1)
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_sub")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vect2_trk2v3")
                                                                            (("1"
                                                                              (expand
                                                                               "trk2v2"
                                                                               -1
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "trk2v2"
                                                                                 2
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "cd2d?")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (split
                                                                                       +)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (split
                                                                                           -2)
                                                                                          (("1"
                                                                                            (hide
                                                                                             (-2
                                                                                              -3))
                                                                                            (("1"
                                                                                              (skosimp*)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "cd3d")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "cd3d_rewrite")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "x!1 >= 0 AND x!1 <2*pi")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "x!1")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd2d")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Vtrk")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "Vtrk_3D")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vect2_sub")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "vect2_trk2v3")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "trk2v2")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "cd2d?")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "omega_vv")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "tau_vv")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "Vtrk_3D")
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "vz_distr_sub")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "trk2v3")
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "trk_fseq?")
                                                                                                            (("2"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "i!1")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1+1")
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "i!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "i!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "omega_vv")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "tau_vv")
                                                                                                  (("2"
                                                                                                    (lift-if)
                                                                                                    (("2"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (split
                                                                                           -3)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "omega_vv"
                                                                                             (-1
                                                                                              +))
                                                                                            (("2"
                                                                                              (expand
                                                                                               "tau_vv")
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("3"
                                                                                              (skosimp*)
                                                                                              (("3"
                                                                                                (case
                                                                                                 "x!1 >= 0 AND x!1 <2*pi")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!1")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d_rewrite")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd2d")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "cd2d?")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "Vtrk_3D")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vtrk")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vz_distr_sub")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vect2_sub")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vect2_trk2v3")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "trk2v3")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "trk2v2")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "omega_vv")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "tau_vv")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "Vtrk_3D")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "vz_distr_sub")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "trk2v3")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "trk_fseq?")
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "i!1")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i!1+1")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "trk_fseq?")
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "i!1+1")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "Vtrk_3D")
                                                        (("2"
                                                          (rewrite
                                                           "vz_distr_sub")
                                                          (("2"
                                                            (expand
                                                             "trk2v3")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (typepred "i!1")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (typepred
                                         "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                        (("2"
                                          (expand "trk_fseq?")
                                          (("2"
                                            (inst-cp - "i!1")
                                            (("2"
                                              (inst - "i!1+1")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (lift-if)
                          (("2" (assert)
                            (("2" (skosimp*)
                              (("2"
                                (hide 3)
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (hide 1)
                                      (("1"
                                        (expand "red_trk_band_3D?")
                                        (("1"
                                          (name
                                           "mp"
                                           "(add(gsmin, add(gsmax, empty_seq))`seq(1 + i!1) +
                                       add(gsmin, add(gsmax, empty_seq))`seq(i!1))
                                      / 2")
                                          (("1"
                                            (case
                                             "Vtrk_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                            (("1"
                                              (rewrite "cd3d_rewrite")
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (expand "Vtrk_3D")
                                              (("2"
                                                (rewrite
                                                 "vz_distr_sub")
                                                (("2"
                                                  (expand "trk2v3")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (expand "red_trk_band_3D?")
                                      (("2"
                                        (name
                                         "mp"
                                         "(add(0, add(2 * pi, empty_seq))`seq(1 + i!1) +
                      add(0, add(2 * pi, empty_seq))`seq(i!1))
                     / 2")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (inst - "mp")
                                            (("1"
                                              (rewrite "cd3d")
                                              nil
                                              nil)
                                             ("2"
                                              (expand "add")
                                              (("2"
                                                (expand "insert")
                                                (("2"
                                                  (expand "empty_seq")
                                                  (("2"
                                                    (case "i!1 = 0")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (typepred
                                                         "gsmax")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (expand
                                                           "add")
                                                          (("2"
                                                            (expand
                                                             "insert")
                                                            (("2"
                                                              (expand
                                                               "empty_seq")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (flatten)
            (("2" (skosimp*)
              (("2" (split)
                (("1" (flatten)
                  (("1" (hide 1)
                    (("1" (expand "red_trk_band_3D?")
                      (("1" (rewrite "cd3d" :dir rl)
                        (("1" (expand "conflict_3D?")
                          (("1" (skosimp*)
                            (("1" (expand "Vtrk_3D" -1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "trk2v3")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (typepred "trk_bands_3D(s, vo, vi)")
                  (("2" (expand "trk_fseq?")
                    (("2" (inst-cp - "i!1")
                      (("2" (inst - "i!1+1")
                        (("2" (flatten)
                          (("2" (expand "red_trk_band_3D?")
                            (("2"
                              (name "mp"
                                    "(trk_bands_3D(s, vo, vi)`seq(1 + i!1) +
                                   trk_bands_3D(s, vo, vi)`seq(i!1))
                                  / 2")
                              (("2"
                                (replace -1)
                                (("2"
                                  (inst - "mp")
                                  (("1" (rewrite "cd3d") nil nil)
                                   ("2"
                                    (typepred
                                     "trk_bands_3D(s, vo, vi)")
                                    (("2"
                                      (expand "increasing?")
                                      (("2"
                                        (inst - "i!1" "i!1+1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (trk_bands const-decl "{fs: (trk_fseq?) | increasing?(fs)}"
     bands_2D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (increasing? const-decl "bool" sort_fseq "structures/")
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (vect2_trk2v3 formula-decl nil bands_util nil)
    (trk2v2_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (trk2v2_Nzv application-judgement "Nz_vect2" bands_util nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (Vtrk_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (cd2d formula-decl nil cd2d nil) (cd3d formula-decl nil cd3d nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (Vtrk const-decl "Vect2" bands_util nil)
    (red_trk_band? const-decl "bool" bands_2D nil)
    (trk_red_bands formula-decl nil bands_2D nil)
    (trk2v3_Nzv application-judgement "Nzv2_vect3" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (trk_only? const-decl "bool" definitions nil)
    (trk2v3 const-decl
     "(LAMBDA (vo2: Vect3): trk_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)"
     bands_util nil)
    (cd3d_rewrite formula-decl nil cd3d nil)
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Vtrk_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (tau_vv const-decl "real" cd2d nil)
    (omega_vv const-decl "real" cd2d nil)
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D
     "vectors/")
    (cd2d? const-decl "bool" cd2d nil)
    (trk2v2 const-decl "(trk_only?(vo2))" bands_util nil))
   shostak))
 (trk_green_bands_3D 0
  (trk_green_bands_3D-2 "" 3504810627
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "trk_bands_3D(s,vo,vi) = trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(trk_bands[D, B, T, gsmin, gsmax]
                                                                                                                 (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                 (1 + i!1)
                                                                                                              +
                                                                                                              trk_bands[D, B, T, gsmin, gsmax]
                                                                                                                  (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                  (i!1))
                                                                                                             / 2")
                    (("1" (case "mp >= 0")
                      (("1" (expand "red_trk_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vtrk_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "trk2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "trk_green_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_trk_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vtrk" -1 1)
                                                (("1"
                                                  (expand
                                                   "Vtrk_3D"
                                                   1
                                                   1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_trk2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("1"
                                                                    (case
                                                                     "x!1 >= 0 AND x!1 <2*pi")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_3D?")
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_2D?")
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "t!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Vtrk_3D")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vect2_sub")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_trk2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Vtrk")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                      (("2"
                                                                        (expand
                                                                         "trk_fseq?")
                                                                        (("2"
                                                                          (inst-cp
                                                                           -1
                                                                           "i!1")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "i!1+1")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= 0 AND x!1 <2*pi")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vtrk_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vtrk_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "trk2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vtrk")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vtrk_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_trk2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "trk_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (typepred
                           "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                          (("2" (expand "trk_fseq?")
                            (("2" (inst-cp - "i!1")
                              (("2"
                                (inst - "i!1+1")
                                (("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "trk_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "trk_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (assert)
                          (("1" (skosimp*)
                            (("1"
                              (name "mp"
                                    "(trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                                       (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                                       (1 + i!1)
                                                                                                                                    +
                                                                                                                                    trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                                        (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                                        (i!1))
                                                                                                                                   / 2")
                              (("1"
                                (case "mp >= 0")
                                (("1"
                                  (expand "red_trk_band_3D?")
                                  (("1"
                                    (replace -2)
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (expand "Vtrk_3D" 2 1)
                                        (("1"
                                          (rewrite "vz_distr_sub")
                                          (("1"
                                            (expand "trk2v3" 2 1)
                                            (("1"
                                              (expand "Vtrk_3D" 2 1)
                                              (("1"
                                                (rewrite
                                                 "vz_distr_sub")
                                                (("1"
                                                  (expand "trk2v3" 2 1)
                                                  (("1"
                                                    (case
                                                     "Vtrk_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "trk_green_bands[D,BB,TT,gsmin,gsmax]")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "s"
                                                           "vi"
                                                           "vo")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "i!1")
                                                              (("1"
                                                                (expand
                                                                 "red_trk_band?")
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (expand
                                                                     "Vtrk"
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "Vtrk_3D"
                                                                       2
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "vect2_sub")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_trk2v3")
                                                                          (("1"
                                                                            (expand
                                                                             "trk2v2"
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "trk2v2"
                                                                               2
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "cd2d?")
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (case
                                                                                             "x!1 >= 0 AND x!1 <2*pi")
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "cd3d")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "cd3d_rewrite")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "cd2d")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "cd2d?")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Vtrk_3D")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Vtrk")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "vz_distr_sub")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vect2_sub")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "vect2_trk2v3")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "trk2v3")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "trk2v2")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "omega_vv")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "tau_vv")
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (ground)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (hide-all-but
                                                                                                         1)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "Vtrk_3D")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "vz_distr_sub")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "trk2v3")
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "trk_fseq?")
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "i!1")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!1+1")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "i!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (typepred
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "trk_fseq?")
                                                                                                  (("2"
                                                                                                    (inst-cp
                                                                                                     -
                                                                                                     "i!1")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i!1+1")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "i!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "omega_vv"
                                                                                           (-1
                                                                                            +))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "tau_vv")
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "omega_vv"
                                                                                           (-1
                                                                                            +))
                                                                                          (("3"
                                                                                            (expand
                                                                                             "tau_vv")
                                                                                            (("3"
                                                                                              (lift-if)
                                                                                              (("3"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -3)
                                                                                          (("2"
                                                                                            (split
                                                                                             -3)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "omega_vv"
                                                                                                   (-1
                                                                                                    +))
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "tau_vv")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "x!1 >= 0 AND x!1 <2*pi")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!1")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d_rewrite")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd2d")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "cd2d?")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "Vtrk_3D")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vtrk")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vz_distr_sub")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vect2_sub")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vect2_trk2v3")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "trk2v3")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "trk2v2")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "omega_vv")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "tau_vv")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "Vtrk_3D")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "vz_distr_sub")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "trk2v3")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "trk_fseq?")
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "i!1")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i!1+1")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "i!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (typepred
                                                       "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                      (("2"
                                                        (expand
                                                         "trk_fseq?")
                                                        (("2"
                                                          (inst-cp
                                                           -
                                                           "i!1")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "i!1+1")
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (expand
                                                                   "Vtrk_3D")
                                                                  (("1"
                                                                    (rewrite
                                                                     "vz_distr_sub")
                                                                    (("1"
                                                                      (expand
                                                                       "trk2v3")
                                                                      (("1"
                                                                        (propax)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred
                                                               "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                              (("2"
                                                                (expand
                                                                 "trk_fseq?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (typepred
                                                                       "i!1")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (typepred
                                                             "i!1")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (assert)
                                  (("2"
                                    (typepred
                                     "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                    (("2"
                                      (expand "trk_fseq?")
                                      (("2"
                                        (inst-cp - "i!1")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst - "i!1+1")
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (typepred "i!1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "i!1")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (hide 3)
                            (("2" (split)
                              (("1"
                                (flatten)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (rewrite "cd3d")
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (case
                                         "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (expand "Vtrk_3D")
                                          (("2"
                                            (rewrite "vz_distr_sub")
                                            (("2"
                                              (expand "trk2v3")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (expand "red_trk_band_3D?")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (name
                                         "mp"
                                         "(structures@add(0, structures@add(2 * pi, empty_seq))`seq(1 + i!1) +
                                       structures@add(0, structures@add(2 * pi, empty_seq))`seq(i!1))
                                      / 2")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (rewrite "cd3d_rewrite")
                                            (("2"
                                              (case
                                               "Vtrk_3D(vo, vi)(mp)`z = vo`z-vi`z")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (expand "Vtrk_3D")
                                                (("2"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("2"
                                                    (expand "trk2v3")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split)
              (("1" (flatten)
                (("1" (skosimp*)
                  (("1" (expand "conflict_3D?")
                    (("1" (skosimp*)
                      (("1" (expand "Vtrk_3D")
                        (("1" (rewrite "vz_distr_sub")
                          (("1" (expand "trk2v3")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "red_trk_band_3D?")
                  (("2" (hide -1)
                    (("2" (rewrite "cd3d" :dir rl)
                      (("2" (expand "conflict_3D?")
                        (("2" (skosimp*)
                          (("2" (expand "Vtrk_3D")
                            (("2" (rewrite "vz_distr_sub")
                              (("2"
                                (expand "trk2v3")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (trk_bands const-decl "{fs: (trk_fseq?) | increasing?(fs)}"
     bands_2D nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (trk_bands_3D const-decl
     "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vect2_trk2v3 formula-decl nil bands_util nil)
    (trk2v2_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (trk2v2_Nzv application-judgement "Nz_vect2" bands_util nil)
    (cd2d formula-decl nil cd2d nil) (cd3d formula-decl nil cd3d nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (Vtrk_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def "trig/")
    (Lookahead type-eq-decl nil Lookahead nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (pi const-decl "{x: real | x > 2 AND x < 4 AND cos(x / 2) = 0}"
     pi_def "trig/")
    (cos const-decl "real" sincos_def "trig/")
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (Vtrk const-decl "Vect2" bands_util nil)
    (red_trk_band? const-decl "bool" bands_2D nil)
    (trk_green_bands formula-decl nil bands_2D nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (trk2v3_Nzv application-judgement "Nzv2_vect3" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (trk_only? const-decl "bool" definitions nil)
    (trk2v3 const-decl
     "(LAMBDA (vo2: Vect3): trk_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)"
     bands_util nil)
    (cd3d_rewrite formula-decl nil cd3d nil)
    (Vector type-eq-decl nil vectors_3D "vectors/") nil
    (Vtrk_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (red_trk_band_3D? const-decl "bool" bands_3D nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (subrange type-eq-decl nil integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    nil nil nil nil nil nil nil
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D
     "vectors/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (tau_vv const-decl "real" cd2d nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (omega_vv const-decl "real" cd2d nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (cd2d? const-decl "bool" cd2d nil)
    (trk2v2 const-decl "(trk_only?(vo2))" bands_util nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil))
   shostak)
  (trk_green_bands_3D-1 nil 3477738484
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "trk_bands_3D(s,vo,vi) = trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(trk_bands[D, B, T, gsmin, gsmax]
                                                                                                      (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                      (1 + i!1)
                                                                                                   +
                                                                                                   trk_bands[D, B, T, gsmin, gsmax]
                                                                                                       (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                       (i!1))
                                                                                                  / 2")
                    (("1" (case "mp >= 0")
                      (("1" (expand "red_trk_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vtrk_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "trk2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "trk_green_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_trk_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vtrk" -1 1)
                                                (("1"
                                                  (expand
                                                   "Vtrk_3D"
                                                   1
                                                   1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_trk2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("1"
                                                                    (case
                                                                     "x!1 >= 0 AND x!1 <2*pi")
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_3D?")
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_2D?")
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "t!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Vtrk_3D")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vect2_sub")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_trk2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Vtrk")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (typepred
                                                                       "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                      (("2"
                                                                        (expand
                                                                         "trk_fseq?")
                                                                        (("2"
                                                                          (inst-cp
                                                                           -1
                                                                           "i!1")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "i!1+1")
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= 0 AND x!1 <2*pi")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vtrk_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vtrk_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "trk2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vtrk")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vtrk_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_trk2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "trk_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (typepred
                                                           "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                          (("2"
                                                            (expand
                                                             "trk_fseq?")
                                                            (("2"
                                                              (inst-cp
                                                               -
                                                               "i!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1+1")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "trk_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                        (("2" (expand "trk_fseq?")
                          (("2" (inst-cp - "i!1")
                            (("2" (inst - "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "trk_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "trk_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (name
                                 "mp"
                                 "(trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                        (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                        (1 + i!1)
                                                                                                                     +
                                                                                                                     trk_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                         (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                         (i!1))
                                                                                                                    / 2")
                                (("1"
                                  (case "mp >= 0")
                                  (("1"
                                    (expand "red_trk_band_3D?")
                                    (("1"
                                      (replace -2)
                                      (("1"
                                        (rewrite "cd3d_rewrite")
                                        (("1"
                                          (expand "Vtrk_3D" 2 1)
                                          (("1"
                                            (rewrite "vz_distr_sub")
                                            (("1"
                                              (expand "trk2v3" 2 1)
                                              (("1"
                                                (expand "Vtrk_3D" 2 1)
                                                (("1"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("1"
                                                    (expand
                                                     "trk2v3"
                                                     2
                                                     1)
                                                    (("1"
                                                      (case
                                                       "Vtrk_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "trk_green_bands[D,BB,TT,gsmin,gsmax]")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "s"
                                                             "vi"
                                                             "vo")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "i!1")
                                                                (("1"
                                                                  (expand
                                                                   "red_trk_band?")
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (expand
                                                                       "Vtrk"
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "Vtrk_3D"
                                                                         2
                                                                         1)
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_sub")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vect2_trk2v3")
                                                                            (("1"
                                                                              (expand
                                                                               "trk2v2"
                                                                               -1
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "trk2v2"
                                                                                 2
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "cd2d?")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (split
                                                                                       +)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (case
                                                                                               "x!1 >= 0 AND x!1 <2*pi")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x!1")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "cd3d")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "cd3d_rewrite")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd2d")
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "cd2d?")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Vtrk_3D")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "Vtrk")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vz_distr_sub")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "vect2_sub")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vect2_trk2v3")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "trk2v3")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "trk2v2")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "omega_vv")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "tau_vv")
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (ground)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide-all-but
                                                                                                           1)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "Vtrk_3D")
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "vz_distr_sub")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "trk2v3")
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "trk_fseq?")
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "i!1")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i!1+1")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "trk_fseq?")
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "i!1")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!1+1")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "i!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "omega_vv"
                                                                                             (-1
                                                                                              +))
                                                                                            (("2"
                                                                                              (expand
                                                                                               "tau_vv")
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (expand
                                                                                             "omega_vv"
                                                                                             (-1
                                                                                              +))
                                                                                            (("3"
                                                                                              (expand
                                                                                               "tau_vv")
                                                                                              (("3"
                                                                                                (lift-if)
                                                                                                (("3"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("2"
                                                                                              (split
                                                                                               -3)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "omega_vv"
                                                                                                     (-1
                                                                                                      +))
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "tau_vv")
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "x!1 >= 0 AND x!1 <2*pi")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd3d_rewrite")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "cd2d")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "cd2d?")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vtrk_3D")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "Vtrk")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vz_distr_sub")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vect2_sub")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "vect2_trk2v3")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "trk2v3")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "trk2v2")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "omega_vv")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "tau_vv")
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "Vtrk_3D")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "vz_distr_sub")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "trk2v3")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "trk_fseq?")
                                                                                                        (("2"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "i!1")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "i!1+1")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "i!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (typepred
                                                                                   "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "trk_fseq?")
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "i!1+1")
                                                                                        (("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "Vtrk_3D")
                                                        (("2"
                                                          (rewrite
                                                           "vz_distr_sub")
                                                          (("2"
                                                            (expand
                                                             "trk2v3")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (typepred
                                     "trk_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                    (("2"
                                      (expand "trk_fseq?")
                                      (("2"
                                        (inst-cp - "i!1")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst - "i!1+1")
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (typepred "i!1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "i!1")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (hide 3)
                            (("2" (split)
                              (("1"
                                (flatten)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (rewrite "cd3d")
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (case
                                         "Vtrk_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (expand "Vtrk_3D")
                                          (("2"
                                            (rewrite "vz_distr_sub")
                                            (("2"
                                              (expand "trk2v3")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (expand "red_trk_band_3D?")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (name
                                         "mp"
                                         "(add(0, add(2 * pi, empty_seq))`seq(1 + i!1) +
                      add(0, add(2 * pi, empty_seq))`seq(i!1))
                     / 2")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (rewrite "cd3d_rewrite")
                                            (("2"
                                              (case
                                               "Vtrk_3D(vo, vi)(mp)`z = vo`z-vi`z")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (expand "Vtrk_3D")
                                                (("2"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("2"
                                                    (expand "trk2v3")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split)
              (("1" (flatten)
                (("1" (skosimp*)
                  (("1" (expand "conflict_3D?")
                    (("1" (skosimp*)
                      (("1" (expand "Vtrk_3D")
                        (("1" (rewrite "vz_distr_sub")
                          (("1" (expand "trk2v3")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "red_trk_band_3D?")
                  (("2" (hide -1)
                    (("2" (rewrite "cd3d" :dir rl)
                      (("2" (expand "conflict_3D?")
                        (("2" (skosimp*)
                          (("2" (expand "Vtrk_3D")
                            (("2" (rewrite "vz_distr_sub")
                              (("2"
                                (expand "trk2v3")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (trk_bands const-decl "{fs: (trk_fseq?) | increasing?(fs)}"
     bands_2D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (increasing? const-decl "bool" sort_fseq "structures/")
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (vect2_trk2v3 formula-decl nil bands_util nil)
    (trk2v2_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (trk2v2_Nzv application-judgement "Nz_vect2" bands_util nil)
    (cd2d formula-decl nil cd2d nil) (cd3d formula-decl nil cd3d nil)
    (Vtrk_continuous application-judgement "continuous_rv_fun"
     trk_bands_2D nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (Vtrk const-decl "Vect2" bands_util nil)
    (red_trk_band? const-decl "bool" bands_2D nil)
    (trk_green_bands formula-decl nil bands_2D nil)
    (trk2v3_Nzv application-judgement "Nzv2_vect3" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (trk_only? const-decl "bool" definitions nil)
    (trk2v3 const-decl
     "(LAMBDA (vo2: Vect3): trk_only?(vect2(vo3))(vect2(vo2)) AND vo3`z = vo2`z)"
     bands_util nil)
    (cd3d_rewrite formula-decl nil cd3d nil)
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Vtrk_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (nz_norm_gt_0 application-judgement "posreal" vectors_2D
     "vectors/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (tau_vv const-decl "real" cd2d nil)
    (omega_vv const-decl "real" cd2d nil)
    (cd2d? const-decl "bool" cd2d nil)
    (trk2v2 const-decl "(trk_only?(vo2))" bands_util nil))
   nil))
 (trk_bands_equivalence_TCC1 0
  (trk_bands_equivalence_TCC1-1 nil 3482238747
   ("" (subtype-tcc) nil nil)
   ((pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def
     "trig/"))
   nil (trk_bands_equivalence subtype "bands_3D.i" "nat")))
 (trk_bands_equivalence 0
  (trk_bands_equivalence-1 nil 3482238747
   ("" (skeep)
    (("" (name "trkbb" "trk_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (skeep)
            ((""
              (name "mmax"
                    "finite_sets@finite_sets_minmax[naturalnumbers.nat,restrict[[real, real], [nat, nat], boolean].restrict(reals.<=)].max")
              ((""
                (name "ii"
                      "mmax({ij: nat | ij<=trkbb`length-1 AND trkbb`seq(ij) < x})")
                (("1" (case "ii <= trkbb`length-2")
                  (("1"
                    (case "trkbb`seq(ii) < x AND y < trkbb`seq(ii+1)")
                    (("1" (flatten)
                      (("1"
                        (case "(conflict_3D?(s, Vtrk_3D(vo, vi)(x)) OR
                                                                           conflict_3D?(s, Vtrk_3D(vo, vi)(y)))")
                        (("1"
                          (case "red_trk_band_3D?(s,vo,vi,trkbb)(ii)")
                          (("1" (lemma "trk_red_bands_3D")
                            (("1" (inst - "s" "vi" "vo")
                              (("1"
                                (replace -9)
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst - "ii")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -3)
                                        (("1"
                                          (assert)
                                          (("1" (inst - "y") nil nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2" (inst - "x") nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma "trk_green_bands_3D")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst - "ii")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (split -)
                                        (("1" (inst - "x") nil nil)
                                         ("2" (inst - "y") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (hide 2)
                            (("3" (hide -1)
                              (("3"
                                (lemma "trk_bands_last")
                                (("3"
                                  (inst?)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -) (("2" (ground) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (typepred "ii")
                        (("2" (inst - "ii+1")
                          (("2" (inst - "ii+1")
                            (("1" (assert) (("1" (grind) nil nil)) nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "trk_bands_last")
                    (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
                  nil)
                 ("2" (split +)
                  (("1" (expand "is_finite")
                    (("1"
                      (inst + "trkbb`length" "LAMBDA (iz: ({ij: nat |
                     ij <= trkbb`length - 1 AND trkbb`seq(ij) < x})): iz")
                      (("1" (expand "injective?")
                        (("1" (skosimp*) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (expand "empty?")
                    (("2" (inst - "0")
                      (("2" (expand "member")
                        (("2" (lemma "trk_bands_3D_not_empty")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (inst - "0")
                                (("2"
                                  (assert)
                                  (("2"
                                    (lemma "trk_bands_first")
                                    (("2"
                                      (inst?)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((trk_bands_3D const-decl
     "{fs: (trk_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (trk_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (pi_bound name-judgement
     "{r: posreal | pi_lb_new <= r AND r <= pi_ub_new}" pi_def "trig/")
    (total_order_restrict application-judgement "(total_order?[S])"
     restrict_order_props nil)
    (dichotomous_restrict application-judgement "(dichotomous?[S])"
     restrict_order_props nil)
    (partial_order_restrict application-judgement "(partial_order?[S])"
     restrict_order_props nil)
    (preorder_restrict application-judgement "(preorder?[S])"
     restrict_order_props nil)
    (transitive_restrict application-judgement "(transitive?[S])"
     restrict_order_props nil)
    (antisymmetric_restrict application-judgement "(antisymmetric?[S])"
     restrict_order_props nil)
    (reflexive_restrict application-judgement "(reflexive?[S])"
     restrict_order_props nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (restrict const-decl "R" restrict nil)
    (max const-decl
         "{a: T | SS(a) AND (FORALL (x: T): SS(x) IMPLIES x <= a)}"
         finite_sets_minmax "finite_sets/")
    (below type-eq-decl nil nat_types nil)
    (injective? const-decl "bool" functions nil)
    (trk_bands_3D_not_empty formula-decl nil bands_3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (trk_bands_first formula-decl nil bands_3D nil)
    (member const-decl "bool" sets nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil) nil
    nil nil (subrange type-eq-decl nil integers nil)
    (red_trk_band_3D? const-decl "bool" bands_3D nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (trk_red_bands_3D formula-decl nil bands_3D nil)
    (trk_green_bands_3D formula-decl nil bands_3D nil)
    (trk_bands_last formula-decl nil bands_3D nil)
    (Vtrk_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    nil (Vector type-eq-decl nil vectors_3D "vectors/")
    (conflict_3D? const-decl "bool" cd3d nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (< const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   shostak))
 (gs_red_bands_3D 0
  (gs_red_bands_3D-2 "" 3504811580
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "gs_bands_3D(s,vo,vi) = gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(gs_bands[D, B, T, gsmin, gsmax]
                                                                                           (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                           (1 + i!1)
                                                                                        +
                                                                                        gs_bands[D, B, T, gsmin, gsmax]
                                                                                            (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                            (i!1))
                                                                                       / 2")
                    (("1" (case "mp >= gsmin")
                      (("1" (expand "red_gs_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vgs_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "gs2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "gs_red_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_gs_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vgs" -1 1)
                                                (("1"
                                                  (expand "Vgs_3D" 1 1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_gs2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (case
                                                                   "x!1 >=gsmin AND x!1 < gsmax")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vgs_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vgs_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "gs2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vgs")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vgs_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_gs2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "gs_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= gsmin AND x!1 <gsmax")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_3D?")
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_2D?")
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "t!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Vgs_3D")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vect2_sub")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_gs2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Vgs")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "gs_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                        (("2" (expand "gs_fseq?")
                          (("2" (inst-cp - "i!1")
                            (("2" (inst - "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "gs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "gs_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (assert)
                          (("1" (skosimp*)
                            (("1"
                              (name "mp"
                                    "(gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                         (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                         (1 + i!1)
                                                                                                      +
                                                                                                      gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                          (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                          (i!1))
                                                                                                     / 2")
                              (("1"
                                (case "mp >= gsmin")
                                (("1"
                                  (expand "red_gs_band_3D?")
                                  (("1"
                                    (replace -2)
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (expand "Vgs_3D" 2 1)
                                        (("1"
                                          (rewrite "vz_distr_sub")
                                          (("1"
                                            (expand "gs2v3" 2 1)
                                            (("1"
                                              (expand "Vgs_3D" 2 1)
                                              (("1"
                                                (rewrite
                                                 "vz_distr_sub")
                                                (("1"
                                                  (expand "gs2v3" 2 1)
                                                  (("1"
                                                    (case
                                                     "Vgs_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "gs_red_bands[D,BB,TT,gsmin,gsmax]")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "s"
                                                           "vi"
                                                           "vo")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "i!1")
                                                              (("1"
                                                                (expand
                                                                 "red_gs_band?")
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (expand
                                                                     "Vgs"
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "Vgs_3D"
                                                                       2
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "vect2_sub")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_gs2v3")
                                                                          (("1"
                                                                            (expand
                                                                             "gs2v2"
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "gs2v2"
                                                                               2
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "cd2d?")
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         -2)
                                                                                        (("1"
                                                                                          (hide
                                                                                           (-2
                                                                                            -3))
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "cd3d")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "cd3d_rewrite")
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "x!1 >= gsmin AND x!1 <gsmax")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd2d")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Vgs")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Vgs_3D")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "vect2_sub")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vect2_gs2v3")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "gs2v2")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (case
                                                                                                                       "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "cd2d?")
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "omega_vv")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "tau_vv")
                                                                                                                                  (("1"
                                                                                                                                    (lift-if)
                                                                                                                                    (("1"
                                                                                                                                      (ground)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "Vgs_3D")
                                                                                                                        (("2"
                                                                                                                          (rewrite
                                                                                                                           "vz_distr_sub")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "gs2v3")
                                                                                                                            (("2"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "gs_fseq?")
                                                                                                          (("2"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "i!1")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "i!1+1")
                                                                                                              (("1"
                                                                                                                (flatten)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (flatten)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "i!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (flatten)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "omega_vv")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "tau_vv")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (split
                                                                                         -3)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (expand
                                                                                           "omega_vv"
                                                                                           (-1
                                                                                            +))
                                                                                          (("2"
                                                                                            (expand
                                                                                             "tau_vv")
                                                                                            (("2"
                                                                                              (lift-if)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("3"
                                                                                          (hide
                                                                                           -2)
                                                                                          (("3"
                                                                                            (skosimp*)
                                                                                            (("3"
                                                                                              (case
                                                                                               "x!1 >= gsmin AND x!1 <gsmax")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "x!1")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "cd3d")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d_rewrite")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd2d")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "cd2d?")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "Vgs_3D")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "Vgs")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "vz_distr_sub")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vect2_sub")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vect2_gs2v3")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "gs2v3")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "gs2v2")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "omega_vv")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "tau_vv")
                                                                                                                                  (("1"
                                                                                                                                    (lift-if)
                                                                                                                                    (("1"
                                                                                                                                      (ground)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (expand
                                                                                                             "Vgs_3D")
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "vz_distr_sub")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "gs2v3")
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "x!1")
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "gs_fseq?")
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "i!1")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "i!1+1")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "i!1")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "i!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "Vgs_3D")
                                                      (("2"
                                                        (rewrite
                                                         "vz_distr_sub")
                                                        (("2"
                                                          (expand
                                                           "gs2v3")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (typepred
                                   "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                  (("2"
                                    (expand "gs_fseq?")
                                    (("2"
                                      (inst-cp - "i!1")
                                      (("1"
                                        (inst - "i!1+1")
                                        (("1"
                                          (flatten)
                                          (("1" (assert) nil nil))
                                          nil)
                                         ("2"
                                          (typepred "i!1")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "i!1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (skosimp*)
                            (("2" (hide 3)
                              (("2"
                                (split)
                                (("1"
                                  (flatten)
                                  (("1"
                                    (hide 1)
                                    (("1"
                                      (expand "red_gs_band_3D?")
                                      (("1"
                                        (name
                                         "mp"
                                         "(structures@add(gsmin, structures@add(gsmax, empty_seq))`seq(1 + i!1) +
                                                                         structures@add(gsmin, structures@add(gsmax, empty_seq))`seq(i!1))
                                                                        / 2")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (case
                                             "Vgs_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                            (("1"
                                              (rewrite "cd3d_rewrite")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (expand "Vgs_3D")
                                              (("2"
                                                (rewrite
                                                 "vz_distr_sub")
                                                (("2"
                                                  (expand "gs2v3")
                                                  (("2"
                                                    (propax)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (flatten)
                                  (("2"
                                    (expand "red_gs_band_3D?")
                                    (("2"
                                      (name
                                       "mp"
                                       "(structures@add(gsmin, structures@add(gsmax, empty_seq))`seq(1 + i!1) +
                                                                         structures@add(gsmin, structures@add(gsmax, empty_seq))`seq(i!1))
                                                                        / 2")
                                      (("2"
                                        (inst - "mp")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (rewrite "cd3d")
                                            nil
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "add")
                                          (("2"
                                            (expand "insert")
                                            (("2"
                                              (expand "empty_seq")
                                              (("2"
                                                (case "i!1 = 0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (typepred "gsmax")
                                                    (("1"
                                                      (assert)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (typepred "i!1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand "add")
                                                      (("2"
                                                        (expand
                                                         "insert")
                                                        (("2"
                                                          (expand
                                                           "empty_seq")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (flatten)
            (("2" (skosimp*)
              (("2" (split)
                (("1" (flatten)
                  (("1" (hide 1)
                    (("1" (expand "red_gs_band_3D?")
                      (("1" (rewrite "cd3d" :dir rl)
                        (("1" (expand "conflict_3D?")
                          (("1" (skosimp*)
                            (("1" (expand "Vgs_3D" -1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "gs2v3")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (expand "red_gs_band_3D?")
                    (("2"
                      (name "mp" "(gs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                                                gs_bands_3D(s, vo, vi)`seq(i!1))
                                               / 2")
                      (("2" (replace -1)
                        (("2" (inst - "mp")
                          (("1" (rewrite "cd3d") nil nil)
                           ("2" (typepred "gs_bands_3D(s, vo, vi)")
                            (("2" (expand "increasing?")
                              (("2"
                                (inst - "i!1" "i!1+1")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (gs_bands const-decl "{fs: (gs_fseq?) | increasing?(fs)}" bands_2D
     nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (gs_bands_3D const-decl
     "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vect2_gs2v3 formula-decl nil bands_util nil)
    (gs2v2_continuous application-judgement "continuous_rv_fun"
     gs_bands_2D nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (conflict_2D? const-decl "bool" cd2d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (cd2d formula-decl nil cd2d nil) (cd3d formula-decl nil cd3d nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (Vgs const-decl "Vect2" gs_bands_2D nil)
    (red_gs_band? const-decl "bool" bands_2D nil)
    (gs_red_bands formula-decl nil bands_2D nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (gs2v3 const-decl "Vect3" bands_util nil)
    (cd3d_rewrite formula-decl nil cd3d nil)
    (Vector type-eq-decl nil vectors_3D "vectors/") nil
    (Vgs_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (red_gs_band_3D? const-decl "bool" bands_3D nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (subrange type-eq-decl nil integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil) nil nil
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (posreal_plus_nnreal_is_posreal application-judgement "posreal"
     real_types nil)
    (posreal_div_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (insert const-decl "fseq" fseqs_ops "structures/") nil nil
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (IF const-decl "[boolean, T, T -> T]" if_def nil) nil nil nil nil
    nil nil nil (tau_vv const-decl "real" cd2d nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (omega_vv const-decl "real" cd2d nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (cd2d? const-decl "bool" cd2d nil)
    (gs2v2 const-decl "Vect2" bands_util nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil))
   shostak)
  (gs_red_bands_3D-1 nil 3477740785
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "gs_bands_3D(s,vo,vi) = gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(gs_bands[D, B, T, gsmin, gsmax]
                                                                                           (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                           (1 + i!1)
                                                                                        +
                                                                                        gs_bands[D, B, T, gsmin, gsmax]
                                                                                            (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                            (i!1))
                                                                                       / 2")
                    (("1" (case "mp >= gsmin")
                      (("1" (expand "red_gs_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vgs_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "gs2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "gs_red_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_gs_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vgs" -1 1)
                                                (("1"
                                                  (expand "Vgs_3D" 1 1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_gs2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (case
                                                                   "x!1 >=gsmin AND x!1 < gsmax")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vgs_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vgs_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "gs2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vgs")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vgs_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_gs2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "gs_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= gsmin AND x!1 <gsmax")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_3D?")
                                                                        (("1"
                                                                          (skosimp*)
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_2D?")
                                                                            (("1"
                                                                              (inst
                                                                               +
                                                                               "t!1")
                                                                              (("1"
                                                                                (expand
                                                                                 "Vgs_3D")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vect2_sub")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_gs2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "Vgs")
                                                                                      (("1"
                                                                                        (propax)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "gs_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (typepred
                                                           "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                          (("2"
                                                            (expand
                                                             "gs_fseq?")
                                                            (("2"
                                                              (inst-cp
                                                               -
                                                               "i!1")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "i!1+1")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                        (("2" (expand "gs_fseq?")
                          (("2" (inst-cp - "i!1")
                            (("2" (inst - "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "gs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "gs_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (name
                                 "mp"
                                 "(gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                         (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                         (1 + i!1)
                                                                                                      +
                                                                                                      gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                          (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                          (i!1))
                                                                                                     / 2")
                                (("1"
                                  (case "mp >= gsmin")
                                  (("1"
                                    (expand "red_gs_band_3D?")
                                    (("1"
                                      (replace -2)
                                      (("1"
                                        (rewrite "cd3d_rewrite")
                                        (("1"
                                          (expand "Vgs_3D" 2 1)
                                          (("1"
                                            (rewrite "vz_distr_sub")
                                            (("1"
                                              (expand "gs2v3" 2 1)
                                              (("1"
                                                (expand "Vgs_3D" 2 1)
                                                (("1"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("1"
                                                    (expand
                                                     "gs2v3"
                                                     2
                                                     1)
                                                    (("1"
                                                      (case
                                                       "Vgs_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "gs_red_bands[D,BB,TT,gsmin,gsmax]")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "s"
                                                             "vi"
                                                             "vo")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "i!1")
                                                                (("1"
                                                                  (expand
                                                                   "red_gs_band?")
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (expand
                                                                       "Vgs"
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "Vgs_3D"
                                                                         2
                                                                         1)
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_sub")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vect2_gs2v3")
                                                                            (("1"
                                                                              (expand
                                                                               "gs2v2"
                                                                               -1
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "gs2v2"
                                                                                 2
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "cd2d?")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (split
                                                                                       +)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (split
                                                                                           -2)
                                                                                          (("1"
                                                                                            (hide
                                                                                             (-2
                                                                                              -3))
                                                                                            (("1"
                                                                                              (skosimp*)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "cd3d")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "cd3d_rewrite")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "x!1 >= gsmin AND x!1 <gsmax")
                                                                                                    (("1"
                                                                                                      (flatten)
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "x!1")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd2d")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Vgs")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "Vgs_3D")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vect2_sub")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "vect2_gs2v3")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "gs2v2")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (case
                                                                                                                         "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "cd2d?")
                                                                                                                          (("1"
                                                                                                                            (replace
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "omega_vv")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "tau_vv")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (expand
                                                                                                                           "Vgs_3D")
                                                                                                                          (("2"
                                                                                                                            (rewrite
                                                                                                                             "vz_distr_sub")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "gs2v3")
                                                                                                                              (("2"
                                                                                                                                (propax)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (typepred
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "gs_fseq?")
                                                                                                            (("2"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "i!1")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1+1")
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "i!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "i!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "omega_vv")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "tau_vv")
                                                                                                  (("2"
                                                                                                    (lift-if)
                                                                                                    (("2"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (split
                                                                                           -3)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (expand
                                                                                             "omega_vv"
                                                                                             (-1
                                                                                              +))
                                                                                            (("2"
                                                                                              (expand
                                                                                               "tau_vv")
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("3"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("3"
                                                                                              (skosimp*)
                                                                                              (("3"
                                                                                                (case
                                                                                                 "x!1 >= gsmin AND x!1 <gsmax")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!1")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d_rewrite")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd2d")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "cd2d?")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "Vgs_3D")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vgs")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vz_distr_sub")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vect2_sub")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vect2_gs2v3")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "gs2v3")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "gs2v2")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "omega_vv")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "tau_vv")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "Vgs_3D")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "vz_distr_sub")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "gs2v3")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "gs_fseq?")
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "i!1")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i!1+1")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                              (("2"
                                                                                (expand
                                                                                 "gs_fseq?")
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "i!1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "i!1+1")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "i!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "Vgs_3D")
                                                        (("2"
                                                          (rewrite
                                                           "vz_distr_sub")
                                                          (("2"
                                                            (expand
                                                             "gs2v3")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (typepred
                                     "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                    (("2"
                                      (expand "gs_fseq?")
                                      (("2"
                                        (inst-cp - "i!1")
                                        (("1"
                                          (inst - "i!1+1")
                                          (("1"
                                            (flatten)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (typepred "i!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "i!1")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (lift-if)
                          (("2" (assert)
                            (("2" (skosimp*)
                              (("2"
                                (hide 3)
                                (("2"
                                  (split)
                                  (("1"
                                    (flatten)
                                    (("1"
                                      (hide 1)
                                      (("1"
                                        (expand "red_gs_band_3D?")
                                        (("1"
                                          (name
                                           "mp"
                                           "(add(gsmin, add(gsmax, empty_seq))`seq(1 + i!1) +
                                                        add(gsmin, add(gsmax, empty_seq))`seq(i!1))
                                                       / 2")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (case
                                               "Vgs_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                              (("1"
                                                (rewrite
                                                 "cd3d_rewrite")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "Vgs_3D")
                                                (("2"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("2"
                                                    (expand "gs2v3")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (flatten)
                                    (("2"
                                      (expand "red_gs_band_3D?")
                                      (("2"
                                        (name
                                         "mp"
                                         "(add(gsmin, add(gsmax, empty_seq))`seq(1 + i!1) +
                                                        add(gsmin, add(gsmax, empty_seq))`seq(i!1))
                                                       / 2")
                                        (("2"
                                          (inst - "mp")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (rewrite "cd3d")
                                              nil
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "add")
                                            (("2"
                                              (expand "insert")
                                              (("2"
                                                (expand "empty_seq")
                                                (("2"
                                                  (case "i!1 = 0")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (typepred
                                                       "gsmax")
                                                      (("1"
                                                        (assert)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "i!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "add")
                                                        (("2"
                                                          (expand
                                                           "insert")
                                                          (("2"
                                                            (expand
                                                             "empty_seq")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (flatten)
            (("2" (skosimp*)
              (("2" (split)
                (("1" (flatten)
                  (("1" (hide 1)
                    (("1" (expand "red_gs_band_3D?")
                      (("1" (rewrite "cd3d" :dir rl)
                        (("1" (expand "conflict_3D?")
                          (("1" (skosimp*)
                            (("1" (expand "Vgs_3D" -1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "gs2v3")
                                  (("1" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (expand "red_gs_band_3D?")
                    (("2"
                      (name "mp" "(gs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                                                gs_bands_3D(s, vo, vi)`seq(i!1))
                                               / 2")
                      (("2" (replace -1)
                        (("2" (inst - "mp")
                          (("1" (rewrite "cd3d") nil nil)
                           ("2" (typepred "gs_bands_3D(s, vo, vi)")
                            (("2" (expand "increasing?")
                              (("2"
                                (inst - "i!1" "i!1+1")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((gs2v2 const-decl "Vect2" bands_util nil)
    (cd2d? const-decl "bool" cd2d nil)
    (omega_vv const-decl "real" cd2d nil)
    (tau_vv const-decl "real" cd2d nil)
    (add const-decl "fseq" fseqs_ops "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (Sign type-eq-decl nil sign "reals/")
    (Theta_H const-decl "real" vertical nil)
    (Vgs_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (cd3d_rewrite formula-decl nil cd3d nil)
    (gs2v3 const-decl "Vect3" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (gs_red_bands formula-decl nil bands_2D nil)
    (red_gs_band? const-decl "bool" bands_2D nil)
    (Vgs const-decl "Vect2" gs_bands_2D nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (cd3d formula-decl nil cd3d nil) (cd2d formula-decl nil cd2d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (Lookahead type-eq-decl nil Lookahead nil)
    (gs2v2_continuous application-judgement "continuous_rv_fun"
     gs_bands_2D nil)
    (vect2_gs2v3 formula-decl nil bands_util nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (barray type-eq-decl nil fseqs "structures/")
    (fseq type-eq-decl nil fseqs "structures/")
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (gs_bands const-decl "{fs: (gs_fseq?) | increasing?(fs)}" bands_2D
     nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil))
   nil))
 (gs_green_bands_3D 0
  (gs_green_bands_3D-2 "" 3504812017
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "gs_bands_3D(s,vo,vi) = gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(gs_bands[D, B, T, gsmin, gsmax]
                                                                                                      (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                      (1 + i!1)
                                                                                                   +
                                                                                                   gs_bands[D, B, T, gsmin, gsmax]
                                                                                                       (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                       (i!1))
                                                                                                  / 2")
                    (("1" (case "mp >= gsmin")
                      (("1" (expand "red_gs_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vgs_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "gs2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "gs_green_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_gs_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vgs" -1 1)
                                                (("1"
                                                  (expand "Vgs_3D" 1 1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_gs2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("1"
                                                                    (expand
                                                                     "conflict_3D?")
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_2D?")
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "t!1")
                                                                          (("1"
                                                                            (expand
                                                                             "Vgs_3D")
                                                                            (("1"
                                                                              (rewrite
                                                                               "vect2_sub")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "vect2_gs2v3")
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vgs")
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "gs_fseq?")
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       -1
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= gsmin AND x!1 <gsmax")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vgs_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vgs_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "gs2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vgs")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vgs_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_gs2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "gs_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                        (("2" (expand "gs_fseq?")
                          (("2" (inst-cp - "i!1")
                            (("2" (inst - "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "gs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "gs_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (assert)
                          (("1" (skosimp*)
                            (("1"
                              (name "mp"
                                    "(gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                        (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                        (1 + i!1)
                                                                                                                     +
                                                                                                                     gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                         (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                         (i!1))
                                                                                                                    / 2")
                              (("1"
                                (case "mp >= gsmin")
                                (("1"
                                  (expand "red_gs_band_3D?")
                                  (("1"
                                    (replace -2)
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (expand "Vgs_3D" 2 1)
                                        (("1"
                                          (rewrite "vz_distr_sub")
                                          (("1"
                                            (expand "gs2v3" 2 1)
                                            (("1"
                                              (expand "Vgs_3D" 2 1)
                                              (("1"
                                                (rewrite
                                                 "vz_distr_sub")
                                                (("1"
                                                  (expand "gs2v3" 2 1)
                                                  (("1"
                                                    (case
                                                     "Vgs_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "gs_green_bands[D,BB,TT,gsmin,gsmax]")
                                                        (("1"
                                                          (inst
                                                           -
                                                           "s"
                                                           "vi"
                                                           "vo")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "i!1")
                                                              (("1"
                                                                (expand
                                                                 "red_gs_band?")
                                                                (("1"
                                                                  (replace
                                                                   -4)
                                                                  (("1"
                                                                    (expand
                                                                     "Vgs"
                                                                     -1
                                                                     1)
                                                                    (("1"
                                                                      (expand
                                                                       "Vgs_3D"
                                                                       2
                                                                       1)
                                                                      (("1"
                                                                        (rewrite
                                                                         "vect2_sub")
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_gs2v3")
                                                                          (("1"
                                                                            (expand
                                                                             "gs2v2"
                                                                             -1
                                                                             1)
                                                                            (("1"
                                                                              (expand
                                                                               "gs2v2"
                                                                               2
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "cd2d?")
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (split
                                                                                     +)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (split
                                                                                         -1)
                                                                                        (("1"
                                                                                          (skosimp*)
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "x!1")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "cd3d")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "cd3d_rewrite")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "cd2d")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "cd2d?")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "Vgs_3D")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Vgs")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "vz_distr_sub")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "vect2_sub")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vect2_gs2v3")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "gs2v3")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "gs2v2")
                                                                                                                    (("1"
                                                                                                                      (flatten)
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "omega_vv")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "tau_vv")
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   (-1
                                                                                                                    -2
                                                                                                                    -3))
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "x!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (typepred
                                                                                                                         "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "gs_fseq?")
                                                                                                                          (("2"
                                                                                                                            (inst-cp
                                                                                                                             -
                                                                                                                             "i!1")
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "i!1+1")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (typepred
                                                                                                                                 "i!1")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (typepred
                                                                                                                               "i!1")
                                                                                                                              (("2"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (expand
                                                                                                       "Vgs_3D")
                                                                                                      (("2"
                                                                                                        (rewrite
                                                                                                         "vz_distr_sub")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "gs2v3")
                                                                                                          (("2"
                                                                                                            (propax)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (typepred
                                                                                               "i!1")
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil)
                                                                                         ("3"
                                                                                          (expand
                                                                                           "omega_vv"
                                                                                           (-1
                                                                                            +))
                                                                                          (("3"
                                                                                            (expand
                                                                                             "tau_vv")
                                                                                            (("3"
                                                                                              (lift-if)
                                                                                              (("3"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (skosimp*)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -3)
                                                                                          (("2"
                                                                                            (split
                                                                                             -3)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "omega_vv"
                                                                                                   (-1
                                                                                                    +))
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "tau_vv")
                                                                                                    (("2"
                                                                                                      (lift-if)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (case
                                                                                                 "x!1 >= gsmin AND x!1 <gsmax")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x!1")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d_rewrite")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd2d")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "cd2d?")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "Vgs_3D")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vgs")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vz_distr_sub")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vect2_sub")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vect2_gs2v3")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "gs2v3")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "gs2v2")
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "omega_vv")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "tau_vv")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (expand
                                                                                                               "Vgs_3D")
                                                                                                              (("2"
                                                                                                                (rewrite
                                                                                                                 "vz_distr_sub")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "gs2v3")
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (typepred
                                                                                                   "x!1")
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "gs_fseq?")
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "i!1")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i!1+1")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "i!1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (typepred
                                                                 "i!1")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (expand "Vgs_3D")
                                                      (("2"
                                                        (rewrite
                                                         "vz_distr_sub")
                                                        (("2"
                                                          (expand
                                                           "gs2v3")
                                                          (("2"
                                                            (propax)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2"
                                  (typepred
                                   "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                  (("2"
                                    (expand "gs_fseq?")
                                    (("2"
                                      (inst-cp - "i!1")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (inst - "i!1+1")
                                          (("1"
                                            (flatten)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (typepred "i!1")
                                            (("2" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "i!1")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (hide 3)
                            (("2" (split)
                              (("1"
                                (flatten)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (rewrite "cd3d")
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (case
                                         "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (expand "Vgs_3D")
                                          (("2"
                                            (rewrite "vz_distr_sub")
                                            (("2"
                                              (expand "gs2v3")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (expand "red_gs_band_3D?")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (name
                                         "mp"
                                         "(structures@add(gsmin, structures@add(gsmax, empty_seq))`seq(1 + i!1) +
                                                        structures@add(gsmin, structures@add(gsmax, empty_seq))`seq(i!1))
                                                       / 2")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (rewrite "cd3d_rewrite")
                                            (("2"
                                              (case
                                               "Vgs_3D(vo, vi)(mp)`z = vo`z-vi`z")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (expand "Vgs_3D")
                                                (("2"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("2"
                                                    (expand "gs2v3")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split)
              (("1" (flatten)
                (("1" (skosimp*)
                  (("1" (expand "conflict_3D?")
                    (("1" (skosimp*)
                      (("1" (expand "Vgs_3D")
                        (("1" (rewrite "vz_distr_sub")
                          (("1" (expand "gs2v3")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "red_gs_band_3D?")
                  (("2" (hide -1)
                    (("2" (rewrite "cd3d" :dir rl)
                      (("2" (expand "conflict_3D?")
                        (("2" (skosimp*)
                          (("2" (expand "Vgs_3D")
                            (("2" (rewrite "vz_distr_sub")
                              (("2"
                                (expand "gs2v3")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((H formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs
         nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (gs_bands const-decl "{fs: (gs_fseq?) | increasing?(fs)}" bands_2D
     nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (gs_bands_3D const-decl
     "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vect2_gs2v3 formula-decl nil bands_util nil)
    (gs2v2_continuous application-judgement "continuous_rv_fun"
     gs_bands_2D nil)
    (cd2d formula-decl nil cd2d nil) (cd3d formula-decl nil cd3d nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (conflict_2D? const-decl "bool" cd2d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (Vgs const-decl "Vect2" gs_bands_2D nil)
    (red_gs_band? const-decl "bool" bands_2D nil)
    (gs_green_bands formula-decl nil bands_2D nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (gs2v3 const-decl "Vect3" bands_util nil)
    (cd3d_rewrite formula-decl nil cd3d nil)
    (Vector type-eq-decl nil vectors_3D "vectors/") nil
    (Vgs_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (red_gs_band_3D? const-decl "bool" bands_3D nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (subrange type-eq-decl nil integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Theta_H const-decl "real" vertical nil)
    (Sign type-eq-decl nil sign "reals/")
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (nzreal nonempty-type-eq-decl nil reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (IF const-decl "[boolean, T, T -> T]" if_def nil) nil nil nil nil
    nil nil
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (omega_vv const-decl "real" cd2d nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal_plus_nnreal_is_nnreal application-judgement "nnreal"
     real_types nil)
    (tau_vv const-decl "real" cd2d nil) nil
    (cd2d? const-decl "bool" cd2d nil)
    (gs2v2 const-decl "Vect2" bands_util nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil))
   shostak)
  (gs_green_bands_3D-1 nil 3477741542
   ("" (skeep)
    (("" (case "vo`z = vi`z and abs(s`z)<H")
      (("1" (flatten)
        (("1"
          (case "gs_bands_3D(s,vo,vi) = gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp" "(gs_bands[D, B, T, gsmin, gsmax]
                                                                                                      (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                      (1 + i!1)
                                                                                                   +
                                                                                                   gs_bands[D, B, T, gsmin, gsmax]
                                                                                                       (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                       (i!1))
                                                                                                  / 2")
                    (("1" (case "mp >= gsmin")
                      (("1" (expand "red_gs_band_3D?")
                        (("1" (replace -2)
                          (("1" (rewrite "cd3d_rewrite")
                            (("1" (expand "Vgs_3D" 1 1)
                              (("1"
                                (rewrite "vz_distr_sub")
                                (("1"
                                  (expand "gs2v3" 1 1)
                                  (("1"
                                    (lemma
                                     "gs_green_bands[D,B,T,gsmin,gsmax]")
                                    (("1"
                                      (inst - "s" "vi" "vo")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst - "i!1")
                                          (("1"
                                            (expand "red_gs_band?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (expand "Vgs" -1 1)
                                                (("1"
                                                  (expand "Vgs_3D" 1 1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_gs2v3")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (split)
                                                            (("1"
                                                              (flatten)
                                                              (("1"
                                                                (skosimp*)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("1"
                                                                    (expand
                                                                     "conflict_3D?")
                                                                    (("1"
                                                                      (skosimp*)
                                                                      (("1"
                                                                        (expand
                                                                         "conflict_2D?")
                                                                        (("1"
                                                                          (inst
                                                                           +
                                                                           "t!1")
                                                                          (("1"
                                                                            (expand
                                                                             "Vgs_3D")
                                                                            (("1"
                                                                              (rewrite
                                                                               "vect2_sub")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "vect2_gs2v3")
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vgs")
                                                                                  (("1"
                                                                                    (propax)
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (typepred
                                                                                   "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "gs_fseq?")
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       -1
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (flatten)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "i!1+1")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (flatten)
                                                              (("2"
                                                                (skosimp*)
                                                                (("2"
                                                                  (case
                                                                   "x!1 >= gsmin AND x!1 <gsmax")
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "x!1")
                                                                      (("1"
                                                                        (rewrite
                                                                         "cd3d")
                                                                        (("1"
                                                                          (lemma
                                                                           "cd3d_rewrite")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "s"
                                                                             "Vgs_3D(vo,vi)(x!1)")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vgs_3D"
                                                                                   1
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "gs2v3"
                                                                                       1
                                                                                       1)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "cd2d"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "Vgs")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "Vgs_3D")
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "vect2_sub")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_gs2v3")
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (typepred
                                                                     "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                                    (("2"
                                                                      (expand
                                                                       "gs_fseq?")
                                                                      (("2"
                                                                        (inst-cp
                                                                         -1
                                                                         "i!1")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "i!1+1")
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (typepred
                                                         "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                                                        (("2"
                                                          (expand
                                                           "gs_fseq?")
                                                          (("2"
                                                            (inst-cp
                                                             -
                                                             "i!1")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "i!1+1")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "gs_bands[D,B,T,gsmin,gsmax](s,vo,vi)")
                        (("2" (expand "gs_fseq?")
                          (("2" (inst-cp - "i!1")
                            (("2" (inst - "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "gs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "vo`z /= vi`z")
        (("1" (flatten)
          (("1" (expand "gs_bands_3D" :assert? none)
            (("1" (name "BB" "max(Theta_H(s`z,vo`z-vi`z,Entry),B)")
              (("1" (name "TT" "min(Theta_H(s`z,vo`z-vi`z,Exit),T)")
                (("1" (replace -1)
                  (("1" (replace -2)
                    (("1" (assert)
                      (("1" (case "BB<TT")
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (skosimp*)
                              (("1"
                                (name
                                 "mp"
                                 "(gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                        (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                        (1 + i!1)
                                                                                                                     +
                                                                                                                     gs_bands[D, BB, TT, gsmin, gsmax]
                                                                                                                         (vect2(s), vect2(vo), vect2(vi))`seq
                                                                                                                         (i!1))
                                                                                                                    / 2")
                                (("1"
                                  (case "mp >= gsmin")
                                  (("1"
                                    (expand "red_gs_band_3D?")
                                    (("1"
                                      (replace -2)
                                      (("1"
                                        (rewrite "cd3d_rewrite")
                                        (("1"
                                          (expand "Vgs_3D" 2 1)
                                          (("1"
                                            (rewrite "vz_distr_sub")
                                            (("1"
                                              (expand "gs2v3" 2 1)
                                              (("1"
                                                (expand "Vgs_3D" 2 1)
                                                (("1"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("1"
                                                    (expand
                                                     "gs2v3"
                                                     2
                                                     1)
                                                    (("1"
                                                      (case
                                                       "Vgs_3D(vo,vi)(mp)`z = vo`z-vi`z")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lemma
                                                           "gs_green_bands[D,BB,TT,gsmin,gsmax]")
                                                          (("1"
                                                            (inst
                                                             -
                                                             "s"
                                                             "vi"
                                                             "vo")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "i!1")
                                                                (("1"
                                                                  (expand
                                                                   "red_gs_band?")
                                                                  (("1"
                                                                    (replace
                                                                     -4)
                                                                    (("1"
                                                                      (expand
                                                                       "Vgs"
                                                                       -1
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "Vgs_3D"
                                                                         2
                                                                         1)
                                                                        (("1"
                                                                          (rewrite
                                                                           "vect2_sub")
                                                                          (("1"
                                                                            (rewrite
                                                                             "vect2_gs2v3")
                                                                            (("1"
                                                                              (expand
                                                                               "gs2v2"
                                                                               -1
                                                                               1)
                                                                              (("1"
                                                                                (expand
                                                                                 "gs2v2"
                                                                                 2
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "cd2d?")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (split
                                                                                       +)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (split
                                                                                           -1)
                                                                                          (("1"
                                                                                            (skosimp*)
                                                                                            (("1"
                                                                                              (inst
                                                                                               -
                                                                                               "x!1")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "cd3d")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "cd3d_rewrite")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "cd2d")
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "cd2d?")
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "Vgs_3D")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "Vgs")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "vz_distr_sub")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "vect2_sub")
                                                                                                                (("1"
                                                                                                                  (rewrite
                                                                                                                   "vect2_gs2v3")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "gs2v3")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "gs2v2")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "omega_vv")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "tau_vv")
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (ground)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (hide
                                                                                                                     (-1
                                                                                                                      -2
                                                                                                                      -3))
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "x!1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (typepred
                                                                                                                           "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "gs_fseq?")
                                                                                                                            (("2"
                                                                                                                              (inst-cp
                                                                                                                               -
                                                                                                                               "i!1")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "i!1+1")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (typepred
                                                                                                                                   "i!1")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (typepred
                                                                                                                                 "i!1")
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (expand
                                                                                                         "Vgs_3D")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "vz_distr_sub")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "gs2v3")
                                                                                                            (("2"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (typepred
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (typepred
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("3"
                                                                                            (expand
                                                                                             "omega_vv"
                                                                                             (-1
                                                                                              +))
                                                                                            (("3"
                                                                                              (expand
                                                                                               "tau_vv")
                                                                                              (("3"
                                                                                                (lift-if)
                                                                                                (("3"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -3)
                                                                                            (("2"
                                                                                              (split
                                                                                               -3)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "omega_vv"
                                                                                                     (-1
                                                                                                      +))
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "tau_vv")
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (case
                                                                                                   "x!1 >= gsmin AND x!1 <gsmax")
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "x!1")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd3d_rewrite")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "cd2d")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "cd2d?")
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vgs_3D")
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "Vgs")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vz_distr_sub")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vect2_sub")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "vect2_gs2v3")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "gs2v3")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "gs2v2")
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "omega_vv")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "tau_vv")
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "Vgs_3D")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "vz_distr_sub")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "gs2v3")
                                                                                                                    (("2"
                                                                                                                      (propax)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (typepred
                                                                                                     "x!1")
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "gs_fseq?")
                                                                                                        (("2"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "i!1")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "i!1+1")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "i!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "i!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                                                              (("2"
                                                                                (expand
                                                                                 "gs_fseq?")
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "i!1")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "i!1+1")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "i!1")
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (typepred
                                                                                     "i!1")
                                                                                    (("2"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (typepred
                                                                   "i!1")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand
                                                         "Vgs_3D")
                                                        (("2"
                                                          (rewrite
                                                           "vz_distr_sub")
                                                          (("2"
                                                            (expand
                                                             "gs2v3")
                                                            (("2"
                                                              (propax)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (typepred
                                     "gs_bands[D,BB,TT,gsmin,gsmax](s,vo,vi)")
                                    (("2"
                                      (expand "gs_fseq?")
                                      (("2"
                                        (inst-cp - "i!1")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (inst - "i!1+1")
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (typepred "i!1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred "i!1")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (skosimp*)
                          (("2" (hide 3)
                            (("2" (split)
                              (("1"
                                (flatten)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (rewrite "cd3d")
                                    (("1"
                                      (rewrite "cd3d_rewrite")
                                      (("1"
                                        (case
                                         "Vgs_3D(vo, vi)(x!1)`z = vo`z-vi`z")
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (expand "Vgs_3D")
                                          (("2"
                                            (rewrite "vz_distr_sub")
                                            (("2"
                                              (expand "gs2v3")
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (flatten)
                                (("2"
                                  (hide -1)
                                  (("2"
                                    (expand "red_gs_band_3D?")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (name
                                         "mp"
                                         "(add(gsmin, add(gsmax, empty_seq))`seq(1 + i!1) +
                                       add(gsmin, add(gsmax, empty_seq))`seq(i!1))
                                      / 2")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (rewrite "cd3d_rewrite")
                                            (("2"
                                              (case
                                               "Vgs_3D(vo, vi)(mp)`z = vo`z-vi`z")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (expand "Vgs_3D")
                                                (("2"
                                                  (rewrite
                                                   "vz_distr_sub")
                                                  (("2"
                                                    (expand "gs2v3")
                                                    (("2"
                                                      (propax)
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split)
              (("1" (flatten)
                (("1" (skosimp*)
                  (("1" (expand "conflict_3D?")
                    (("1" (skosimp*)
                      (("1" (expand "Vgs_3D")
                        (("1" (rewrite "vz_distr_sub")
                          (("1" (expand "gs2v3")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "red_gs_band_3D?")
                  (("2" (hide -1)
                    (("2" (rewrite "cd3d" :dir rl)
                      (("2" (expand "conflict_3D?")
                        (("2" (skosimp*)
                          (("2" (expand "Vgs_3D")
                            (("2" (rewrite "vz_distr_sub")
                              (("2"
                                (expand "gs2v3")
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((gs2v2 const-decl "Vect2" bands_util nil)
    (cd2d? const-decl "bool" cd2d nil)
    (tau_vv const-decl "real" cd2d nil)
    (omega_vv const-decl "real" cd2d nil)
    (add const-decl "fseq" fseqs_ops "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (Sign type-eq-decl nil sign "reals/")
    (Theta_H const-decl "real" vertical nil)
    (Vgs_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (cd3d_rewrite formula-decl nil cd3d nil)
    (gs2v3 const-decl "Vect3" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (gs_green_bands formula-decl nil bands_2D nil)
    (red_gs_band? const-decl "bool" bands_2D nil)
    (Vgs const-decl "Vect2" gs_bands_2D nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (conflict_3D? const-decl "bool" cd3d nil)
    (conflict_2D? const-decl "bool" cd2d nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (Lookahead type-eq-decl nil Lookahead nil)
    (cd3d formula-decl nil cd3d nil) (cd2d formula-decl nil cd2d nil)
    (gs2v2_continuous application-judgement "continuous_rv_fun"
     gs_bands_2D nil)
    (vect2_gs2v3 formula-decl nil bands_util nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (barray type-eq-decl nil fseqs "structures/")
    (fseq type-eq-decl nil fseqs "structures/")
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (gs_bands const-decl "{fs: (gs_fseq?) | increasing?(fs)}" bands_2D
     nil)
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil))
   nil))
 (gs_bands_equivalence_TCC1 0
  (gs_bands_equivalence_TCC1-1 nil 3482242543
   ("" (subtype-tcc) nil nil) nil nil
   (gs_bands_equivalence subtype "bands_3D.i" "nat")))
 (gs_bands_equivalence 0
  (gs_bands_equivalence-1 nil 3482242561
   ("" (skeep)
    (("" (name "gsbb" "gs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (skeep)
            ((""
              (name "mmax"
                    "finite_sets@finite_sets_minmax[naturalnumbers.nat,restrict[[real, real], [nat, nat], boolean].restrict(reals.<=)].max")
              ((""
                (name "ii"
                      "mmax({ij: nat | ij<=gsbb`length-1 AND gsbb`seq(ij) < x})")
                (("1" (case "ii <= gsbb`length-2")
                  (("1"
                    (case "gsbb`seq(ii) < x AND y < gsbb`seq(ii+1)")
                    (("1" (flatten)
                      (("1"
                        (case "(conflict_3D?(s, Vgs_3D(vo, vi)(x)) OR
                                                                           conflict_3D?(s, Vgs_3D(vo, vi)(y)))")
                        (("1"
                          (case "red_gs_band_3D?(s,vo,vi,gsbb)(ii)")
                          (("1" (lemma "gs_red_bands_3D")
                            (("1" (inst - "s" "vi" "vo")
                              (("1"
                                (replace -9)
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst - "ii")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -3)
                                        (("1"
                                          (assert)
                                          (("1" (inst - "y") nil nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2" (inst - "x") nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma "gs_green_bands_3D")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst - "ii")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (split -)
                                        (("1" (inst - "x") nil nil)
                                         ("2" (inst - "y") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (hide 2)
                            (("3" (hide -1)
                              (("3"
                                (lemma "gs_bands_last")
                                (("3"
                                  (inst?)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -) (("2" (ground) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (typepred "ii")
                        (("2" (inst - "ii+1")
                          (("2" (inst - "ii+1")
                            (("1" (assert) (("1" (grind) nil nil)) nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "gs_bands_last")
                    (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
                  nil)
                 ("2" (split +)
                  (("1" (expand "is_finite")
                    (("1"
                      (inst + "gsbb`length" "LAMBDA (iz: ({ij: nat |
                     ij <= gsbb`length - 1 AND gsbb`seq(ij) < x})): iz")
                      (("1" (expand "injective?")
                        (("1" (skosimp*) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (expand "empty?")
                    (("2" (inst - "0")
                      (("2" (expand "member")
                        (("2" (lemma "gs_bands_3D_not_empty")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (inst - "0")
                                (("2"
                                  (assert)
                                  (("2"
                                    (lemma "gs_bands_first")
                                    (("2"
                                      (inst?)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((gs_bands_3D const-decl
     "{fs: (gs_fseq?[gsmin, gsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (gs_fseq? const-decl "bool" fseqs_aux_2D nil)
    (gsmax formal-const-decl "{x: posreal | x > gsmin}" bands_3D nil)
    (gsmin formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (total_order_restrict application-judgement "(total_order?[S])"
     restrict_order_props nil)
    (dichotomous_restrict application-judgement "(dichotomous?[S])"
     restrict_order_props nil)
    (partial_order_restrict application-judgement "(partial_order?[S])"
     restrict_order_props nil)
    (preorder_restrict application-judgement "(preorder?[S])"
     restrict_order_props nil)
    (transitive_restrict application-judgement "(transitive?[S])"
     restrict_order_props nil)
    (antisymmetric_restrict application-judgement "(antisymmetric?[S])"
     restrict_order_props nil)
    (reflexive_restrict application-judgement "(reflexive?[S])"
     restrict_order_props nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (restrict const-decl "R" restrict nil)
    (max const-decl
         "{a: T | SS(a) AND (FORALL (x: T): SS(x) IMPLIES x <= a)}"
         finite_sets_minmax "finite_sets/")
    (below type-eq-decl nil nat_types nil)
    (injective? const-decl "bool" functions nil)
    (gs_bands_3D_not_empty formula-decl nil bands_3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (gs_bands_first formula-decl nil bands_3D nil)
    (member const-decl "bool" sets nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil) nil
    nil nil (subrange type-eq-decl nil integers nil)
    (red_gs_band_3D? const-decl "bool" bands_3D nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (gs_red_bands_3D formula-decl nil bands_3D nil)
    (gs_green_bands_3D formula-decl nil bands_3D nil)
    (gs_bands_last formula-decl nil bands_3D nil)
    (Vgs_3D const-decl "(LAMBDA (vo2): (vo3 - vi3)`z = vo2`z)"
     bands_util nil)
    nil (Vector type-eq-decl nil vectors_3D "vectors/")
    (conflict_3D? const-decl "bool" cd3d nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (< const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil))
 (vs_red_bands_3D 0
  (vs_red_bands_3D-2 "" 3504812455
   ("" (skeep)
    (("" (case "vect2(vo-vi) = zero and sqv(vect2(s))<sq(D)")
      (("1" (flatten)
        (("1"
          (case "vs_bands_3D(s,vo,vi) = vs_bands[H,B,T,vsmin,vsmax](s`z,vi`z)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp"
                          "(vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                            vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                           / 2")
                    (("1" (case "mp >= vsmin and mp<=vsmax")
                      (("1" (flatten)
                        (("1" (expand "red_vs_band_3D?")
                          (("1" (replace -3)
                            (("1" (rewrite "cd3d_rewrite_vertical")
                              (("1"
                                (expand "Vs" 1 1)
                                (("1"
                                  (rewrite "vect2_sub")
                                  (("1"
                                    (rewrite "vect2_sub")
                                    (("1"
                                      (rewrite "vect2_vs2v3")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "vs_red_bands[H,B,T,vsmin,vsmax]")
                                          (("1"
                                            (inst - "s`z" "vi`z")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst - "i!1")
                                                (("1"
                                                  (expand
                                                   "red_vs_band?")
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (expand "Vs" 1 1)
                                                      (("1"
                                                        (rewrite
                                                         "vz_distr_sub")
                                                        (("1"
                                                          (expand
                                                           "vs2v3"
                                                           1
                                                           1)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (case
                                                                       "x!1 >=vsmin AND x!1 < vsmax")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (rewrite
                                                                               "cd3d")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "cd3d_rewrite_vertical")
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vs")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_sub")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "vz_distr_sub")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "vect2_vs2v3")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "vs2v3")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "cd_vertical")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (lemma
                                                                               "Delta_gt_0_nzv")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "Vs")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "vect2_sub")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "vect2_vs2v3")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                        (("2"
                                                                          (expand
                                                                           "vs_fseq?")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -1
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "i!1+1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (case
                                                                       "x!1 >= vsmin AND x!1 <vsmax")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_3D?")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (expand
                                                                                 "conflict_vertical?")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "t!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Vs")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "vz_distr_sub")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "vs2v3")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                        (("2"
                                                                          (expand
                                                                           "vs_fseq?")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "i!1+1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (typepred
                           "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                          (("2" (expand "vs_fseq?")
                            (("2" (inst-cp - "i!1")
                              (("2"
                                (inst - "i!1+1")
                                (("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "vs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "Delta(s,vo-vi)>0")
        (("1" (lemma "Delta_gt_0_nzv")
          (("1" (inst?)
            (("1" (expand "vs_bands_3D" :assert? none)
              (("1"
                (name "BB" "max
                                                (Theta_D
                                                 (vect2(s), vect2(vo - vi), -1),
                                                 B)")
                (("1"
                  (name "TT" "min
                                                (Theta_D(vect2(s), vect2(vo - vi), 1),
                                                 T)")
                  (("1" (replace -1)
                    (("1" (replace -2)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (hide 2)
                            (("1" (case "BB<TT")
                              (("1"
                                (assert)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (name
                                     "mp"
                                     "(vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                              vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                             / 2")
                                    (("1"
                                      (case
                                       "mp >= vsmin and mp<=vsmax")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "red_vs_band_3D?")
                                          (("1"
                                            (replace -3)
                                            (("1"
                                              (rewrite
                                               "cd3d_rewrite_vertical")
                                              (("1"
                                                (expand "Vs" 2 1)
                                                (("1"
                                                  (rewrite "vect2_sub")
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_vs2v3")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "Vs"
                                                           2
                                                           1)
                                                          (("1"
                                                            (rewrite
                                                             "vect2_sub")
                                                            (("1"
                                                              (rewrite
                                                               "vect2_vs2v3")
                                                              (("1"
                                                                (case
                                                                 "vect2(Vs(vo,vi)(mp)) = vect2(vo)-vect2(vi)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "vs_red_bands[H,BB,TT,vsmin,vsmax]")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "s`z"
                                                                       "vi`z")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "i!1")
                                                                          (("1"
                                                                            (expand
                                                                             "red_vs_band?")
                                                                            (("1"
                                                                              (replace
                                                                               -5)
                                                                              (("1"
                                                                                (expand
                                                                                 "Vs"
                                                                                 2
                                                                                 1)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vz_distr_sub")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "vs2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "cd_vertical?")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -7)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -8)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d_rewrite_vertical")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "vect2(Vs(vo,vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vs"
                                                                                                                   +)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vz_distr_sub")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "vs2v3"
                                                                                                                       +)
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "x!1")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "cd_vertical")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "cd_vertical?")
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -4)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "x!1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "Vs")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "vect2_sub")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vect2_vs2v3")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "x!1")
                                                                                                            (("2"
                                                                                                              (typepred
                                                                                                               "x!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "vs_fseq?")
                                                                                                                    (("2"
                                                                                                                      (inst-cp
                                                                                                                       -
                                                                                                                       "i!1")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "i!1+1")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "i!1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "i!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "x!1")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "cd3d")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "cd3d_rewrite_vertical")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "vect2(Vs(vo, vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "Vs")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vz_distr_sub")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "vs2v3")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "cd_vertical")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "cd_vertical?")
                                                                                                                            (("1"
                                                                                                                              (ground)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "Vs")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vect2_sub")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "vect2_vs2v3")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "vs_fseq?")
                                                                                                            (("2"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "i!1")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1+1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (typepred
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "i!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "Vs")
                                                                  (("2"
                                                                    (rewrite
                                                                     "vect2_sub")
                                                                    (("2"
                                                                      (rewrite
                                                                       "vect2_vs2v3")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred
                                         "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                        (("2"
                                          (expand "vs_fseq?")
                                          (("2"
                                            (inst-cp - "i!1")
                                            (("1"
                                              (inst - "i!1+1")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "i!1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (typepred "i!1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skosimp*)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (hide 1)
                                          (("1"
                                            (expand "red_vs_band_3D?")
                                            (("1"
                                              (name
                                               "mp"
                                               "(structures@add(vsmin, structures@add(vsmax, empty_seq))`seq(1 + i!1) +
                                    structures@add(vsmin, structures@add(vsmax, empty_seq))`seq(i!1))
                                   / 2")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (rewrite
                                                   "cd3d_rewrite_vertical")
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "Vs")
                                                        (("1"
                                                          (rewrite
                                                           "vect2_sub")
                                                          (("1"
                                                            (rewrite
                                                             "vect2_vs2v3")
                                                            (("1"
                                                              (rewrite
                                                               "vect2_sub")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (case
                                                         "vect2(Vs(vo,vi)(mp)) = vect2(vo)-vect2(vi)")
                                                        (("1"
                                                          (rewrite
                                                           "vect2_sub")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "Vs")
                                                          (("2"
                                                            (rewrite
                                                             "vect2_sub")
                                                            (("2"
                                                              (rewrite
                                                               "vect2_vs2v3")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (expand "red_vs_band_3D?")
                                          (("2"
                                            (name
                                             "mp"
                                             "(structures@add(vsmin, structures@add(vsmax, empty_seq))`seq(1 + i!1) +
                                    structures@add(vsmin, structures@add(vsmax, empty_seq))`seq(i!1))
                                   / 2")
                                            (("2"
                                              (replace -1)
                                              (("2"
                                                (inst - "mp")
                                                (("1"
                                                  (rewrite "cd3d")
                                                  nil
                                                  nil)
                                                 ("2"
                                                  (expand "add")
                                                  (("2"
                                                    (case "i!1 = 0")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (expand
                                                         "insert")
                                                        (("1"
                                                          (expand
                                                           "empty_seq")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (hide (1 3 -3))
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "add")
                                                            (("2"
                                                              (expand
                                                               "insert")
                                                              (("2"
                                                                (expand
                                                                 "empty_seq")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split 3)
              (("1" (flatten)
                (("1" (expand "red_vs_band_3D?")
                  (("1"
                    (name "mp" "(vs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                 vs_bands_3D(s, vo, vi)`seq(i!1))
                / 2")
                    (("1" (replace -1)
                      (("1" (rewrite "cd3d" :dir rl)
                        (("1" (lemma "Delta_gt_0")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (split 1)
                                (("1" (ground) nil nil)
                                 ("2"
                                  (expand "conflict_3D?")
                                  (("2"
                                    (skosimp*)
                                    (("2"
                                      (expand
                                       "horizontal_conflict_ever?")
                                      (("2"
                                        (inst + "t!1")
                                        (("2"
                                          (expand "Vs")
                                          (("2"
                                            (rewrite "vect2_sub")
                                            (("2"
                                              (rewrite "vect2_sub")
                                              (("2"
                                                (rewrite "vect2_vs2v3")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "red_vs_band_3D?")
                  (("2"
                    (name "mp" "(vs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                 vs_bands_3D(s, vo, vi)`seq(i!1))
                / 2")
                    (("2" (replace -1)
                      (("2" (inst - "mp")
                        (("1" (rewrite "cd3d") nil nil)
                         ("2" (typepred "vs_bands_3D(s, vo, vi)")
                          (("2" (expand "increasing?")
                            (("2" (inst - "i!1" "i!1+1")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((D formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq "reals/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/") nil
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (vs_bands const-decl "{fs: (vs_fseq?) | increasing?(fs)}" bands_1D
     nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (vs_bands_3D const-decl
     "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (vsmax formal-const-decl "{x: real | x > vsmin}" bands_3D nil)
    (vsmin formal-const-decl "real" bands_3D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (red_vs_band_3D? const-decl "bool" bands_3D nil)
    (Vs const-decl "(vs_only?(vo3 - vi3))" bands_util nil)
    (vs_only? const-decl "bool" definitions_3D nil)
    (cd3d_rewrite_vertical formula-decl nil cd3d nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (vect2_vs2v3 formula-decl nil bands_util nil)
    (vs_red_bands formula-decl nil bands_1D nil)
    (red_vs_band? const-decl "bool" bands_1D nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (conflict_vertical? const-decl "bool" cd_vertical nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (cd3d formula-decl nil cd3d nil)
    (cd_vertical formula-decl nil cd_vertical nil)
    (Delta_gt_0_nzv formula-decl nil horizontal nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (vs2v3 const-decl "(vs_only?(vo3))" bands_util nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subrange type-eq-decl nil integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (Delta_gt_0 formula-decl nil horizontal nil)
    (horizontal_conflict_ever? const-decl "bool" horizontal nil) nil
    nil (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    nil nil nil nil nil nil
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (cd_vertical? const-decl "bool" cd_vertical nil) nil nil
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (add const-decl "fseq" fseqs_ops "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (insert const-decl "fseq" fseqs_ops "structures/") nil nil
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (Theta_D const-decl "real" horizontal nil)
    (Delta const-decl "real" horizontal nil))
   shostak)
  (vs_red_bands_3D-1 nil 3477746949
   ("" (skeep)
    (("" (case "vect2(vo-vi) = zero and sqv(vect2(s))<sq(D)")
      (("1" (flatten)
        (("1"
          (case "vs_bands_3D(s,vo,vi) = vs_bands[H,B,T,vsmin,vsmax](s`z,vi`z)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp"
                          "(vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                            vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                           / 2")
                    (("1" (case "mp >= vsmin and mp<=vsmax")
                      (("1" (flatten)
                        (("1" (expand "red_vs_band_3D?")
                          (("1" (replace -3)
                            (("1" (rewrite "cd3d_rewrite_vertical")
                              (("1"
                                (expand "Vs" 1 1)
                                (("1"
                                  (rewrite "vect2_sub")
                                  (("1"
                                    (rewrite "vect2_sub")
                                    (("1"
                                      (rewrite "vect2_vs2v3")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "vs_red_bands[H,B,T,vsmin,vsmax]")
                                          (("1"
                                            (inst - "s`z" "vi`z")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst - "i!1")
                                                (("1"
                                                  (expand
                                                   "red_vs_band?")
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (expand "Vs" 1 1)
                                                      (("1"
                                                        (rewrite
                                                         "vz_distr_sub")
                                                        (("1"
                                                          (expand
                                                           "vs2v3"
                                                           1
                                                           1)
                                                          (("1"
                                                            (replace
                                                             -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (split)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (skosimp*)
                                                                    (("1"
                                                                      (case
                                                                       "x!1 >=vsmin AND x!1 < vsmax")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "x!1")
                                                                            (("1"
                                                                              (rewrite
                                                                               "cd3d")
                                                                              (("1"
                                                                                (rewrite
                                                                                 "cd3d_rewrite_vertical")
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vs")
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vect2_sub")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "vz_distr_sub")
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "vect2_vs2v3")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "vs2v3")
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "cd_vertical")
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (lemma
                                                                               "Delta_gt_0_nzv")
                                                                              (("2"
                                                                                (inst?)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "Vs")
                                                                                    (("2"
                                                                                      (rewrite
                                                                                       "vect2_sub")
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "vect2_vs2v3")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                        (("2"
                                                                          (expand
                                                                           "vs_fseq?")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -1
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "i!1+1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (skosimp*)
                                                                    (("2"
                                                                      (case
                                                                       "x!1 >= vsmin AND x!1 <vsmax")
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "x!1")
                                                                          (("1"
                                                                            (expand
                                                                             "conflict_3D?")
                                                                            (("1"
                                                                              (skosimp*)
                                                                              (("1"
                                                                                (expand
                                                                                 "conflict_vertical?")
                                                                                (("1"
                                                                                  (inst
                                                                                   +
                                                                                   "t!1")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "Vs")
                                                                                    (("1"
                                                                                      (rewrite
                                                                                       "vz_distr_sub")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "vs2v3")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (typepred
                                                                         "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                        (("2"
                                                                          (expand
                                                                           "vs_fseq?")
                                                                          (("2"
                                                                            (inst-cp
                                                                             -
                                                                             "i!1")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "i!1+1")
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (typepred
                           "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                          (("2" (expand "vs_fseq?")
                            (("2" (inst-cp - "i!1")
                              (("2"
                                (inst - "i!1+1")
                                (("2"
                                  (flatten)
                                  (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "vs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "Delta(s,vo-vi)>0")
        (("1" (lemma "Delta_gt_0_nzv")
          (("1" (inst?)
            (("1" (expand "vs_bands_3D" :assert? none)
              (("1"
                (name "BB" "max
                                                (Theta_D
                                                 (vect2(s), vect2(vo - vi), -1),
                                                 B)")
                (("1"
                  (name "TT" "min
                                                (Theta_D(vect2(s), vect2(vo - vi), 1),
                                                 T)")
                  (("1" (replace -1)
                    (("1" (replace -2)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (hide 2)
                            (("1" (case "BB<TT")
                              (("1"
                                (lift-if)
                                (("1"
                                  (assert)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (name
                                       "mp"
                                       "(vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                              vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                             / 2")
                                      (("1"
                                        (case
                                         "mp >= vsmin and mp<=vsmax")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "red_vs_band_3D?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (rewrite
                                                 "cd3d_rewrite_vertical")
                                                (("1"
                                                  (expand "Vs" 2 1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_sub")
                                                      (("1"
                                                        (rewrite
                                                         "vect2_vs2v3")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "Vs"
                                                             2
                                                             1)
                                                            (("1"
                                                              (rewrite
                                                               "vect2_sub")
                                                              (("1"
                                                                (rewrite
                                                                 "vect2_vs2v3")
                                                                (("1"
                                                                  (case
                                                                   "vect2(Vs(vo,vi)(mp)) = vect2(vo)-vect2(vi)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lemma
                                                                       "vs_red_bands[H,BB,TT,vsmin,vsmax]")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "s`z"
                                                                         "vi`z")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "i!1")
                                                                            (("1"
                                                                              (expand
                                                                               "red_vs_band?")
                                                                              (("1"
                                                                                (replace
                                                                                 -5)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vs"
                                                                                   2
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "vs2v3")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "cd_vertical?")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -7)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -8)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd3d_rewrite_vertical")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "vect2(Vs(vo,vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "Vs"
                                                                                                                     +)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vz_distr_sub")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "vs2v3"
                                                                                                                         +)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "cd_vertical")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "cd_vertical?")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -4)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "x!1")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "Vs")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vect2_sub")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "vect2_vs2v3")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "x!1")
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "x!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (typepred
                                                                                                                     "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "vs_fseq?")
                                                                                                                      (("2"
                                                                                                                        (inst-cp
                                                                                                                         -
                                                                                                                         "i!1")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "i!1+1")
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "i!1")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "i!1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "x!1")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "cd3d")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "cd3d_rewrite_vertical")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "vect2(Vs(vo, vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "Vs")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vz_distr_sub")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "vs2v3")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "cd_vertical")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "cd_vertical?")
                                                                                                                              (("1"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "Vs")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "vect2_sub")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "vect2_vs2v3")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "vs_fseq?")
                                                                                                              (("2"
                                                                                                                (inst-cp
                                                                                                                 -
                                                                                                                 "i!1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1+1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "i!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (typepred
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "Vs")
                                                                    (("2"
                                                                      (rewrite
                                                                       "vect2_sub")
                                                                      (("2"
                                                                        (rewrite
                                                                         "vect2_vs2v3")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred
                                           "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                          (("2"
                                            (expand "vs_fseq?")
                                            (("2"
                                              (inst-cp - "i!1")
                                              (("1"
                                                (inst - "i!1+1")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (typepred "i!1")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "i!1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skosimp*)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (hide 1)
                                          (("1"
                                            (expand "red_vs_band_3D?")
                                            (("1"
                                              (name
                                               "mp"
                                               "(add(vsmin, add(vsmax, empty_seq))`seq(1 + i!1) +
                 add(vsmin, add(vsmax, empty_seq))`seq(i!1))
                / 2")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (rewrite
                                                   "cd3d_rewrite_vertical")
                                                  (("1"
                                                    (split -2)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "Vs")
                                                        (("1"
                                                          (rewrite
                                                           "vect2_sub")
                                                          (("1"
                                                            (rewrite
                                                             "vect2_vs2v3")
                                                            (("1"
                                                              (rewrite
                                                               "vect2_sub")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (flatten)
                                                      (("2"
                                                        (case
                                                         "vect2(Vs(vo,vi)(mp)) = vect2(vo)-vect2(vi)")
                                                        (("1"
                                                          (rewrite
                                                           "vect2_sub")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand "Vs")
                                                          (("2"
                                                            (rewrite
                                                             "vect2_sub")
                                                            (("2"
                                                              (rewrite
                                                               "vect2_vs2v3")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (expand "red_vs_band_3D?")
                                          (("2"
                                            (name
                                             "mp"
                                             "(add(vsmin, add(vsmax, empty_seq))`seq(1 + i!1) +
                 add(vsmin, add(vsmax, empty_seq))`seq(i!1))
                / 2")
                                            (("2"
                                              (replace -1)
                                              (("2"
                                                (inst - "mp")
                                                (("1"
                                                  (rewrite "cd3d")
                                                  nil
                                                  nil)
                                                 ("2"
                                                  (expand "add")
                                                  (("2"
                                                    (case "i!1 = 0")
                                                    (("1"
                                                      (replace -1)
                                                      (("1"
                                                        (expand
                                                         "insert")
                                                        (("1"
                                                          (expand
                                                           "empty_seq")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (typepred "i!1")
                                                      (("2"
                                                        (hide (1 3 -3))
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "add")
                                                            (("2"
                                                              (expand
                                                               "insert")
                                                              (("2"
                                                                (expand
                                                                 "empty_seq")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split 3)
              (("1" (flatten)
                (("1" (expand "red_vs_band_3D?")
                  (("1"
                    (name "mp" "(vs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                 vs_bands_3D(s, vo, vi)`seq(i!1))
                / 2")
                    (("1" (replace -1)
                      (("1" (rewrite "cd3d" :dir rl)
                        (("1" (lemma "Delta_gt_0")
                          (("1" (inst?)
                            (("1" (assert)
                              (("1"
                                (split 1)
                                (("1" (ground) nil nil)
                                 ("2"
                                  (expand "conflict_3D?")
                                  (("2"
                                    (skosimp*)
                                    (("2"
                                      (expand
                                       "horizontal_conflict_ever?")
                                      (("2"
                                        (inst + "t!1")
                                        (("2"
                                          (expand "Vs")
                                          (("2"
                                            (rewrite "vect2_sub")
                                            (("2"
                                              (rewrite "vect2_sub")
                                              (("2"
                                                (rewrite "vect2_vs2v3")
                                                nil
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "red_vs_band_3D?")
                  (("2"
                    (name "mp" "(vs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                 vs_bands_3D(s, vo, vi)`seq(i!1))
                / 2")
                    (("2" (replace -1)
                      (("2" (inst - "mp")
                        (("1" (rewrite "cd3d") nil nil)
                         ("2" (typepred "vs_bands_3D(s, vo, vi)")
                          (("2" (expand "increasing?")
                            (("2" (inst - "i!1" "i!1+1")
                              (("2" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Delta const-decl "real" horizontal nil)
    (Theta_D const-decl "real" horizontal nil)
    (Sign type-eq-decl nil sign "reals/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (cd_vertical? const-decl "bool" cd_vertical nil)
    (horizontal_conflict_ever? const-decl "bool" horizontal nil)
    (Delta_gt_0 formula-decl nil horizontal nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (vs2v3 const-decl "(vs_only?(vo3))" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (Delta_gt_0_nzv formula-decl nil horizontal nil)
    (cd_vertical formula-decl nil cd_vertical nil)
    (cd3d formula-decl nil cd3d nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (conflict_vertical? const-decl "bool" cd_vertical nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (red_vs_band? const-decl "bool" bands_1D nil)
    (vs_red_bands formula-decl nil bands_1D nil)
    (vect2_vs2v3 formula-decl nil bands_util nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (cd3d_rewrite_vertical formula-decl nil cd3d nil)
    (vs_only? const-decl "bool" definitions_3D nil)
    (Vs const-decl "(vs_only?(vo3 - vi3))" bands_util nil)
    (barray type-eq-decl nil fseqs "structures/")
    (fseq type-eq-decl nil fseqs "structures/")
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (vs_bands const-decl "{fs: (vs_fseq?) | increasing?(fs)}" bands_1D
     nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (sq const-decl "nonneg_real" sq "reals/"))
   nil))
 (vs_green_bands_3D 0
  (vs_green_bands_3D-2 "" 3504813764
   ("" (skeep)
    (("" (case "vect2(vo-vi) = zero and sqv(vect2(s))<sq(D)")
      (("1" (flatten)
        (("1"
          (case "vs_bands_3D(s,vo,vi) = vs_bands[H,B,T,vsmin,vsmax](s`z,vi`z)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp"
                          "(vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                                                  vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                                                 / 2")
                    (("1" (case "mp >= vsmin and mp<=vsmax")
                      (("1" (flatten)
                        (("1" (expand "red_vs_band_3D?")
                          (("1" (replace -3)
                            (("1" (rewrite "cd3d_rewrite_vertical")
                              (("1"
                                (expand "Vs" 1 1)
                                (("1"
                                  (rewrite "vect2_sub")
                                  (("1"
                                    (rewrite "vect2_sub")
                                    (("1"
                                      (rewrite "vect2_vs2v3")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "vs_green_bands[H,B,T,vsmin,vsmax]")
                                          (("1"
                                            (inst - "s`z" "vi`z")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst - "i!1")
                                                (("1"
                                                  (expand
                                                   "red_vs_band?")
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (expand "Vs" 1 1)
                                                      (("1"
                                                        (rewrite
                                                         "vz_distr_sub")
                                                        (("1"
                                                          (expand
                                                           "vs2v3"
                                                           1
                                                           1)
                                                          (("1"
                                                            (lemma
                                                             "Delta_gt_0_nzv")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (expand
                                                                 "Vs"
                                                                 -1
                                                                 2)
                                                                (("1"
                                                                  (rewrite
                                                                   "vect2_sub"
                                                                   -1)
                                                                  (("1"
                                                                    (rewrite
                                                                     "vect2_vs2v3")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (hide
                                                                         1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (case
                                                                                     "x!1 >=vsmin AND x!1 < vsmax")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "cd3d")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "cd3d_rewrite_vertical")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Vs")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_sub")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "vz_distr_sub")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "vect2_vs2v3")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd_vertical")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "vs2v3")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "Delta_gt_0_nzv")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "vs_fseq?")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -1
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "i!1+1")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (case
                                                                                     "x!1 >=vsmin AND x!1 < vsmax")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "cd3d")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "cd3d_rewrite_vertical")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Vs")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_sub")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "vz_distr_sub")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "vect2_vs2v3")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "vs2v3")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd_vertical")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "vs_fseq?")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -1
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "i!1+1")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                        (("2" (expand "vs_fseq?")
                          (("2" (inst-cp -1 "i!1")
                            (("2" (inst -1 "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "vs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "Delta(s,vo-vi)>0")
        (("1" (lemma "Delta_gt_0_nzv")
          (("1" (inst?)
            (("1" (expand "vs_bands_3D" :assert? none)
              (("1"
                (name "BB" "max
                                                                      (Theta_D
                                                                       (vect2(s), vect2(vo - vi), -1),
                                                                       B)")
                (("1"
                  (name "TT" "min
                                                                          (Theta_D(vect2(s), vect2(vo - vi), 1),
                                                                           T)")
                  (("1" (replace -1)
                    (("1" (replace -2)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (hide 2)
                            (("1" (case "BB<TT")
                              (("1"
                                (assert)
                                (("1"
                                  (skosimp*)
                                  (("1"
                                    (name
                                     "mp"
                                     "(vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                                                                vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                                                               / 2")
                                    (("1"
                                      (case
                                       "mp >= vsmin and mp<=vsmax")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (expand "red_vs_band_3D?")
                                          (("1"
                                            (replace -3)
                                            (("1"
                                              (rewrite
                                               "cd3d_rewrite_vertical")
                                              (("1"
                                                (expand "Vs" 2 1)
                                                (("1"
                                                  (rewrite "vect2_sub")
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_vs2v3")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand
                                                           "Vs"
                                                           2
                                                           1)
                                                          (("1"
                                                            (rewrite
                                                             "vect2_sub")
                                                            (("1"
                                                              (rewrite
                                                               "vect2_vs2v3")
                                                              (("1"
                                                                (case
                                                                 "vect2(Vs(vo,vi)(mp)) = vect2(vo)-vect2(vi)")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lemma
                                                                     "vs_green_bands[H,BB,TT,vsmin,vsmax]")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "s`z"
                                                                       "vi`z")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "i!1")
                                                                          (("1"
                                                                            (expand
                                                                             "red_vs_band?")
                                                                            (("1"
                                                                              (replace
                                                                               -5)
                                                                              (("1"
                                                                                (expand
                                                                                 "Vs"
                                                                                 2
                                                                                 1)
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "vz_distr_sub")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "vs2v3")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "cd_vertical?")
                                                                                      (("1"
                                                                                        (replace
                                                                                         -2)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -7)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -8)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (split
                                                                                                 +)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (skosimp*)
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd3d")
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d_rewrite_vertical")
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "vect2(Vs(vo,vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (expand
                                                                                                                   "Vs"
                                                                                                                   -5)
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "vz_distr_sub")
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "vs2v3")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "x!1")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "cd_vertical")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "cd_vertical?")
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               -4)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (flatten)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "x!1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "Vs")
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "vect2_sub")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vect2_vs2v3")
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (typepred
                                                                                                             "x!1")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (typepred
                                                                                                                 "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "vs_fseq?")
                                                                                                                  (("2"
                                                                                                                    (inst-cp
                                                                                                                     -
                                                                                                                     "i!1")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "i!1+1")
                                                                                                                      (("1"
                                                                                                                        (flatten)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "i!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (typepred
                                                                                                                       "i!1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (skosimp*)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "x!1")
                                                                                                          (("1"
                                                                                                            (rewrite
                                                                                                             "cd3d")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "cd3d_rewrite_vertical")
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "vect2(Vs(vo, vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "Vs")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vz_distr_sub")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "vs2v3")
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "cd_vertical")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "cd_vertical?")
                                                                                                                            (("1"
                                                                                                                              (ground)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "Vs")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vect2_sub")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "vect2_vs2v3")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (typepred
                                                                                                         "x!1")
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "vs_fseq?")
                                                                                                            (("2"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "i!1")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "i!1+1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (typepred
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (typepred
                                                                                                                 "i!1")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (typepred
                                                                             "i!1")
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "Vs")
                                                                  (("2"
                                                                    (rewrite
                                                                     "vect2_sub")
                                                                    (("2"
                                                                      (rewrite
                                                                       "vect2_vs2v3")
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred
                                         "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                        (("2"
                                          (expand "vs_fseq?")
                                          (("2"
                                            (inst-cp - "i!1")
                                            (("1"
                                              (inst - "i!1+1")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "i!1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (typepred "i!1")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert) nil nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skosimp*)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (rewrite "cd3d")
                                            (("1"
                                              (rewrite
                                               "cd3d_rewrite_vertical")
                                              (("1"
                                                (split -)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "Vs")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_sub")
                                                      (("1"
                                                        (rewrite
                                                         "vect2_vs2v3")
                                                        (("1"
                                                          (rewrite
                                                           "vect2_sub")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand "Vs")
                                                    (("2"
                                                      (rewrite
                                                       "vect2_sub")
                                                      (("2"
                                                        (rewrite
                                                         "vect2_vs2v3")
                                                        (("2"
                                                          (rewrite
                                                           "vect2_sub")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (expand "red_vs_band_3D?")
                                          (("2"
                                            (name
                                             "mp"
                                             "(structures@add(vsmin, structures@add(vsmax, empty_seq))`seq(1 + i!1) +
                                    structures@add(vsmin, structures@add(vsmax, empty_seq))`seq(i!1))
                                   / 2")
                                            (("2"
                                              (inst - "mp")
                                              (("1"
                                                (rewrite "cd3d")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "add" +)
                                                (("2"
                                                  (case
                                                   "mp > vsmin and mp<vsmax")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (case "i!1 = 0")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (expand
                                                           "insert")
                                                          (("1"
                                                            (expand
                                                             "empty_seq")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (typepred
                                                         "i!1")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "add")
                                                            (("2"
                                                              (expand
                                                               "insert")
                                                              (("2"
                                                                (expand
                                                                 "empty_seq")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "i!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "add")
                                                        (("2"
                                                          (expand
                                                           "insert")
                                                          (("2"
                                                            (expand
                                                             "empty_seq")
                                                            (("2"
                                                              (case
                                                               "i!1 = 0")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split 3)
              (("1" (flatten)
                (("1" (skosimp*)
                  (("1" (lemma "Delta_gt_0")
                    (("1" (inst?)
                      (("1" (assert)
                        (("1" (split 1)
                          (("1" (ground) nil nil)
                           ("2" (expand "conflict_3D?")
                            (("2" (skosimp*)
                              (("2"
                                (expand "horizontal_conflict_ever?")
                                (("2"
                                  (inst + "t!1")
                                  (("2"
                                    (expand "Vs")
                                    (("2"
                                      (rewrite "vect2_sub")
                                      (("2"
                                        (rewrite "vect2_sub")
                                        (("2"
                                          (rewrite "vect2_vs2v3")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (hide -1)
                  (("2" (expand "red_vs_band_3D?")
                    (("2"
                      (name "mp" "(vs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                 vs_bands_3D(s, vo, vi)`seq(i!1))
                / 2")
                      (("2" (replace -1)
                        (("2" (rewrite "cd3d" :dir rl)
                          (("2" (hide -1)
                            (("2" (lemma "Delta_gt_0")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (split 1)
                                    (("1" (ground) nil nil)
                                     ("2"
                                      (expand "conflict_3D?")
                                      (("2"
                                        (skosimp*)
                                        (("2"
                                          (expand
                                           "horizontal_conflict_ever?")
                                          (("2"
                                            (inst + "t!1")
                                            (("2"
                                              (expand "Vs")
                                              (("2"
                                                (rewrite "vect2_sub")
                                                (("2"
                                                  (rewrite "vect2_sub")
                                                  (("2"
                                                    (rewrite
                                                     "vect2_vs2v3")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((D formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (sq const-decl "nonneg_real" sq "reals/")
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (nnreal type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil) (< const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/") nil
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (real nonempty-type-from-decl nil reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (vs_bands const-decl "{fs: (vs_fseq?) | increasing?(fs)}" bands_1D
     nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (vs_bands_3D const-decl
     "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (vsmax formal-const-decl "{x: real | x > vsmin}" bands_3D nil)
    (vsmin formal-const-decl "real" bands_3D nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (red_vs_band_3D? const-decl "bool" bands_3D nil)
    (Vs const-decl "(vs_only?(vo3 - vi3))" bands_util nil)
    (vs_only? const-decl "bool" definitions_3D nil)
    (cd3d_rewrite_vertical formula-decl nil cd3d nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (vect2_vs2v3 formula-decl nil bands_util nil)
    (vs_green_bands formula-decl nil bands_1D nil)
    (red_vs_band? const-decl "bool" bands_1D nil)
    (below type-eq-decl nil naturalnumbers nil)
    (cd3d formula-decl nil cd3d nil)
    (cd_vertical formula-decl nil cd_vertical nil) nil
    (Delta_gt_0_nzv formula-decl nil horizontal nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (vs2v3 const-decl "(vs_only?(vo3))" bands_util nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (subrange type-eq-decl nil integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (Lookahead type-eq-decl nil Lookahead nil)
    (horizontal_conflict_ever? const-decl "bool" horizontal nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (Delta_gt_0 formula-decl nil horizontal nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil) nil
    nil nil nil nil nil
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (cd_vertical? const-decl "bool" cd_vertical nil) nil
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (add const-decl "fseq" fseqs_ops "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/") nil nil
    (insert const-decl "fseq" fseqs_ops "structures/")
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (nzint nonempty-type-eq-decl nil integers nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (Sign type-eq-decl nil sign "reals/")
    (Theta_D const-decl "real" horizontal nil)
    (Delta const-decl "real" horizontal nil))
   shostak)
  (vs_green_bands_3D-1 nil 3477751224
   ("" (skeep)
    (("" (case "vect2(vo-vi) = zero and sqv(vect2(s))<sq(D)")
      (("1" (flatten)
        (("1"
          (case "vs_bands_3D(s,vo,vi) = vs_bands[H,B,T,vsmin,vsmax](s`z,vi`z)")
          (("1" (replace -1)
            (("1" (hide -1)
              (("1" (assert)
                (("1" (skosimp*)
                  (("1"
                    (name "mp"
                          "(vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                                                  vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                                                 / 2")
                    (("1" (case "mp >= vsmin and mp<=vsmax")
                      (("1" (flatten)
                        (("1" (expand "red_vs_band_3D?")
                          (("1" (replace -3)
                            (("1" (rewrite "cd3d_rewrite_vertical")
                              (("1"
                                (expand "Vs" 1 1)
                                (("1"
                                  (rewrite "vect2_sub")
                                  (("1"
                                    (rewrite "vect2_sub")
                                    (("1"
                                      (rewrite "vect2_vs2v3")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma
                                           "vs_green_bands[H,B,T,vsmin,vsmax]")
                                          (("1"
                                            (inst - "s`z" "vi`z")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst - "i!1")
                                                (("1"
                                                  (expand
                                                   "red_vs_band?")
                                                  (("1"
                                                    (replace -4)
                                                    (("1"
                                                      (expand "Vs" 1 1)
                                                      (("1"
                                                        (rewrite
                                                         "vz_distr_sub")
                                                        (("1"
                                                          (expand
                                                           "vs2v3"
                                                           1
                                                           1)
                                                          (("1"
                                                            (lemma
                                                             "Delta_gt_0_nzv")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (expand
                                                                 "Vs"
                                                                 -1
                                                                 2)
                                                                (("1"
                                                                  (rewrite
                                                                   "vect2_sub"
                                                                   -1)
                                                                  (("1"
                                                                    (rewrite
                                                                     "vect2_vs2v3")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (hide
                                                                         1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (skosimp*)
                                                                                  (("1"
                                                                                    (case
                                                                                     "x!1 >=vsmin AND x!1 < vsmax")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "cd3d")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "cd3d_rewrite_vertical")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Vs")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_sub")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "vz_distr_sub")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "vect2_vs2v3")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "cd_vertical")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (split
                                                                                                           -)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "vs2v3")
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (lemma
                                                                                                               "Delta_gt_0_nzv")
                                                                                                              (("2"
                                                                                                                (inst?)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "vs_fseq?")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -1
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "i!1+1")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (skosimp*)
                                                                                  (("2"
                                                                                    (case
                                                                                     "x!1 >=vsmin AND x!1 < vsmax")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "cd3d")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "cd3d_rewrite_vertical")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "Vs")
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "vect2_sub")
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "vz_distr_sub")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "vect2_vs2v3")
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "vs2v3")
                                                                                                      (("1"
                                                                                                        (flatten)
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd_vertical")
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (typepred
                                                                                       "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                                                                                      (("2"
                                                                                        (expand
                                                                                         "vs_fseq?")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -1
                                                                                           "i!1")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -1
                                                                                             "i!1+1")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2"
                        (typepred
                         "vs_bands[H, B, T, vsmin, vsmax](s`z, vi`z)")
                        (("2" (expand "vs_fseq?")
                          (("2" (inst-cp -1 "i!1")
                            (("2" (inst -1 "i!1+1")
                              (("2"
                                (flatten)
                                (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (expand "vs_bands_3D") (("2" (assert) nil nil)) nil)
           ("3" (assert) nil nil))
          nil))
        nil)
       ("2" (case "Delta(s,vo-vi)>0")
        (("1" (lemma "Delta_gt_0_nzv")
          (("1" (inst?)
            (("1" (expand "vs_bands_3D" :assert? none)
              (("1"
                (name "BB" "max
                                                                      (Theta_D
                                                                       (vect2(s), vect2(vo - vi), -1),
                                                                       B)")
                (("1"
                  (name "TT" "min
                                                                          (Theta_D(vect2(s), vect2(vo - vi), 1),
                                                                           T)")
                  (("1" (replace -1)
                    (("1" (replace -2)
                      (("1" (assert)
                        (("1" (flatten)
                          (("1" (hide 2)
                            (("1" (case "BB<TT")
                              (("1"
                                (lift-if)
                                (("1"
                                  (assert)
                                  (("1"
                                    (skosimp*)
                                    (("1"
                                      (name
                                       "mp"
                                       "(vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(1 + i!1) +
                                                                vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)`seq(i!1))
                                                               / 2")
                                      (("1"
                                        (case
                                         "mp >= vsmin and mp<=vsmax")
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "red_vs_band_3D?")
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (rewrite
                                                 "cd3d_rewrite_vertical")
                                                (("1"
                                                  (expand "Vs" 2 1)
                                                  (("1"
                                                    (rewrite
                                                     "vect2_sub")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_sub")
                                                      (("1"
                                                        (rewrite
                                                         "vect2_vs2v3")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (expand
                                                             "Vs"
                                                             2
                                                             1)
                                                            (("1"
                                                              (rewrite
                                                               "vect2_sub")
                                                              (("1"
                                                                (rewrite
                                                                 "vect2_vs2v3")
                                                                (("1"
                                                                  (case
                                                                   "vect2(Vs(vo,vi)(mp)) = vect2(vo)-vect2(vi)")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lemma
                                                                       "vs_green_bands[H,BB,TT,vsmin,vsmax]")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "s`z"
                                                                         "vi`z")
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "i!1")
                                                                            (("1"
                                                                              (expand
                                                                               "red_vs_band?")
                                                                              (("1"
                                                                                (replace
                                                                                 -5)
                                                                                (("1"
                                                                                  (expand
                                                                                   "Vs"
                                                                                   2
                                                                                   1)
                                                                                  (("1"
                                                                                    (rewrite
                                                                                     "vz_distr_sub")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "vs2v3")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "cd_vertical?")
                                                                                        (("1"
                                                                                          (replace
                                                                                           -2)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -7)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -8)
                                                                                              (("1"
                                                                                                (replace
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (split
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (skosimp*)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "cd3d")
                                                                                                        (("1"
                                                                                                          (rewrite
                                                                                                           "cd3d_rewrite_vertical")
                                                                                                          (("1"
                                                                                                            (case
                                                                                                             "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                            (("1"
                                                                                                              (flatten)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "vect2(Vs(vo,vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (expand
                                                                                                                     "Vs"
                                                                                                                     -5)
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "vz_distr_sub")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "vs2v3")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "cd_vertical")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "cd_vertical?")
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 -4)
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (typepred
                                                                                                                             "x!1")
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "Vs")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "vect2_sub")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "vect2_vs2v3")
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("3"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (typepred
                                                                                                               "x!1")
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (typepred
                                                                                                                   "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "vs_fseq?")
                                                                                                                    (("2"
                                                                                                                      (inst-cp
                                                                                                                       -
                                                                                                                       "i!1")
                                                                                                                      (("1"
                                                                                                                        (inst
                                                                                                                         -
                                                                                                                         "i!1+1")
                                                                                                                        (("1"
                                                                                                                          (flatten)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (typepred
                                                                                                                           "i!1")
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (typepred
                                                                                                                         "i!1")
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (flatten)
                                                                                                    (("2"
                                                                                                      (skosimp*)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "x!1 >= vsmin AND x!1 <vsmax")
                                                                                                        (("1"
                                                                                                          (flatten)
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "x!1")
                                                                                                            (("1"
                                                                                                              (rewrite
                                                                                                               "cd3d")
                                                                                                              (("1"
                                                                                                                (rewrite
                                                                                                                 "cd3d_rewrite_vertical")
                                                                                                                (("1"
                                                                                                                  (case
                                                                                                                   "vect2(Vs(vo, vi)(x!1)) = vect2(vo)-vect2(vi)")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "Vs")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "vz_distr_sub")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "vs2v3")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "cd_vertical")
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "cd_vertical?")
                                                                                                                              (("1"
                                                                                                                                (ground)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "Vs")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "vect2_sub")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "vect2_vs2v3")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("3"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (typepred
                                                                                                           "x!1")
                                                                                                          (("2"
                                                                                                            (typepred
                                                                                                             "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "vs_fseq?")
                                                                                                              (("2"
                                                                                                                (inst-cp
                                                                                                                 -
                                                                                                                 "i!1")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "i!1+1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (typepred
                                                                                                                     "i!1")
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (typepred
                                                                                                                   "i!1")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (typepred
                                                                               "i!1")
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (expand
                                                                     "Vs")
                                                                    (("2"
                                                                      (rewrite
                                                                       "vect2_sub")
                                                                      (("2"
                                                                        (rewrite
                                                                         "vect2_vs2v3")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (typepred
                                           "vs_bands[H, BB, TT, vsmin, vsmax](s`z, vi`z)")
                                          (("2"
                                            (expand "vs_fseq?")
                                            (("2"
                                              (inst-cp - "i!1")
                                              (("1"
                                                (inst - "i!1+1")
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (typepred "i!1")
                                                  (("2"
                                                    (assert)
                                                    nil
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (typepred "i!1")
                                                (("2"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (skosimp*)
                                (("2"
                                  (lift-if)
                                  (("2"
                                    (assert)
                                    (("2"
                                      (split)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (skosimp*)
                                          (("1"
                                            (rewrite "cd3d")
                                            (("1"
                                              (rewrite
                                               "cd3d_rewrite_vertical")
                                              (("1"
                                                (split -)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand "Vs")
                                                    (("1"
                                                      (rewrite
                                                       "vect2_sub")
                                                      (("1"
                                                        (rewrite
                                                         "vect2_vs2v3")
                                                        (("1"
                                                          (rewrite
                                                           "vect2_sub")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (flatten)
                                                  (("2"
                                                    (expand "Vs")
                                                    (("2"
                                                      (rewrite
                                                       "vect2_sub")
                                                      (("2"
                                                        (rewrite
                                                         "vect2_vs2v3")
                                                        (("2"
                                                          (rewrite
                                                           "vect2_sub")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (expand "red_vs_band_3D?")
                                          (("2"
                                            (name
                                             "mp"
                                             "(add(vsmin, add(vsmax, empty_seq))`seq(1 + i!1) +
                 add(vsmin, add(vsmax, empty_seq))`seq(i!1))
                / 2")
                                            (("2"
                                              (inst - "mp")
                                              (("1"
                                                (rewrite "cd3d")
                                                (("1"
                                                  (assert)
                                                  nil
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "add" +)
                                                (("2"
                                                  (case
                                                   "mp > vsmin and mp<vsmax")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (case "i!1 = 0")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (expand
                                                           "insert")
                                                          (("1"
                                                            (expand
                                                             "empty_seq")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (typepred
                                                         "i!1")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (expand
                                                             "add")
                                                            (("2"
                                                              (expand
                                                               "insert")
                                                              (("2"
                                                                (expand
                                                                 "empty_seq")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (typepred "i!1")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand "add")
                                                        (("2"
                                                          (expand
                                                           "insert")
                                                          (("2"
                                                            (expand
                                                             "empty_seq")
                                                            (("2"
                                                              (case
                                                               "i!1 = 0")
                                                              (("1"
                                                                (replace
                                                                 -1)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (assert) nil nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2" (skosimp*)
            (("2" (split 3)
              (("1" (flatten)
                (("1" (skosimp*)
                  (("1" (lemma "Delta_gt_0")
                    (("1" (inst?)
                      (("1" (assert)
                        (("1" (split 1)
                          (("1" (ground) nil nil)
                           ("2" (expand "conflict_3D?")
                            (("2" (skosimp*)
                              (("2"
                                (expand "horizontal_conflict_ever?")
                                (("2"
                                  (inst + "t!1")
                                  (("2"
                                    (expand "Vs")
                                    (("2"
                                      (rewrite "vect2_sub")
                                      (("2"
                                        (rewrite "vect2_sub")
                                        (("2"
                                          (rewrite "vect2_vs2v3")
                                          nil
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (hide -1)
                  (("2" (expand "red_vs_band_3D?")
                    (("2"
                      (name "mp" "(vs_bands_3D(s, vo, vi)`seq(1 + i!1) +
                 vs_bands_3D(s, vo, vi)`seq(i!1))
                / 2")
                      (("2" (replace -1)
                        (("2" (rewrite "cd3d" :dir rl)
                          (("2" (hide -1)
                            (("2" (lemma "Delta_gt_0")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (split 1)
                                    (("1" (ground) nil nil)
                                     ("2"
                                      (expand "conflict_3D?")
                                      (("2"
                                        (skosimp*)
                                        (("2"
                                          (expand
                                           "horizontal_conflict_ever?")
                                          (("2"
                                            (inst + "t!1")
                                            (("2"
                                              (expand "Vs")
                                              (("2"
                                                (rewrite "vect2_sub")
                                                (("2"
                                                  (rewrite "vect2_sub")
                                                  (("2"
                                                    (rewrite
                                                     "vect2_vs2v3")
                                                    nil
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Delta const-decl "real" horizontal nil)
    (Theta_D const-decl "real" horizontal nil)
    (Sign type-eq-decl nil sign "reals/")
    (Nz_vect2 type-eq-decl nil vectors_2D "vectors/")
    (insert const-decl "fseq" fseqs_ops "structures/")
    (empty_seq const-decl "fsq" fseqs "structures/")
    (fsq type-eq-decl nil fsq "structures/")
    (add const-decl "fseq" fseqs_ops "structures/")
    (cd_vertical? const-decl "bool" cd_vertical nil)
    (Delta_gt_0 formula-decl nil horizontal nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (horizontal_conflict_ever? const-decl "bool" horizontal nil)
    (Lookahead type-eq-decl nil Lookahead nil)
    (sq_nz_pos application-judgement "posreal" sq "reals/")
    (sqv_cont name-judgement "continuous_vr_fun" vect_cont_2D
     "vect_analysis/")
    (vs2v3 const-decl "(vs_only?(vo3))" bands_util nil)
    (vz_distr_sub formula-decl nil vectors_3D "vectors/")
    (Delta_gt_0_nzv formula-decl nil horizontal nil)
    (cd_vertical formula-decl nil cd_vertical nil)
    (cd3d formula-decl nil cd3d nil)
    (red_vs_band? const-decl "bool" bands_1D nil)
    (vs_green_bands formula-decl nil bands_1D nil)
    (vect2_vs2v3 formula-decl nil bands_util nil)
    (nzv2 application-judgement "Nz_vect2" definitions_3D nil)
    (vect2_sub formula-decl nil vect_3D_2D "vectors/")
    (cd3d_rewrite_vertical formula-decl nil cd3d nil)
    (vs_only? const-decl "bool" definitions_3D nil)
    (Vs const-decl "(vs_only?(vo3 - vi3))" bands_util nil)
    (barray type-eq-decl nil fseqs "structures/")
    (fseq type-eq-decl nil fseqs "structures/")
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (vs_bands const-decl "{fs: (vs_fseq?) | increasing?(fs)}" bands_1D
     nil)
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (zero const-decl "Vector" vectors_2D "vectors/")
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (sq const-decl "nonneg_real" sq "reals/"))
   nil))
 (vs_bands_equivalence_TCC1 0
  (vs_bands_equivalence_TCC1-1 nil 3482242762
   ("" (subtype-tcc) nil nil)
   (nil (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (* const-decl "real" vectors_2D "vectors/")
    (sqv const-decl "nnreal" vectors_2D "vectors/")
    (sq const-decl "nonneg_real" sq "reals/")
    (real_times_real_is_real application-judgement "real" reals nil))
   nil (vs_bands_equivalence subtype "bands_3D.i" "nat")))
 (vs_bands_equivalence 0
  (vs_bands_equivalence-1 nil 3482242787
   ("" (skeep)
    (("" (name "vsbb" "vs_bands_3D(s, vo, vi)")
      (("" (replace -1)
        (("" (assert)
          (("" (skeep)
            ((""
              (name "mmax"
                    "finite_sets@finite_sets_minmax[naturalnumbers.nat,restrict[[real, real], [nat, nat], boolean].restrict(reals.<=)].max")
              ((""
                (name "ii"
                      "mmax({ij: nat | ij<=vsbb`length-1 AND vsbb`seq(ij) < x})")
                (("1" (case "ii <= vsbb`length-2")
                  (("1"
                    (case "vsbb`seq(ii) < x AND y < vsbb`seq(ii+1)")
                    (("1" (flatten)
                      (("1"
                        (case "(conflict_3D?(s, Vs(vo, vi)(x)) OR
                                                                                                     conflict_3D?(s, Vs(vo, vi)(y)))")
                        (("1"
                          (case "red_vs_band_3D?(s,vo,vi,vsbb)(ii)")
                          (("1" (lemma "vs_red_bands_3D")
                            (("1" (inst - "s" "vi" "vo")
                              (("1"
                                (replace -9)
                                (("1"
                                  (assert)
                                  (("1"
                                    (inst - "ii")
                                    (("1"
                                      (assert)
                                      (("1"
                                        (split -3)
                                        (("1"
                                          (assert)
                                          (("1" (inst - "y") nil nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2" (inst - "x") nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma "vs_green_bands_3D")
                              (("2"
                                (inst?)
                                (("2"
                                  (assert)
                                  (("2"
                                    (inst - "ii")
                                    (("2"
                                      (assert)
                                      (("2"
                                        (split -)
                                        (("1" (inst - "x") nil nil)
                                         ("2" (inst - "y") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (hide 2)
                            (("3" (hide -1)
                              (("3"
                                (lemma "vs_bands_last")
                                (("3"
                                  (inst?)
                                  (("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -) (("2" (ground) nil nil)) nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (typepred "ii")
                        (("2" (inst - "ii+1")
                          (("2" (inst - "ii+1")
                            (("1" (assert) (("1" (grind) nil nil)) nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (lemma "vs_bands_last")
                    (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
                  nil)
                 ("2" (split +)
                  (("1" (expand "is_finite")
                    (("1"
                      (inst + "vsbb`length" "LAMBDA (iz: ({ij: nat |
                     ij <= vsbb`length - 1 AND vsbb`seq(ij) < x})): iz")
                      (("1" (expand "injective?")
                        (("1" (skosimp*) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (expand "empty?")
                    (("2" (inst - "0")
                      (("2" (expand "member")
                        (("2" (lemma "vs_bands_3D_not_empty")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2"
                                (inst - "0")
                                (("2"
                                  (assert)
                                  (("2"
                                    (lemma "vs_bands_first")
                                    (("2"
                                      (inst?)
                                      (("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((vs_bands_3D const-decl
     "{fs: (vs_fseq?[vsmin, vsmax]) | increasing?(fs)}" bands_3D nil)
    (increasing? const-decl "bool" sort_fseq "structures/")
    (<= const-decl "bool" reals nil)
    (vs_fseq? const-decl "bool" fseqs_aux_vertical nil)
    (vsmax formal-const-decl "{x: real | x > vsmin}" bands_3D nil)
    (> const-decl "bool" reals nil)
    (vsmin formal-const-decl "real" bands_3D nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (Nzv2_vect3 type-eq-decl nil definitions_3D nil)
    (zero const-decl "Vector" vectors_2D "vectors/")
    (vect2 const-decl "Vect2" vect_3D_2D "vectors/")
    (Vect2 type-eq-decl nil vectors_2D_def "vectors/")
    (/= const-decl "boolean" notequal nil)
    (Vector type-eq-decl nil vectors_2D "vectors/")
    (Vect3 type-eq-decl nil vectors_3D_def "vectors/")
    (= const-decl "[T, T -> boolean]" equalities nil)
    (fseq type-eq-decl nil fseqs "structures/")
    (barray type-eq-decl nil fseqs "structures/")
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (total_order_restrict application-judgement "(total_order?[S])"
     restrict_order_props nil)
    (dichotomous_restrict application-judgement "(dichotomous?[S])"
     restrict_order_props nil)
    (partial_order_restrict application-judgement "(partial_order?[S])"
     restrict_order_props nil)
    (preorder_restrict application-judgement "(preorder?[S])"
     restrict_order_props nil)
    (transitive_restrict application-judgement "(transitive?[S])"
     restrict_order_props nil)
    (antisymmetric_restrict application-judgement "(antisymmetric?[S])"
     restrict_order_props nil)
    (reflexive_restrict application-judgement "(reflexive?[S])"
     restrict_order_props nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil) (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (empty? const-decl "bool" sets nil)
    (non_empty_finite_set type-eq-decl nil finite_sets nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (restrict const-decl "R" restrict nil)
    (max const-decl
         "{a: T | SS(a) AND (FORALL (x: T): SS(x) IMPLIES x <= a)}"
         finite_sets_minmax "finite_sets/")
    (below type-eq-decl nil nat_types nil)
    (injective? const-decl "bool" functions nil)
    (vs_bands_3D_not_empty formula-decl nil bands_3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vs_bands_first formula-decl nil bands_3D nil)
    (member const-decl "bool" sets nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (real_plus_real_is_real application-judgement "real" reals nil) nil
    nil nil (subrange type-eq-decl nil integers nil)
    (red_vs_band_3D? const-decl "bool" bands_3D nil)
    (real_le_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (vs_red_bands_3D formula-decl nil bands_3D nil)
    (vs_green_bands_3D formula-decl nil bands_3D nil)
    (vs_bands_last formula-decl nil bands_3D nil)
    (Vs const-decl "(vs_only?(vo3 - vi3))" bands_util nil) nil
    (Vector type-eq-decl nil vectors_3D "vectors/")
    (vs_only? const-decl "bool" definitions_3D nil)
    (conflict_3D? const-decl "bool" cd3d nil)
    (T formal-const-decl "{x: posreal | x > B}" bands_3D nil)
    (B formal-const-decl "nnreal" bands_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (H formal-const-decl "posreal" bands_3D nil)
    (D formal-const-decl "posreal" bands_3D nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (< const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil)))

