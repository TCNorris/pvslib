(pvsio_examples
 (hello_you_TCC1 0
  (hello_you_TCC1-1 nil 3771056088 ("" (subtype-tcc) nil nil)
   ((rat nonempty-type-eq-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (list2finseq const-decl "finseq[T]" list2finseq nil)
    (O const-decl "finseq" finite_sequences nil)
    (concat const-decl "string" stdstr nil)
    (skip const-decl "void" stdlang nil)
    (printstr const-decl "void" stdio nil)
    (fail const-decl "void" stdlang nil)
    (assert const-decl "void" stdio nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int"
     integers nil))
   nil (hello_you subtype "pvsio_examples.r" "nonneg_real")))
 (safe_sqrt_TCC1 0
  (safe_sqrt_TCC1-1 nil 3771056088 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil (safe_sqrt subtype "pvsio_examples.x" "nonneg_real")))
 (afact 0 (afact-1 nil 3771058109 ("" (propax) nil nil) nil shostak)))

