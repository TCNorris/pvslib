%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%
%% This theory formalizes Rice's Theorem for the multiple-function PVS0 model:
%% 
%% The formalization uses the Recursion Theorem.
%%
%% Thiago Mendonca Ferreira Ramos, Ariane Alves Almeida Mauricio Ayala-Rincon
%% Universidade de Brasilia
%% Last modified: 29 May 2020 by Thiago MF Ramos
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
mf_pvs0_Rices_Theorem: THEORY

  BEGIN

  IMPORTING mf_pvs0_Recursion_Theorem,
  	    mf_pvs0_computable
	

  is_semantic_predicate?(P : pred[partial_recursive]) : bool =
   FORALL(a,b : partial_recursive): ( FORALL( i,o1: nat) :
   (semantic_rel(a)(i,o1) <=> semantic_rel(b)(i,o1)))
   =>  (P(a) <=> P(b))

   Generalized_Recursion_Theorem(false_val : nat, lop1 : list[[nat->nat]],lop2 : list[[[nat,nat]->nat]],p_recursivetonat : [partial_recursive[false_val,lop1,lop2]->nat]) : bool =
        FORALL( pvs0 : PVS0):
	EXISTS(print : partial_recursive ):
	LET self = (lop1,lop2,false_val, append(pvs0`4,map(offset_rec(length(pvs0`4)))(print`4))) IN
	partial_recursive?[false_val,lop1,lop2](self) AND
	FORALL(i : nat):
	semantic_rel_expr(self)(offset_rec(length(pvs0`4))(nth(print`4,0)),i,p_recursivetonat(self))

  
   Generalized_Rices_Theorem(fv : nat, op1 : list[[nat->nat]],op2 : list[[[nat,nat]->nat]],p_recursivetonat : [partial_recursive[fv,op1,op2]->nat]) : bool = LET
   is_semantic_predicate?(P : pred[partial_recursive[fv,op1,op2]]) : bool =
   FORALL(a,b : partial_recursive[fv,op1,op2]): ( FORALL( i,o1: nat) :
   (semantic_rel[nat](a)(i,o1) <=> semantic_rel[nat](b)(i,o1)))
   =>  (P(a) <=> P(b)) IN
   FORALL (P : pred[partial_recursive[fv,op1,op2]] | is_semantic_predicate?(P)) :
   (EXISTS (decider: computable[fv,op1,op2]): FORALL (pvs0: partial_recursive[fv,op1,op2]):
   (NOT semantic_rel[nat](decider)(p_recursivetonat(pvs0), fv)) IFF P(pvs0)) IFF
   (P = emptyset OR P = fullset)

   Generalized_Recursion_implies_pvs0_Rices_Theorem: LEMMA
   FORALL(fv : nat, op1: list[[nat->nat]], op2: list[[[nat,nat]->nat]],
   p_recursivetonat: [partial_recursive[fv,op1,op2]->nat]) :
   Generalized_Recursion_Theorem(fv,op1,op2,p_recursivetonat)=>
   Generalized_Rices_Theorem(fv,op1,op2,p_recursivetonat)

  Rice_theorem_for_Turing_complete_pvs0: COROLLARY
   FORALL (P : pred[partial_recursive] | is_semantic_predicate?(P)) :
   (EXISTS (decider: computable): FORALL (pvs0: partial_recursive):
   (NOT semantic_rel(decider)(p_recursive2nat(pvs0), false_val)) IFF P(pvs0)) IFF
   (P = emptyset OR P = fullset)

  END mf_pvs0_Rices_Theorem
