(map_append
 (map_append 0
  (map_append-1 nil 3760297096
   ("" (induct "l1")
    (("1" (grind) nil nil)
     ("2" (skeep*)
      (("2" (expand "append" 1 1)
        (("2" (expand "map" 1 (1 2))
          (("2" (expand "append" 1 2)
            (("2" (inst?) (("2" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((list_induction formula-decl nil list_adt nil)
    (A formal-nonempty-type-decl nil map_append nil)
    (append def-decl "list[T]" list_props nil)
    (map adt-def-decl "list[T1]" list_adt_map nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (B formal-nonempty-type-decl nil map_append nil)
    (boolean nonempty-type-decl nil booleans nil)
    (list type-decl nil list_adt nil))
   nil)))

