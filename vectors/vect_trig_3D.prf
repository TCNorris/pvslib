(vect_trig_3D
 (cos_range 0
  (cos_range-1 nil 3403546047
   ("" (skosimp*)
    (("" (expand "cos")
      (("" (lemma "dot_norm")
        (("" (inst?)
          (("" (prop)
            (("1" (cross-mult 1) (("1" (assert) nil nil)) nil)
             ("2" (cross-mult 1) (("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nz_norm_gt_0 application-judgement "posreal" vectors_3D nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (cos const-decl "real" vect_trig_3D nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_3D nil)
    (boolean nonempty-type-decl nil booleans nil)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_3D nil)
    (Nz_vector type-eq-decl nil vectors_3D nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (div_mult_pos_le1 formula-decl nil real_props nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (div_mult_pos_le2 formula-decl nil real_props nil)
    (* const-decl "real" vectors_3D nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (norm const-decl "nnreal" vectors_3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (nzreal_times_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (dot_norm formula-decl nil vectors_3D nil))
   nil
   (cos_range subtype "vect_trig_3D.cos(vect_trig_3D.u, vect_trig_3D.v)"
    "trig_range")))
 (cos_symm 0
  (cos_symm-1 nil 3427044409
   ("" (skeep)
    (("" (expand "cos")
      (("" (lemma "dot_comm") (("" (inst?) (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   ((cos const-decl "real" vect_trig_3D nil)
    (real nonempty-type-from-decl nil reals nil)
    (Vector type-eq-decl nil vectors_3D nil)
    (boolean nonempty-type-decl nil booleans nil)
    (/= const-decl "boolean" notequal nil)
    (zero const-decl "Vector" vectors_3D nil)
    (Nz_vector type-eq-decl nil vectors_3D nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (posreal_times_posreal_is_posreal application-judgement "posreal"
     real_types nil)
    (nz_norm_gt_0 application-judgement "posreal" vectors_3D nil)
    (dot_comm formula-decl nil vectors_3D nil))
   shostak)))

