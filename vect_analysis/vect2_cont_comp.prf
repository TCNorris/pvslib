(vect2_cont_comp
 (comp_vv_vv_cont 0
  (comp_vv_vv_cont-2 "" 3790093481
   ("" (skosimp*)
    (("" (typepred "vv1!1")
      (("" (typepred "vv2!1")
        (("" (expand "o ")
          (("" (expand "continuous_vv?")
            (("" (skosimp*)
              (("" (expand "continuous_vv?")
                (("" (skosimp*)
                  (("" (inst -1 "x0!1")
                    (("" (inst -2 "vv2!1(x0!1)")
                      (("" (inst -2 "epsilon!1")
                        (("" (skosimp*)
                          (("" (inst -1 "delta!1")
                            (("" (skosimp*)
                              (("" (inst + "delta!2")
                                (("" (skosimp*)
                                  (("" (inst -2 "vv2!1(x!1)")
                                    (("" (inst -1 "x!1")
                                      (("" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (comp_vv_vv_cont-1 nil 3445170848
   ("" (skosimp*)
    (("" (typepred "vv1!1")
      (("" (typepred "vv2!1")
        (("" (expand "continuous_vv")
          (("" (expand "o ")
            (("" (expand "continuous_vv?")
              (("" (skosimp*)
                (("" (expand "continuous_vv?")
                  (("" (skosimp*)
                    (("" (inst -1 "x0!1")
                      (("" (inst -2 "vv2!1(x0!1)")
                        (("" (inst -2 "epsilon!1")
                          (("" (skosimp*)
                            (("" (inst -1 "delta!1")
                              (("" (skosimp*)
                                (("" (inst + "delta!2")
                                  (("" (skosimp*)
                                    (("" (inst -2 "vv2!1(x!1)")
                                      ((""
                                        (inst -1 "x!1")
                                        (("" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous_vv? const-decl "bool" cont_vect2_vect2 nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (O const-decl "[Vect2 -> Vect2]" vect2_cont_comp nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (continuous_vv? const-decl "bool" cont_vect2_vect2 nil))
   nil))
 (comp_rv_vr_cont 0
  (comp_rv_vr_cont-1 nil 3445170604
   ("" (skosimp*)
    (("" (typepred "rv!1")
      (("" (typepred "vT!1")
        (("" (expand "continuous_vv?")
          (("" (expand "continuous_rv?")
            (("" (expand "continuous_vr?")
              (("" (skosimp*)
                (("" (expand "o ")
                  (("" (expand "continuous_vv?")
                    (("" (expand "continuous_rv?")
                      (("" (expand "continuous_vr?")
                        (("" (skosimp*)
                          (("" (inst -1 "x0!1")
                            (("" (inst -2 "vT!1(x0!1)")
                              (("" (inst -2 "epsilon!1")
                                (("" (skosimp*)
                                  (("" (inst -1 "delta!1")
                                    (("" (skosimp*)
                                      ((""
                                        (inst + "delta!2")
                                        ((""
                                          (skosimp*)
                                          ((""
                                            (inst -2 "vT!1(x!1)")
                                            ((""
                                              (assert)
                                              ((""
                                                (inst -1 "x!1")
                                                (("" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (T formal-subtype-decl nil vect2_cont_comp nil)
    (T_pred const-decl "[real -> boolean]" vect2_cont_comp nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (continuous_vv? const-decl "bool" cont_vect2_vect2 nil)
    (O const-decl "[Vect2 -> Vect2]" vect2_cont_comp nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil)
    (continuous_vv? const-decl "bool" cont_vect2_vect2 nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil))
   nil))
 (comp_vr_vv_cont 0
  (comp_vr_vv_cont-2 "" 3790093481
   ("" (skosimp*)
    (("" (typepred "vr!1")
      (("" (typepred "vv!1")
        (("" (expand "o ")
          (("" (expand "continuous_vr?")
            (("" (skosimp*)
              (("" (expand "continuous_vv?")
                (("" (expand "continuous_vv?")
                  (("" (expand "continuous_vr?")
                    (("" (skosimp*)
                      (("" (inst -1 "x0!1")
                        (("" (inst -2 "vv!1(x0!1)")
                          (("" (inst -2 "epsilon!1")
                            (("" (skosimp*)
                              (("" (inst -1 "delta!1")
                                (("" (skosimp*)
                                  (("" (inst + "delta!2")
                                    (("" (skosimp*)
                                      ((""
                                        (inst -2 "vv!1(x!1)")
                                        ((""
                                          (inst -1 "x!1")
                                          (("" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (comp_vr_vv_cont-1 nil 3445171282
   ("" (skosimp*)
    (("" (typepred "vr!1")
      (("" (typepred "vv!1")
        (("" (expand "continuous_vv")
          (("" (expand "continuous_vr")
            (("" (expand "o ")
              (("" (expand "continuous_vr?")
                (("" (skosimp*)
                  (("" (expand "continuous_vv?")
                    (("" (expand "continuous_vv?")
                      (("" (expand "continuous_vr?")
                        (("" (skosimp*)
                          (("" (inst -1 "x0!1")
                            (("" (inst -2 "vv!1(x0!1)")
                              (("" (inst -2 "epsilon!1")
                                (("" (skosimp*)
                                  (("" (inst -1 "delta!1")
                                    (("" (skosimp*)
                                      ((""
                                        (inst + "delta!2")
                                        ((""
                                          (skosimp*)
                                          ((""
                                            (inst -2 "vv!1(x!1)")
                                            ((""
                                              (inst -1 "x!1")
                                              (("" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous_vr? const-decl "bool" cont_vect2_real nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (O const-decl "[Vect2 -> real]" vect2_cont_comp nil)
    (continuous_vv? const-decl "bool" cont_vect2_vect2 nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (continuous_vv? const-decl "bool" cont_vect2_vect2 nil))
   nil))
 (comp_rr_vr_cont 0
  (comp_rr_vr_cont-2 nil 3474282447
   ("" (skosimp*)
    (("" (typepred "rr!1")
      (("" (typepred "vT!1")
        (("" (expand "continuous?")
          (("" (expand "continuous_vr?")
            (("" (skosimp*)
              (("" (expand "o ")
                (("" (inst -1 "x0!1")
                  (("" (inst -2 "vT!1(x0!1)")
                    (("" (expand "continuous_vr?")
                      (("" (expand "continuous?")
                        (("" (skosimp*)
                          (("" (inst -2 "epsilon!1")
                            (("" (skosimp*)
                              (("" (inst -1 "delta!1")
                                (("" (skosimp*)
                                  (("" (inst + "delta!2")
                                    (("" (skosimp*)
                                      ((""
                                        (inst -2 "vT!1(x!1)")
                                        ((""
                                          (assert)
                                          ((""
                                            (inst -1 "x!1")
                                            (("" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous? const-decl "bool" continuous_functions analysis)
    (T formal-subtype-decl nil vect2_cont_comp nil)
    (T_pred const-decl "[real -> boolean]" vect2_cont_comp nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (O const-decl "[Vect2 -> real]" vect2_cont_comp nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (continuous_vr? const-decl "bool" cont_vect2_real nil))
   nil)
  (comp_rr_vr_cont-1 nil 3445167288
   ("" (skosimp*)
    (("" (typepred "rr!1")
      (("" (typepred "vr!1")
        (("" (expand "continuous_vr")
          (("" (expand "continuous?")
            (("" (expand "continuous_vr?")
              (("" (skosimp*)
                (("" (expand "o ")
                  (("" (inst -1 "x0!1")
                    (("" (inst -2 "vr!1(x0!1)")
                      (("" (expand "continuous_vr?")
                        (("" (expand "continuous?")
                          (("" (skosimp*)
                            (("" (inst -2 "epsilon!1")
                              (("" (skosimp*)
                                (("" (inst -1 "delta!1")
                                  (("" (skosimp*)
                                    (("" (inst + "delta!2")
                                      ((""
                                        (skosimp*)
                                        ((""
                                          (inst -2 "vr!1(x!1)")
                                          ((""
                                            (assert)
                                            ((""
                                              (inst -1 "x!1")
                                              (("" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)) nil))
 (comp_vv_rv_cont 0
  (comp_vv_rv_cont-2 "" 3790093482
   ("" (skosimp*)
    (("" (typepred "vv!1")
      (("" (typepred "rv!1")
        (("" (expand "o ")
          (("" (expand "continuous_rv?")
            (("" (expand "continuous_vv?")
              (("" (skosimp*)
                (("" (inst -1 "x0!1")
                  (("" (inst -2 "rv!1(x0!1)")
                    (("" (expand "continuous_rv?")
                      (("" (expand "continuous_vv?")
                        (("" (skosimp*)
                          (("" (inst -2 "epsilon!1")
                            (("" (skosimp*)
                              (("" (inst -1 "delta!1")
                                (("" (skosimp*)
                                  (("" (inst + "delta!2")
                                    (("" (skosimp*)
                                      ((""
                                        (inst -2 "rv!1(x!1)")
                                        ((""
                                          (inst -1 "x!1")
                                          (("" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (comp_vv_rv_cont-1 nil 3445171406
   ("" (skosimp*)
    (("" (typepred "vv!1")
      (("" (typepred "rv!1")
        (("" (expand "continuous_rv")
          (("" (expand "continuous_vv")
            (("" (expand "o ")
              (("" (expand "continuous_rv?")
                (("" (expand "continuous_vv?")
                  (("" (skosimp*)
                    (("" (inst -1 "x0!1")
                      (("" (inst -2 "rv!1(x0!1)")
                        (("" (expand "continuous_rv?")
                          (("" (expand "continuous_vv?")
                            (("" (skosimp*)
                              (("" (inst -2 "epsilon!1")
                                (("" (skosimp*)
                                  (("" (inst -1 "delta!1")
                                    (("" (skosimp*)
                                      ((""
                                        (inst + "delta!2")
                                        ((""
                                          (skosimp*)
                                          ((""
                                            (inst -2 "rv!1(x!1)")
                                            ((""
                                              (inst -1 "x!1")
                                              (("" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous_vv? const-decl "bool" cont_vect2_vect2 nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (O const-decl "[T -> Vect2]" vect2_cont_comp nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous_vv? const-decl "bool" cont_vect2_vect2 nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (T_pred const-decl "[real -> boolean]" vect2_cont_comp nil)
    (T formal-subtype-decl nil vect2_cont_comp nil)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil))
   nil))
 (comp_rv_rr_cont 0
  (comp_rv_rr_cont-2 nil 3474282485
   ("" (skeep)
    (("" (typepred "rT")
      (("" (typepred "rv")
        (("" (expand "continuous?")
          (("" (expand "continuous_rv?")
            (("" (skosimp*)
              (("" (expand "continuous_rv?")
                (("" (expand "continuous?")
                  (("" (inst -2 "x0!1")
                    (("" (inst -1 "rT(x0!1)")
                      (("" (skosimp*)
                        (("" (expand "o ")
                          (("" (inst -1 "epsilon!1")
                            (("" (skosimp*)
                              (("" (inst -2 "delta!1")
                                (("" (skosimp*)
                                  (("" (inst + "delta!2")
                                    (("" (skosimp*)
                                      ((""
                                        (inst -2 "x!1")
                                        ((""
                                          (assert)
                                          ((""
                                            (inst -1 "rT(x!1)")
                                            (("" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous? const-decl "bool" continuous_functions analysis)
    (T formal-subtype-decl nil vect2_cont_comp nil)
    (T_pred const-decl "[real -> boolean]" vect2_cont_comp nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (O const-decl "[T -> Vect2]" vect2_cont_comp nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil))
   nil)
  (comp_rv_rr_cont-1 nil 3445167132
   ("" (skeep)
    (("" (typepred "rr")
      (("" (typepred "rv")
        (("" (expand "continuous?")
          (("" (expand "continuous_rv?")
            (("" (skosimp*)
              (("" (expand "continuous_rv")
                (("" (expand "continuous_rv?")
                  (("" (expand "continuous?")
                    (("" (inst -2 "x0!1")
                      (("" (expand "continuous_rv?")
                        (("" (inst -1 "rr(x0!1)")
                          (("" (skosimp*)
                            (("" (expand "o ")
                              (("" (inst -1 "epsilon!1")
                                (("" (skosimp*)
                                  (("" (inst -2 "delta!1")
                                    (("" (skosimp*)
                                      ((""
                                        (inst + "delta!2")
                                        ((""
                                          (skosimp*)
                                          ((""
                                            (inst -2 "x!1")
                                            ((""
                                              (assert)
                                              ((""
                                                (inst -1 "rr(x!1)")
                                                (("" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Vect2 type-eq-decl nil vectors_2D_def vectors)) nil))
 (comp_vr_rv_cont 0
  (comp_vr_rv_cont-2 "" 3790093482
   ("" (skosimp*)
    (("" (typepred "rv!1")
      (("" (typepred "vr!1")
        (("" (expand "continuous?")
          (("" (expand "continuous_vr?")
            (("" (expand "continuous_rv?")
              (("" (skosimp*)
                (("" (expand "o ")
                  (("" (expand "continuous?")
                    (("" (expand "continuous_vr?")
                      (("" (expand "continuous_rv?")
                        (("" (skosimp*)
                          (("" (inst?)
                            (("" (inst -1 "epsilon!1")
                              (("" (skosimp*)
                                (("" (inst -2 "x0!1")
                                  (("" (inst -2 "delta!1")
                                    (("" (skosimp*)
                                      ((""
                                        (inst + "delta!2")
                                        ((""
                                          (skosimp*)
                                          ((""
                                            (inst?)
                                            ((""
                                              (inst?)
                                              (("" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (comp_vr_rv_cont-1 nil 3445167957
   ("" (skosimp*)
    (("" (typepred "rv!1")
      (("" (typepred "vr!1")
        (("" (expand "continuous_vr")
          (("" (expand "continuous_rv")
            (("" (expand "continuous?")
              (("" (expand "continuous_vr?")
                (("" (expand "continuous_rv?")
                  (("" (skosimp*)
                    (("" (expand "o ")
                      (("" (expand "continuous?")
                        (("" (expand "continuous_vr?")
                          (("" (expand "continuous_rv?")
                            (("" (skosimp*)
                              (("" (inst?)
                                (("" (inst -1 "epsilon!1")
                                  (("" (skosimp*)
                                    (("" (inst -2 "x0!1")
                                      ((""
                                        (inst -2 "delta!1")
                                        ((""
                                          (skosimp*)
                                          ((""
                                            (inst + "delta!2")
                                            ((""
                                              (skosimp*)
                                              ((""
                                                (inst?)
                                                ((""
                                                  (inst?)
                                                  (("" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (T formal-subtype-decl nil vect2_cont_comp nil)
    (T_pred const-decl "[real -> boolean]" vect2_cont_comp nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (O const-decl "[T -> real]" vect2_cont_comp nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil))
   shostak)))

