(vect2_cont_comp2
 (comp_tt_vt_cont 0
  (comp_tt_vt_cont-1 nil 3474287986
   ("" (skosimp*)
    (("" (typepred "tt!1")
      (("" (typepred "vT!1")
        (("" (expand "continuous?")
          (("" (expand "continuous_vr?")
            (("" (skosimp*)
              (("" (expand "o ")
                (("" (inst -1 "x0!1")
                  (("" (inst -2 "vT!1(x0!1)")
                    (("" (expand "continuous_vr?")
                      (("" (expand "continuous?")
                        (("" (skosimp*)
                          (("" (inst -2 "epsilon!1")
                            (("" (skosimp*)
                              (("" (inst -1 "delta!1")
                                (("" (skosimp*)
                                  (("" (inst + "delta!2")
                                    (("" (skosimp*)
                                      ((""
                                        (inst -2 "vT!1(x!1)")
                                        ((""
                                          (assert)
                                          ((""
                                            (inst -1 "x!1")
                                            (("" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T2 formal-subtype-decl nil vect2_cont_comp2 nil)
    (T2_pred const-decl "[real -> boolean]" vect2_cont_comp2 nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (T1 formal-subtype-decl nil vect2_cont_comp2 nil)
    (T1_pred const-decl "[real -> boolean]" vect2_cont_comp2 nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (O const-decl "[Vect2 -> T2]" vect2_cont_comp2 nil)
    (continuous_vr? const-decl "bool" cont_vect2_real nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   nil))
 (comp_rv_tt_cont 0
  (comp_rv_tt_cont-1 nil 3474288047
   ("" (skeep)
    (("" (typepred "tt")
      (("" (typepred "rv")
        (("" (expand "continuous?")
          (("" (expand "continuous_rv?")
            (("" (skosimp*)
              (("" (expand "continuous_rv?")
                (("" (expand "continuous?")
                  (("" (inst -2 "x0!1")
                    (("" (inst -1 "tt(x0!1)")
                      (("" (skosimp*)
                        (("" (expand "o ")
                          (("" (inst -1 "epsilon!1")
                            (("" (skosimp*)
                              (("" (inst -2 "delta!1")
                                (("" (skosimp*)
                                  (("" (inst + "delta!2")
                                    (("" (skosimp*)
                                      ((""
                                        (inst -2 "x!1")
                                        ((""
                                          (assert)
                                          ((""
                                            (inst -1 "tt(x!1)")
                                            (("" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T2 formal-subtype-decl nil vect2_cont_comp2 nil)
    (T2_pred const-decl "[real -> boolean]" vect2_cont_comp2 nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (T1 formal-subtype-decl nil vect2_cont_comp2 nil)
    (T1_pred const-decl "[real -> boolean]" vect2_cont_comp2 nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (continuous? const-decl "bool" continuous_functions analysis)
    (O const-decl "[T1 -> Vect2]" vect2_cont_comp2 nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (continuous_rv? const-decl "bool" cont_real_vect2 nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors))
   nil)))

