(Sig_denot
 (denotation_TCC1 0
  (denotation_TCC1-1 nil 3634545547 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[Sig_form])" Sig_form_adt nil)) nil
   (denotation termination "Sig_denot.denotation(Sig_denot.t1)" "nil")))
 (denotation_TCC2 0
  (denotation_TCC2-1 nil 3634545547 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[Sig_form])" Sig_form_adt nil)) nil
   (denotation termination "Sig_denot.denotation(Sig_denot.t2)" "nil")))
 (denotation_TCC3 0
  (denotation_TCC3-1 nil 3634545547 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[Sig_form])" Sig_form_adt nil)) nil
   (denotation termination "Sig_denot.denotation(Sig_denot.t1)" "nil")))
 (denotation_TCC4 0
  (denotation_TCC4-1 nil 3634545547 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[Sig_form])" Sig_form_adt nil)) nil
   (denotation termination "Sig_denot.denotation(Sig_denot.t2)" "nil")))
 (denotation_TCC5 0
  (denotation_TCC5-1 nil 3634545547 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[Sig_form])" Sig_form_adt nil)) nil
   (denotation termination "Sig_denot.denotation(Sig_denot.t1)" "nil")))
 (denotation_TCC6 0
  (denotation_TCC6-1 nil 3634545547 ("" (termination-tcc) nil nil)
   ((<< adt-def-decl "(strict_well_founded?[Sig_form])" Sig_form_adt nil)) nil
   (denotation termination "Sig_denot.denotation(Sig_denot.t2)" "nil")))
 (denot_charac 0
  (denot_charac-1 nil 3634545549
   ("" (induct "s")
    (("1" (skeep) (("1" (expand "v_form") (("1" (grind) nil nil)) nil)) nil)
     ("2" (skeep)
      (("2" (skeep) (("2" (expand "v_form") (("2" (grind) nil nil)) nil))
        nil))
      nil)
     ("3" (skeep)
      (("3" (skeep)
        (("3" (inst -1 "i")
          (("3" (inst -2 "i")
            (("3" (split)
              (("1" (flatten)
                (("1" (expand "member")
                  (("1" (expand "denotation" 1)
                    (("1" (assert)
                      (("1" (lemma "caractv_form_and2")
                        (("1" (inst -1 "op_and1_var" "op_and2_var" "i")
                          (("1" (assert)
                            (("1" (flatten) (("1" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "member")
                  (("2" (expand "denotation" -1)
                    (("2" (hide -2 -4)
                      (("2" (lemma "caractv_form_and2")
                        (("2" (inst -1 "op_and1_var" "op_and2_var" "i")
                          (("2" (flatten)
                            (("2" (hide -1) (("2" (grind) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("4" (skeep)
      (("4" (skeep)
        (("4" (inst -1 "i")
          (("4" (inst -2 "i")
            (("4" (split)
              (("1" (flatten)
                (("1" (expand "member")
                  (("1" (expand "denotation" 1)
                    (("1" (assert)
                      (("1" (hide -5 -3)
                        (("1" (lemma "caractv_form_or2")
                          (("1" (inst -1 "op_or1_var" "op_or2_var" "i")
                            (("1" (flatten)
                              (("1" (assert)
                                (("1" (hide -2)
                                  (("1" (split)
                                    (("1" (assert) (("1" (grind) nil nil))
                                      nil)
                                     ("2" (assert) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (flatten)
                (("2" (expand "member")
                  (("2" (expand "denotation" -1)
                    (("2" (hide -2 -4)
                      (("2" (assert)
                        (("2" (expand "union")
                          (("2" (split)
                            (("1" (expand "member")
                              (("1" (assert)
                                (("1" (lemma "caractv_form_or2")
                                  (("1"
                                    (inst -1 "op_or1_var" "op_or2_var" "i")
                                    (("1" (flatten) (("1" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (expand "member")
                              (("2" (assert)
                                (("2" (lemma "caractv_form_or2")
                                  (("2"
                                    (inst -1 "op_or1_var" "op_or2_var" "i")
                                    (("2" (flatten) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("5" (skeep)
      (("5" (skeep)
        (("5" (split)
          (("1" (flatten)
            (("1" (expand "member")
              (("1" (expand "denotation" 1)
                (("1" (expand "intersection")
                  (("1" (split)
                    (("1" (expand "member")
                      (("1" (expand "union")
                        (("1" (lemma "caractv_form_imp2")
                          (("1" (inst -1 "op_imp1_var" "op_imp2_var" "i")
                            (("1" (flatten)
                              (("1" (hide -2)
                                (("1" (split)
                                  (("1" (inst -3 "i")
                                    (("1" (expand "member" 1)
                                      (("1"
                                        (hide 2 -4 -2)
                                        (("1"
                                          (expand "comp")
                                          (("1" (grind) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -3 -2)
                                    (("2" (inst -2 "i")
                                      (("2" (grind) nil nil)) nil))
                                    nil)
                                   ("3" (hide -2 -4)
                                    (("3" (inst -2 "i")
                                      (("3"
                                        (hide 2)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (expand "member")
                                            (("3" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("4" (propax) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "member")
                      (("2" (lemma " caractv_form_imp2")
                        (("2" (inst -1 "op_imp1_var" "op_imp2_var" "i")
                          (("2" (flatten)
                            (("2" (hide -2)
                              (("2" (lemma "union_bottom_classic")
                                (("2"
                                  (inst -1 "comp(denotation(op_imp1_var))"
                                   "denotation(op_imp2_var)")
                                  (("2" (replace -1)
                                    (("2" (hide -1)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (split)
                                          (("1"
                                            (hide -2)
                                            (("1"
                                              (expand "union")
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (hide 2)
                                                  (("1"
                                                    (lemma "caract_val_zero")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "op_imp1_var"
                                                       "i")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (hide -2)
                                                          (("1"
                                                            (expand "member")
                                                            (("1"
                                                              (expand
                                                               "bottom")
                                                              (("1"
                                                                (inst
                                                                 1
                                                                 "RT(i)")
                                                                (("1"
                                                                  (split)
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (lemma
                                                                     "RT_ord")
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "i")
                                                                      (("2"
                                                                        (grind)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (hide -2)
                                            (("2"
                                              (expand "union")
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (hide 1)
                                                  (("2"
                                                    (lemma "val_two")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       "op_imp2_var"
                                                       "i")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide -2)
                                                          (("2"
                                                            (inst -3 "RT(i)")
                                                            (("2"
                                                              (hide -2)
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (lemma
                                                                   "classic_total")
                                                                  (("2"
                                                                    (inst
                                                                     -1
                                                                     "denotation(op_imp2_var)"
                                                                     "i")
                                                                    (("2"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (lemma "val_one")
                                            (("3"
                                              (inst -1 "op_imp2_var" "i")
                                              (("3"
                                                (assert)
                                                (("3"
                                                  (flatten)
                                                  (("3"
                                                    (assert)
                                                    (("3"
                                                      (hide -2 -3 -4 -5)
                                                      (("3"
                                                        (expand "union")
                                                        (("3"
                                                          (flatten)
                                                          (("3"
                                                            (hide 1)
                                                            (("3"
                                                              (expand
                                                               "member")
                                                              (("3"
                                                                (lemma
                                                                 "classic_total")
                                                                (("3"
                                                                  (inst
                                                                   -1
                                                                   "denotation(op_imp2_var)"
                                                                   "i")
                                                                  (("3"
                                                                    (inst
                                                                     -3
                                                                     "RT(i)")
                                                                    (("3"
                                                                      (grind)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (expand "member" -1)
              (("2" (expand "denotation" -1)
                (("2" (expand "intersection")
                  (("2" (flatten)
                    (("2" (lemma "caractv_form_imp2")
                      (("2" (inst -1 "op_imp1_var" "op_imp2_var" "i")
                        (("2" (flatten)
                          (("2" (hide -1)
                            (("2" (split)
                              (("1" (propax) nil nil)
                               ("2" (hide 2)
                                (("2" (flatten)
                                  (("2" (expand "member" -1)
                                    (("2" (lemma "classic_total")
                                      (("2"
                                        (inst
                                         -1
                                         "union(comp(denotation(op_imp1_var)),denotation(op_imp2_var))"
                                         "i")
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (hide -2)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (expand "member" -1)
                                                (("2"
                                                  (expand "member" -3)
                                                  (("2"
                                                    (expand "union" -1)
                                                    (("2"
                                                      (expand "union" -2)
                                                      (("2"
                                                        (hide -3)
                                                        (("2"
                                                          (inst-cp -3 "i")
                                                          (("2"
                                                            (inst-cp -5 "i")
                                                            (("2"
                                                              (flatten)
                                                              (("2"
                                                                (inst-cp
                                                                 -3
                                                                 "RT(i)")
                                                                (("2"
                                                                  (inst
                                                                   -7
                                                                   "RT(i)")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (split)
                                                                        (("1"
                                                                          (split)
                                                                          (("1"
                                                                            (split)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (split)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             4
                                                                                             7
                                                                                             8)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2)
                                                                                              (("2"
                                                                                                (inst-cp
                                                                                                 -3
                                                                                                 "i")
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (typepred
                                                                                                       "v_form(op_imp1_var, i)")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "s3?")
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             4
                                                                                             5
                                                                                             6
                                                                                             9
                                                                                             10)
                                                                                            (("2"
                                                                                              (inst
                                                                                               -3
                                                                                               "i")
                                                                                              (("2"
                                                                                                (typepred
                                                                                                 "v_form(op_imp1_var, i)")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "s3?")
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (split)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (split)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "caract_val_nozero")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "op_imp2_var"
                                                                                               "i")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (hide
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       1
                                                                                                       2
                                                                                                       3
                                                                                                       4
                                                                                                       6
                                                                                                       8)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "v_form(op_imp2_var, i)")
                                                                                                        (("2"
                                                                                                          (grind)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             4
                                                                                             5
                                                                                             6
                                                                                             7
                                                                                             9
                                                                                             10)
                                                                                            (("2"
                                                                                              (inst-cp
                                                                                               -3
                                                                                               "RT(i)")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "comp"
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "member")
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (typepred
                                                                                                         "v_form(op_imp1_var, i)")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "s3?")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "<=")
                                                                                                            (("2"
                                                                                                              (split)
                                                                                                              (("1"
                                                                                                                (cut
                                                                                                                 "v_form(op_imp1_var, i)= 1 OR v_form(op_imp1_var, i)= 0")
                                                                                                                (("1"
                                                                                                                  (split)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "val_one")
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "op_imp1_var"
                                                                                                                       "i")
                                                                                                                      (("1"
                                                                                                                        (grind)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (lemma
                                                                                                                 "val_two")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "op_imp1_var"
                                                                                                                   "i")
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (split)
                                                                          (("1"
                                                                            (split)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (typepred
                                                                                             "v_form(op_imp1_var, i)")
                                                                                            (("2"
                                                                                              (grind)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (split)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (hide
                                                                                             1
                                                                                             2
                                                                                             3
                                                                                             4
                                                                                             7
                                                                                             8)
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "v_form(op_imp1_var, i)")
                                                                                              (("2"
                                                                                                (grind)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (split)
                                                                            (("1"
                                                                              (split)
                                                                              (("1"
                                                                                (split)
                                                                                (("1"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "caract_val_nozero")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "op_imp2_var"
                                                                                               "i")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "v_form(op_imp2_var, i)")
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (split)
                                                                                (("1"
                                                                                  (propax)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (split)
                                                                                  (("1"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (split)
                                                                                    (("1"
                                                                                      (propax)
                                                                                      nil
                                                                                      nil)
                                                                                     ("2"
                                                                                      (split)
                                                                                      (("1"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (split)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (lemma
                                                                                             "caract_val_nozero")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "op_imp2_var"
                                                                                               "i")
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "v_form(op_imp2_var, i)")
                                                                                                  (("2"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (split)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil)
                                                                                         ("2"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (propax)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((bottom const-decl "set[I]" Sig_prop nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (R_ord2 const-decl "bool" Sig_prop nil)
    (R_ord const-decl "bool" Sig_prop nil)
    (RT_ord formula-decl nil Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IC type-eq-decl nil Sig_prop nil) (RT const-decl "IC" Sig_prop nil)
    (caract_val_zero formula-decl nil Sig_int nil)
    (classic_total formula-decl nil Sig_prop nil)
    (val_two formula-decl nil Sig_int nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (val_one formula-decl nil Sig_int nil)
    (union_bottom_classic formula-decl nil Sig_prop nil)
    (caractv_form_imp2 formula-decl nil Sig_int nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (caract_val_nozero formula-decl nil Sig_int nil)
    (<= const-decl "bool" reals nil)
    (caractv_form_or2 formula-decl nil Sig_int nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (union const-decl "set" sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nonneg_rat_max application-judgement
     "{s: nonneg_rat | s >= q AND s >= r}" real_defs nil)
    (nat_max application-judgement "{k: nat | i <= k AND j <= k}" real_defs
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nat_min application-judgement "{k: nat | k <= i AND k <= j}" real_defs
     nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (intersection const-decl "set" sets nil)
    (caractv_form_and2 formula-decl nil Sig_int nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (Sig_form_induction formula-decl nil Sig_form_adt nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (member const-decl "bool" sets nil) (set type-eq-decl nil sets nil)
    (v_form def-decl "S3" Sig_int nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (Sig_form type-decl nil Sig_form_adt nil))
   shostak))
 (denotation_include 0
  (denotation_include-1 nil 3635137887
   ("" (skeep)
    (("" (lemma "denot_charac")
      (("" (inst -1 "s" "i")
        (("" (assert)
          (("" (lemma "val_two")
            (("" (inst -1 "s" "i")
              (("" (assert)
                (("" (lemma "denot_charac")
                  (("" (inst -1 "s" "RT(i)") (("" (grind) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denot_charac formula-decl nil Sig_denot nil)
    (RT const-decl "IC" Sig_prop nil) (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (val_two formula-decl nil Sig_int nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak))
 (denotation_total_closed 0
  (denotation_total_closed-1 nil 3637651147
   ("" (skeep)
    (("" (expand "total_closed?")
      (("" (skeep)
        (("" (lemma "denotation_include")
          (("" (inst -1 "s" "i!1") (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((total_closed? const-decl "bool" Sig_prop nil)
    (denotation_include formula-decl nil Sig_denot nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak))
 (denot_charac_0 0
  (denot_charac_0-1 nil 3635068487
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (typepred "v_form(s, i)")
          (("1" (cut "v_form(s, i) = 0 OR v_form(s, i) = 1")
            (("1" (split)
              (("1" (propax) nil nil)
               ("2" (lemma "val_one")
                (("2" (inst -1 "s" "i")
                  (("2" (split)
                    (("1" (lemma "denot_charac")
                      (("1" (inst -1 "s" "RT(i)") (("1" (grind) nil nil))
                        nil))
                      nil)
                     ("2" (grind) nil nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (expand "s3?")
              (("2" (flatten)
                (("2"
                  (cut
                   "v_form(s, i) = 0 OR v_form(s, i) = 1 OR v_form(s, i) = 2")
                  (("1" (split)
                    (("1" (propax) nil nil) ("2" (propax) nil nil)
                     ("3" (lemma "denotation_include")
                      (("3" (inst -1 "s" "i")
                        (("3" (lemma "denot_charac")
                          (("3" (inst -1 "s" "i") (("3" (grind) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (lemma "val_two")
        (("2" (inst -1 "s" "i")
          (("2" (assert)
            (("2" (lemma "denot_charac")
              (("2" (inst -1 "s" "RT(i)")
                (("2" (lemma "caract_val_zero")
                  (("2" (inst -1 "s" "i") (("2" (grind) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((v_form def-decl "S3" Sig_int nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (s3? const-decl "bool" Sig_prop nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (denotation_include formula-decl nil Sig_denot nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (denot_charac formula-decl nil Sig_denot nil)
    (IC type-eq-decl nil Sig_prop nil) (RT const-decl "IC" Sig_prop nil)
    (val_one formula-decl nil Sig_int nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (caract_val_zero formula-decl nil Sig_int nil)
    (val_two formula-decl nil Sig_int nil))
   shostak))
 (denotation_sub 0
  (denotation_sub-1 nil 3635137894
   ("" (skeep)
    (("" (expand "subset?")
      (("" (skeep)
        (("" (lemma "denotation_include")
          (("" (inst -1 "s" "x")
            (("" (assert)
              (("" (typepred "RT(x)")
                (("" (lemma "RT_ord")
                  (("" (inst -1 "x")
                    (("" (expand "member" 1)
                      (("" (expand "bottom")
                        (("" (inst 1 "RT(x)") (("" (grind) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset? const-decl "bool" sets nil)
    (denotation_include formula-decl nil Sig_denot nil)
    (RT_ord formula-decl nil Sig_prop nil) (member const-decl "bool" sets nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (R_ord const-decl "bool" Sig_prop nil)
    (R_ord2 const-decl "bool" Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IC type-eq-decl nil Sig_prop nil) (RT const-decl "IC" Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak))
 (denotation_sub_comp 0
  (denotation_sub_comp-1 nil 3635749134
   ("" (skeep)
    (("" (lemma "subset_comp")
      (("" (lemma "denotation_sub")
        (("" (inst -1 "s" "i")
          ((""
            (inst -2 "bottom(extend[I[T], IC[T], bool, FALSE]
                              (classic(denotation(s))))" "denotation(s)")
            (("" (grind) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil Sig_denot nil)
    (subset_comp formula-decl nil Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil) (set type-eq-decl nil sets nil)
    (denotation_sub formula-decl nil Sig_denot nil))
   shostak))
 (comp_denotation 0
  (comp_denotation-1 nil 3635751178
   ("" (skeep)
    (("" (expand "subset?")
      (("" (skeep)
        (("" (expand "member")
          (("" (expand "bottom")
            (("" (skeep)
              (("" (expand "comp")
                (("" (expand "member")
                  (("" (skeep)
                    (("" (lemma "R_ord_same")
                      (("" (inst-cp -1 "x" "j")
                        (("" (assert)
                          (("" (inst -1 "x" "j!1")
                            (("" (assert)
                              (("" (lemma "RT_ord_mon")
                                (("" (inst-cp -1 "x" "j")
                                  (("" (inst -1 "x" "j!1")
                                    (("" (assert)
                                      ((""
                                        (hide -3 -4 -6 -8)
                                        ((""
                                          (replace -1)
                                          ((""
                                            (lemma "RT_classic")
                                            ((""
                                              (inst-cp -1 "j")
                                              (("1"
                                                (inst -1 "j!1")
                                                (("1" (grind) nil nil)
                                                 ("2" (grind) nil nil))
                                                nil)
                                               ("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((subset? const-decl "bool" sets nil) (member const-decl "bool" sets nil)
    (R_ord_same formula-decl nil Sig_prop nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (j skolem-const-decl "I[T]" Sig_denot nil)
    (IC type-eq-decl nil Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil)
    (j!1 skolem-const-decl "I[T]" Sig_denot nil)
    (RT_classic formula-decl nil Sig_prop nil)
    (RT_ord_mon formula-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil))
   shostak))
 (sub_comp_denotation 0
  (sub_comp_denotation-1 nil 3635752175
   ("" (skeep)
    (("" (lemma "denotation_sub_comp")
      (("" (lemma "comp_denotation")
        (("" (inst -1 "s" "i")
          (("" (inst -2 "s" "i")
            (("" (lemma "subset_transitive[I[T]]")
              ((""
                (inst -1 "bottom(extend[I[T], IC[T], bool, FALSE]
                           (classic(comp(denotation(s)))))"
                 "comp(bottom(extend[I[T], IC[T], bool, FALSE]
                                (classic(denotation(s)))))"
                 "comp(denotation(s))")
                (("" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation_sub_comp formula-decl nil Sig_denot nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (subset_transitive formula-decl nil sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil) (set type-eq-decl nil sets nil)
    (comp_denotation formula-decl nil Sig_denot nil))
   shostak))
 (coro_denotation_sub 0
  (coro_denotation_sub-1 nil 3635753417
   ("" (skeep)
    (("" (lemma "intersection_subset2[I[T]]")
      (("" (inst -1 "denotation(s)" "bottom(classic(denotation(s)))")
        (("" (lemma "denotation_sub")
          (("" (inst -1 "s" "i") (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (intersection_subset2 formula-decl nil sets_lemmas nil)
    (denotation_sub formula-decl nil Sig_denot nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil) (set type-eq-decl nil sets nil))
   shostak))
 (coro_sub_comp_denotation 0
  (coro_sub_comp_denotation-1 nil 3635753534
   ("" (skeep)
    (("" (lemma "intersection_subset2[I[T]]")
      ((""
        (inst -1 "bottom(classic(comp(denotation(s))))" "comp(denotation(s))")
        (("" (lemma "sub_comp_denotation")
          (("" (inst -1 "s" "i") (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (intersection_subset2 formula-decl nil sets_lemmas nil)
    (sub_comp_denotation formula-decl nil Sig_denot nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil) (set type-eq-decl nil sets nil))
   shostak))
 (denotation_imp 0
  (denotation_imp-1 nil 3636100871
   ("" (skeep)
    (("" (expand "denotation" 1 1)
      (("" (lemma "union_bottom_classic")
        (("" (inst -1 "comp(denotation(t1))" "denotation(t2)")
          (("" (replace -1)
            (("" (lemma "distribute_intersection_union[I]")
              ((""
                (inst -1 "union(comp(denotation(t1)), denotation(t2))"
                 "bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(comp(denotation(t1)))))"
                 "bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(denotation(t2))))")
                (("" (replace -1)
                  (("" (hide -1)
                    (("" (lemma "intersection_commutative[I]")
                      ((""
                        (inst-cp -1
                         "union(comp(denotation(t1)), denotation(t2))"
                         "bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(comp(denotation(t1)))))")
                        (("" (replace -2)
                          (("" (hide -2)
                            ((""
                              (inst -1
                               "union(comp(denotation(t1)), denotation(t2))"
                               "bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(denotation(t2))))")
                              (("" (replace -1)
                                (("" (hide -1)
                                  ((""
                                    (lemma "distribute_intersection_union[I]")
                                    ((""
                                      (inst-cp
                                       -1
                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(comp(denotation(t1)))))"
                                       "comp(denotation(t1))"
                                       "denotation(t2)")
                                      ((""
                                        (replace -2)
                                        ((""
                                          (inst
                                           -1
                                           "bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(denotation(t2))))"
                                           "comp(denotation(t1))"
                                           "denotation(t2)")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1 -2)
                                              ((""
                                                (lemma
                                                 "coro_sub_comp_denotation")
                                                ((""
                                                  (inst -1 "t1" "i")
                                                  ((""
                                                    (replace -1)
                                                    ((""
                                                      (hide -1)
                                                      ((""
                                                        (lemma
                                                         "coro_denotation_sub")
                                                        ((""
                                                          (inst -1 "t2" "i")
                                                          ((""
                                                            (lemma
                                                             "intersection_commutative[I]")
                                                            ((""
                                                              (inst
                                                               -1
                                                               "bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2))))"
                                                               "denotation(t2)")
                                                              ((""
                                                                (replace -1)
                                                                ((""
                                                                  (replace -2)
                                                                  ((""
                                                                    (hide
                                                                     -1
                                                                     -2)
                                                                    ((""
                                                                      (lemma
                                                                       "union_associative[I]")
                                                                      ((""
                                                                        (inst
                                                                         -1
                                                                         "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1)))))"
                                                                         "intersection(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1))))),
                               denotation(t2))"
                                                                         "union(intersection(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2)))),
                               comp(denotation(t1))),
                  denotation(t2))")
                                                                        ((""
                                                                          (replace
                                                                           -1)
                                                                          ((""
                                                                            (hide
                                                                             -1)
                                                                            ((""
                                                                              (lemma
                                                                               "union_commutative[I]")
                                                                              ((""
                                                                                (inst
                                                                                 -1
                                                                                 "intersection(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1))))),
                               denotation(t2))"
                                                                                 "union(intersection(bottom
                                     (extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2)))),
                                     comp(denotation(t1))),
                        denotation(t2))")
                                                                                ((""
                                                                                  (replace
                                                                                   -1)
                                                                                  ((""
                                                                                    (hide
                                                                                     -1)
                                                                                    ((""
                                                                                      (lemma
                                                                                       "union_associative[I]")
                                                                                      ((""
                                                                                        (inst
                                                                                         -1
                                                                                         "intersection(bottom
                                     (extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2)))),
                                     comp(denotation(t1)))"
                                                                                         "denotation(t2)"
                                                                                         "intersection(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1))))),
                               denotation(t2))")
                                                                                        ((""
                                                                                          (replace
                                                                                           -1)
                                                                                          ((""
                                                                                            (hide
                                                                                             -1)
                                                                                            ((""
                                                                                              (lemma
                                                                                               "simplificat")
                                                                                              ((""
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(t2)"
                                                                                                 "bottom
                                     (extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1)))))")
                                                                                                ((""
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  ((""
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    ((""
                                                                                                      (lemma
                                                                                                       "union_associative[I]")
                                                                                                      ((""
                                                                                                        (inst
                                                                                                         -1
                                                                                                         "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(comp(denotation(t1)))))"
                                                                                                         "intersection(comp(denotation(t1)),
                                bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic(denotation(t2)))))"
                                                                                                         "denotation(t2)")
                                                                                                        ((""
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          ((""
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            ((""
                                                                                                              (lemma
                                                                                                               "intersection_commutative[I]")
                                                                                                              ((""
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2))))"
                                                                                                                 "comp(denotation(t1))")
                                                                                                                ((""
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  ((""
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation def-decl "set[I[T]]" Sig_denot nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil) (set type-eq-decl nil sets nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (distribute_intersection_union formula-decl nil sets_lemmas nil)
    (intersection_commutative formula-decl nil sets_lemmas nil)
    (union_associative formula-decl nil sets_lemmas nil)
    (union_commutative formula-decl nil sets_lemmas nil)
    (simplificat formula-decl nil Sig_prop nil)
    (intersection const-decl "set" sets nil)
    (coro_denotation_sub formula-decl nil Sig_denot nil)
    (coro_sub_comp_denotation formula-decl nil Sig_denot nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (union const-decl "set" sets nil)
    (union_bottom_classic formula-decl nil Sig_prop nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak))
 (denotation_imp_sub_r 0
  (denotation_imp_sub_r-1 nil 3638189830
   ("" (skeep)
    (("" (expand "subset?")
      (("" (skeep)
        (("" (lemma "denotation_imp")
          (("" (inst -1 "t1" "t2" "i")
            (("" (replace -1) (("" (grind) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((subset? const-decl "bool" sets nil)
    (denotation_imp formula-decl nil Sig_denot nil)
    (union const-decl "set" sets nil) (intersection const-decl "set" sets nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (R_ord2 const-decl "bool" Sig_prop nil) (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (member const-decl "bool" sets nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak))
 (mon_imp_left 0
  (mon_imp_left-1 nil 3637381038
   ("" (skeep)
    (("" (expand "denotation" 1)
      (("" (lemma "union_monot")
        (("" (inst -1 "denotation(t1)" "denotation(t2)" "comp(denotation(s))")
          (("" (assert)
            (("" (lemma "bottom_monot")
              (("" (inst -1 "denotation(t1)" "denotation(t2)")
                (("" (assert)
                  (("" (lemma "union_monot")
                    ((""
                      (inst -1
                       "bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(t1))))"
                       "bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(t2))))"
                       "bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(s)))))")
                      (("" (assert)
                        (("" (lemma "intersection_monot2")
                          ((""
                            (inst -1
                             "union(comp(denotation(s)), denotation(t1))"
                             "union(comp(denotation(s)), denotation(t2))"
                             "bottom(extend[I[T], IC[T], bool, FALSE](classic(union(comp(denotation(s)), denotation(t1)))))"
                             "bottom(extend[I[T], IC[T], bool, FALSE](classic(union(comp(denotation(s)), denotation(t2)))))")
                            (("" (assert)
                              (("" (lemma "union_bottom_classic")
                                ((""
                                  (inst-cp -1 "comp(denotation(s))"
                                   "denotation(t1)")
                                  ((""
                                    (inst -1 "comp(denotation(s))"
                                     "denotation(t2)")
                                    (("" (grind) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation def-decl "set[I[T]]" Sig_denot nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil) (set type-eq-decl nil sets nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (bottom_monot formula-decl nil Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IC type-eq-decl nil Sig_prop nil) (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (intersection_monot2 formula-decl nil Sig_prop nil)
    (union_bottom_classic formula-decl nil Sig_prop nil)
    (union const-decl "set" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (union_monot formula-decl nil Sig_prop nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak))
 (mon_imp_right 0
  (mon_imp_right-1 nil 3637381047
   ("" (skeep)
    (("" (expand "denotation" 1)
      (("" (lemma "union_commutative[I]")
        (("" (inst-cp -1 "comp(denotation(t2))" "denotation(s)")
          (("" (inst-cp -1 "comp(denotation(t1))" "denotation(s)")
            ((""
              (inst-cp -1
               "bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(t2)))))"
               "bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(s))))")
              ((""
                (inst -1
                 "bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(t1)))))"
                 "bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(s))))")
                (("" (lemma "union_bottom_classic")
                  (("" (inst-cp -1 "comp(denotation(t2))" "denotation(s)")
                    (("" (inst -1 "comp(denotation(t1))" "denotation(s)")
                      (("" (assert)
                        (("" (lemma "union_monot")
                          ((""
                            (inst-cp -1 "comp(denotation(t2))"
                             "comp(denotation(t1))" "denotation(s)")
                            ((""
                              (inst -1
                               "bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(t2)))))"
                               "bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(t1)))))"
                               "bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(s))))")
                              (("" (lemma "subset_comp")
                                ((""
                                  (inst-cp -1 "denotation(t2)"
                                   "denotation(t1)")
                                  (("" (assert)
                                    (("" (lemma "intersection_monot2")
                                      ((""
                                        (hide -2)
                                        ((""
                                          (inst
                                           -1
                                           "union(comp(denotation(t2)), denotation(s))"
                                           "union(comp(denotation(t1)), denotation(s))"
                                           "bottom(extend[I[T], IC[T], bool, FALSE](classic(union(comp(denotation(t2)), denotation(s)))))"
                                           "bottom(extend[I[T], IC[T], bool, FALSE](classic(union(comp(denotation(t1)), denotation(s)))))")
                                          ((""
                                            (replace -10 -4 :dir rl)
                                            ((""
                                              (replace -9 -4 :dir rl)
                                              ((""
                                                (lemma "bottom_monot")
                                                ((""
                                                  (inst
                                                   -1
                                                   "comp(denotation(t2))"
                                                   "comp(denotation(t1))")
                                                  (("" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation def-decl "set[I[T]]" Sig_denot nil)
    (set type-eq-decl nil sets nil) (comp const-decl "set[I]" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IC type-eq-decl nil Sig_prop nil) (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (union_bottom_classic formula-decl nil Sig_prop nil)
    (union_monot formula-decl nil Sig_prop nil)
    (intersection_monot2 formula-decl nil Sig_prop nil)
    (union const-decl "set" sets nil)
    (bottom_monot formula-decl nil Sig_prop nil)
    (subset_comp formula-decl nil Sig_prop nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (union_commutative formula-decl nil sets_lemmas nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil))
   shostak))
 (denotation_inclusion 0
  (denotation_inclusion-1 nil 3637651625
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (lemma " union_sub_tot")
          (("1" (inst -1 "denotation(t1)" "denotation(t2)")
            (("1" (flatten)
              (("1" (hide -2)
                (("1" (expand "member")
                  (("1" (assert)
                    (("1" (expand "denotation" 1)
                      (("1" (expand "intersection")
                        (("1" (skeep)
                          (("1" (inst -1 "i")
                            (("1" (split)
                              (("1" (grind) nil nil)
                               ("2" (expand "member")
                                (("2" (expand "bottom")
                                  (("2" (inst 1 "RT(i)")
                                    (("2" (split)
                                      (("1"
                                        (expand "member")
                                        (("1" (grind) nil nil))
                                        nil)
                                       ("2"
                                        (lemma "R_ord_same")
                                        (("2"
                                          (inst -1 "i" "RT(i)")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "RT_ord")
                                                (("2" (inst -1 "i") nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (expand "subset?")
          (("2" (skeep)
            (("2" (expand "denotation" -1)
              (("2" (expand "member")
                (("2" (expand "intersection")
                  (("2" (inst -1 "x")
                    (("2" (flatten)
                      (("2" (hide -2)
                        (("2" (expand "member")
                          (("2" (expand "union")
                            (("2" (split)
                              (("1" (grind) nil nil) ("2" (grind) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil Sig_denot nil)
    (union_sub_tot formula-decl nil Sig_prop nil)
    (member const-decl "bool" sets nil)
    (comp const-decl "set[I]" Sig_prop nil) (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (RT_ord formula-decl nil Sig_prop nil)
    (R_ord_same formula-decl nil Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IC type-eq-decl nil Sig_prop nil) (RT const-decl "IC" Sig_prop nil)
    (intersection const-decl "set" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil) (set type-eq-decl nil sets nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (denotation_equal 0
  (denotation_equal-1 nil 3638513776
   ("" (skeep)
    (("" (split)
      (("1" (flatten)
        (("1" (expand "denotation" 1)
          (("1" (lemma "denotation_inclusion")
            (("1" (inst-cp -1 "t1" "t2")
              (("1" (inst -1 "t2" "t1")
                (("1" (flatten)
                  (("1" (hide -2 -4)
                    (("1" (split)
                      (("1" (split)
                        (("1" (hide -3)
                          (("1" (skeep)
                            (("1" (inst -1 "i")
                              (("1" (inst -2 "i") (("1" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide -1 2) (("2" (grind) nil nil)) nil))
                        nil)
                       ("2" (grind) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (lemma "denotation_inclusion")
          (("2" (inst-cp -1 "t1" "t2")
            (("2" (inst -1 "t2" "t1")
              (("2" (flatten)
                (("2" (hide -1 -3)
                  (("2" (split)
                    (("1" (split)
                      (("1" (hide -3)
                        (("1" (apply-extensionality) (("1" (grind) nil nil))
                          nil))
                        nil)
                       ("2" (hide -1 2)
                        (("2" (skeep)
                          (("2" (inst -1 "i") (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2)
                      (("2" (skeep)
                        (("2" (inst -1 "i") (("2" (grind) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation def-decl "set[I[T]]" Sig_denot nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (member const-decl "bool" sets nil)
    (comp const-decl "set[I]" Sig_prop nil) (union const-decl "set" sets nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (R_ord2 const-decl "bool" Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (intersection const-decl "set" sets nil)
    (denotation_inclusion formula-decl nil Sig_denot nil)
    (set type-eq-decl nil sets nil))
   shostak))
 (denotation_imp_inc_1 0
  (teo "fin" 3638537092
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (inst -1 "t1!1" "t2!1" "_")
        (("" (expand "subset?")
          (("" (skosimp)
            (("" (inst -1 "x!1")
              (("" (expand "member")
                (("" (replace -1)
                  (("" (hide -1)
                    ((""
                      (case "subset?(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),comp(denotation(t1!1)))")
                      (("1"
                        (name "ggg" "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                        (("1" (replace -1)
                          (("1" (hide -1)
                            (("1"
                              (case "subset?( intersection(comp(denotation(t1!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1))))), comp(denotation(t1!1)))")
                              (("1"
                                (name "hhh"
                                      "intersection(comp(denotation(t1!1)),
                           bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                                (("1" (replace -1)
                                  (("1" (hide -1)
                                    (("1"
                                      (case
                                       "subset?(union(ggg,hhh),comp(denotation(t1!1)))")
                                      (("1"
                                        (expand "union")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (case "denotation(t2!1)(x!1)")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (case " (ggg(x!1) OR hhh(x!1))")
                                              (("1"
                                                (expand "subset?" -2)
                                                (("1"
                                                  (inst -2 "x!1")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -1 -2)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -3 2)
                                        (("2"
                                          (expand "subset?")
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (inst -2 "x!2")
                                                (("2"
                                                  (inst -3 "x!2")
                                                  (("2"
                                                    (expand "union")
                                                    (("2"
                                                      (expand "member")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide 1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 -2 2)
                                (("2" (lemma "intersection_subset1[I[T]]")
                                  (("2"
                                    (inst -1 "comp(denotation(t1!1))"
                                     " bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1))))")
                                    nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1 2)
                        (("2" (lemma "sub_comp_denotation")
                          (("2" (inst -1 "t1!1" "_")
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (skosimp)
                                  (("2" (inst -1 "x!2")
                                    (("2" (inst -1 "x!2")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation_imp formula-decl nil Sig_denot nil)
    (subset? const-decl "bool" sets nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil) (set type-eq-decl nil sets nil)
    (intersection const-decl "set" sets nil) (union const-decl "set" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (intersection_subset1 formula-decl nil sets_lemmas nil)
    (sub_comp_denotation formula-decl nil Sig_denot nil)
    (member const-decl "bool" sets nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak)
  (quedauna "quedauna" 3638536961
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (inst -1 "t1!1" "t2!1" "_")
        (("" (expand "subset?")
          (("" (skosimp)
            (("" (inst -1 "x!1")
              (("" (expand "member")
                (("" (replace -1)
                  (("" (hide -1)
                    ((""
                      (case "subset?(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),comp(denotation(t1!1)))")
                      (("1"
                        (name "ggg" "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                        (("1" (replace -1)
                          (("1" (hide -1)
                            (("1"
                              (case "subset?( intersection(comp(denotation(t1!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1))))), comp(denotation(t1!1)))")
                              (("1"
                                (name "hhh"
                                      "intersection(comp(denotation(t1!1)),
                           bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                                (("1" (replace -1)
                                  (("1" (hide -1)
                                    (("1"
                                      (case
                                       "subset?(union(ggg,hhh),comp(denotation(t1!1)))")
                                      (("1"
                                        (expand "union")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (case "denotation(t2!1)(x!1)")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (case " (ggg(x!1) OR hhh(x!1))")
                                              (("1"
                                                (expand "subset?" -2)
                                                (("1"
                                                  (inst -2 "x!1")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -1 -2)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -3 2)
                                        (("2"
                                          (expand "subset?")
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (inst -2 "x!2")
                                                (("2"
                                                  (inst -3 "x!2")
                                                  (("2"
                                                    (expand "union")
                                                    (("2"
                                                      (expand "member")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide 1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide -1 2)
                        (("2" (lemma "sub_comp_denotation")
                          (("2" (inst -1 "t1!1" "_")
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (skosimp)
                                  (("2" (inst -1 "x!2")
                                    (("2" (inst -1 "x!2")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Sig_form type-decl nil Sig_form_adt nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (IC type-eq-decl nil Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil))
   shostak)
  (faltandos "faltandos" 3638536676
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (inst -1 "t1!1" "t2!1" "_")
        (("" (expand "subset?")
          (("" (skosimp)
            (("" (inst -1 "x!1")
              (("" (expand "member")
                (("" (replace -1)
                  (("" (hide -1)
                    ((""
                      (case "subset?(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),comp(denotation(t1!1)))")
                      (("1"
                        (name "ggg" "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                        (("1" (replace -1)
                          (("1" (hide -1)
                            (("1"
                              (case "subset?( intersection(comp(denotation(t1!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1))))), comp(denotation(t1!1)))")
                              (("1"
                                (name "hhh"
                                      "intersection(comp(denotation(t1!1)),
                           bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                                (("1" (replace -1)
                                  (("1" (hide -1)
                                    (("1"
                                      (case
                                       "subset?(union(ggg,hhh),comp(denotation(t1!1)))")
                                      (("1"
                                        (expand "union")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (case "denotation(t2!1)(x!1)")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (case " (ggg(x!1) OR hhh(x!1))")
                                              (("1"
                                                (expand "subset?" -2)
                                                (("1"
                                                  (inst -2 "x!1")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -1 -2)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide -3 2)
                                        (("2"
                                          (expand "subset?")
                                          (("2"
                                            (expand "member")
                                            (("2"
                                              (skosimp)
                                              (("2"
                                                (inst -2 "x!2")
                                                (("2"
                                                  (inst -3 "x!2")
                                                  (("2"
                                                    (expand "union")
                                                    (("2"
                                                      (expand "member")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (hide 1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (postpone) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (faltantres "faltantres" 3638536584
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (inst -1 "t1!1" "t2!1" "_")
        (("" (expand "subset?")
          (("" (skosimp)
            (("" (inst -1 "x!1")
              (("" (expand "member")
                (("" (replace -1)
                  (("" (hide -1)
                    ((""
                      (case "subset?(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),comp(denotation(t1!1)))")
                      (("1"
                        (name "ggg" "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                        (("1" (replace -1)
                          (("1" (hide -1)
                            (("1"
                              (case "subset?( intersection(comp(denotation(t1!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1))))), comp(denotation(t1!1)))")
                              (("1"
                                (name "hhh"
                                      "intersection(comp(denotation(t1!1)),
                           bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                                (("1" (replace -1)
                                  (("1" (hide -1)
                                    (("1"
                                      (case
                                       "subset?(union(ggg,hhh),comp(denotation(t1!1)))")
                                      (("1"
                                        (expand "union")
                                        (("1"
                                          (expand "member")
                                          (("1"
                                            (case "denotation(t2!1)(x!1)")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (case " (ggg(x!1) OR hhh(x!1))")
                                              (("1"
                                                (expand "subset?" -2)
                                                (("1"
                                                  (inst -2 "x!1")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -1 -2)
                                                        (("1"
                                                          (propax)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (postpone) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_imp_inc_1-1 nil 3638516416
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (inst -1 "t1!1" "t2!1" "_")
        (("" (expand "subset?")
          (("" (skosimp)
            (("" (inst -1 "x!1")
              (("" (expand "member")
                (("" (replace -1)
                  (("" (hide -1)
                    ((""
                      (case "subset?(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),comp(denotation(t1!1)))")
                      (("1"
                        (name "ggg" "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                        (("1" (replace -1)
                          (("1" (hide -1)
                            (("1"
                              (case "subset?( intersection(comp(denotation(t1!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1))))), comp(denotation(t1!1)))")
                              (("1"
                                (name "hhh"
                                      "intersection(comp(denotation(t1!1)),
                           bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                                (("1" (replace -1)
                                  (("1" (hide -1)
                                    (("1"
                                      (case
                                       "subset?(union(ggg,hhh),comp(denotation(t1!1)))")
                                      (("1" (postpone) nil nil)
                                       ("2" (postpone) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (postpone) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (denotation_imp_inc_2 0
  (teo "fin" 3638539074
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (expand "subset?")
        (("" (skosimp)
          (("" (expand "member")
            (("" (inst -1 "t1!1" "t2!1" "x!1")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (lemma "intersection_commutative[I[T]]")
                    ((""
                      (inst -1
                       "union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))),
                         denotation(t2!1))" "denotation(t1!1)")
                      (("" (replace -1)
                        (("" (hide -1)
                          (("" (lemma "distribute_intersection_union[I[T]]")
                            ((""
                              (inst -1 "denotation(t1!1)"
                               "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))"
                               "denotation(t2!1)")
                              (("" (replace -1)
                                (("" (hide -1)
                                  ((""
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("" (inst -1 "denotation(t1!1)" "_" "_")
                                      ((""
                                        (inst
                                         -1
                                         "bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))"
                                         "_")
                                        ((""
                                          (inst
                                           -1
                                           " intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (case
                                                 "union(intersection(denotation(t1!1),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))),
                  intersection(denotation(t1!1),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))) = emptyset")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (lemma
                                                       "union_empty[I[T]]")
                                                      (("1"
                                                        (lemma
                                                         "union_commutative[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "emptyset"
                                                           " intersection(denotation(t1!1), denotation(t2!1))")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 " intersection(denotation(t1!1), denotation(t2!1))")
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (hide -1)
                                                                    (("1"
                                                                      (lemma
                                                                       "intersection_subset1[I[T]]")
                                                                      (("1"
                                                                        (lemma
                                                                         "intersection_commutative[I[T]]")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "denotation(t1!1)"
                                                                           "denotation(t2!1)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "denotation(t2!1)"
                                                                                 "_")
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "denotation(t1!1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -1 2)
                                                  (("2"
                                                    (lemma
                                                     "union_empty[I[T]]")
                                                    (("2"
                                                      (case
                                                       " intersection(denotation(t1!1),
                         intersection(comp(denotation(t1!1)),
                                      bottom
                                      (extend[I[T], IC[T], bool, FALSE]
                                       (classic(denotation(t2!1))))))=emptyset")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "intersection(denotation(t1!1),
                         bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(comp(denotation(t1!1))))))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (lemma
                                                                   "sub_comp_denotation")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "t1!1"
                                                                     "_")
                                                                    (("1"
                                                                      (apply-extensionality)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "x!2")
                                                                          (("1"
                                                                            (name
                                                                             "iii"
                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                         (classic(comp(denotation(t1!1)))))")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (case
                                                             "subset?( intersection(comp(denotation(t1!1)),
                                bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic(denotation(t2!1))))),comp(denotation(t1!1)))")
                                                            (("1"
                                                              (name
                                                               "yyy"
                                                               "intersection(comp(denotation(t1!1)),
                           bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (apply-extensionality)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "x!2")
                                                                          (("1"
                                                                            (expand
                                                                             "member")
                                                                            (("1"
                                                                              (grind)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (hide 2)
                                                              (("2"
                                                                (lemma
                                                                 "intersection_subset1[I[T]]")
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "comp(denotation(t1!1))"
                                                                   " bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1))))")
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation_imp formula-decl nil Sig_denot nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil) (set type-eq-decl nil sets nil)
    (union const-decl "set" sets nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IC type-eq-decl nil Sig_prop nil) (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (intersection const-decl "set" sets nil)
    (sub_comp_denotation formula-decl nil Sig_denot nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (union_empty formula-decl nil sets_lemmas nil)
    (intersection_subset1 formula-decl nil sets_lemmas nil)
    (union_commutative formula-decl nil sets_lemmas nil)
    (emptyset const-decl "set" sets nil)
    (distribute_intersection_union formula-decl nil sets_lemmas nil)
    (intersection_commutative formula-decl nil sets_lemmas nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil))
   shostak)
  (quedauna "quedauna" 3638538757
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (expand "subset?")
        (("" (skosimp)
          (("" (expand "member")
            (("" (inst -1 "t1!1" "t2!1" "x!1")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (lemma "intersection_commutative[I[T]]")
                    ((""
                      (inst -1
                       "union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))),
                         denotation(t2!1))" "denotation(t1!1)")
                      (("" (replace -1)
                        (("" (hide -1)
                          (("" (lemma "distribute_intersection_union[I[T]]")
                            ((""
                              (inst -1 "denotation(t1!1)"
                               "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))"
                               "denotation(t2!1)")
                              (("" (replace -1)
                                (("" (hide -1)
                                  ((""
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("" (inst -1 "denotation(t1!1)" "_" "_")
                                      ((""
                                        (inst
                                         -1
                                         "bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))"
                                         "_")
                                        ((""
                                          (inst
                                           -1
                                           " intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (case
                                                 "union(intersection(denotation(t1!1),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))),
                  intersection(denotation(t1!1),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))) = emptyset")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (lemma
                                                       "union_empty[I[T]]")
                                                      (("1"
                                                        (lemma
                                                         "union_commutative[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "emptyset"
                                                           " intersection(denotation(t1!1), denotation(t2!1))")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 " intersection(denotation(t1!1), denotation(t2!1))")
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (hide -1)
                                                                    (("1"
                                                                      (lemma
                                                                       "intersection_subset1[I[T]]")
                                                                      (("1"
                                                                        (lemma
                                                                         "intersection_commutative[I[T]]")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "denotation(t1!1)"
                                                                           "denotation(t2!1)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "denotation(t2!1)"
                                                                                 "_")
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "denotation(t1!1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -1 2)
                                                  (("2"
                                                    (lemma
                                                     "union_empty[I[T]]")
                                                    (("2"
                                                      (case
                                                       " intersection(denotation(t1!1),
                         intersection(comp(denotation(t1!1)),
                                      bottom
                                      (extend[I[T], IC[T], bool, FALSE]
                                       (classic(denotation(t2!1))))))=emptyset")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "intersection(denotation(t1!1),
                         bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(comp(denotation(t1!1))))))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (lemma
                                                                   "sub_comp_denotation")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "t1!1"
                                                                     "_")
                                                                    (("1"
                                                                      (apply-extensionality)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "x!2")
                                                                          (("1"
                                                                            (name
                                                                             "iii"
                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                         (classic(comp(denotation(t1!1)))))")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (postpone)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((comp const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (IC type-eq-decl nil Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil))
   shostak)
  (vabien "vabien" 3638538708
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (expand "subset?")
        (("" (skosimp)
          (("" (expand "member")
            (("" (inst -1 "t1!1" "t2!1" "x!1")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (lemma "intersection_commutative[I[T]]")
                    ((""
                      (inst -1
                       "union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))),
                         denotation(t2!1))" "denotation(t1!1)")
                      (("" (replace -1)
                        (("" (hide -1)
                          (("" (lemma "distribute_intersection_union[I[T]]")
                            ((""
                              (inst -1 "denotation(t1!1)"
                               "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))"
                               "denotation(t2!1)")
                              (("" (replace -1)
                                (("" (hide -1)
                                  ((""
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("" (inst -1 "denotation(t1!1)" "_" "_")
                                      ((""
                                        (inst
                                         -1
                                         "bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))"
                                         "_")
                                        ((""
                                          (inst
                                           -1
                                           " intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (case
                                                 "union(intersection(denotation(t1!1),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))),
                  intersection(denotation(t1!1),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))) = emptyset")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (lemma
                                                       "union_empty[I[T]]")
                                                      (("1"
                                                        (lemma
                                                         "union_commutative[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "emptyset"
                                                           " intersection(denotation(t1!1), denotation(t2!1))")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 " intersection(denotation(t1!1), denotation(t2!1))")
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (hide -1)
                                                                    (("1"
                                                                      (lemma
                                                                       "intersection_subset1[I[T]]")
                                                                      (("1"
                                                                        (lemma
                                                                         "intersection_commutative[I[T]]")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "denotation(t1!1)"
                                                                           "denotation(t2!1)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "denotation(t2!1)"
                                                                                 "_")
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "denotation(t1!1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -1 2)
                                                  (("2"
                                                    (lemma
                                                     "union_empty[I[T]]")
                                                    (("2"
                                                      (case
                                                       " intersection(denotation(t1!1),
                         intersection(comp(denotation(t1!1)),
                                      bottom
                                      (extend[I[T], IC[T], bool, FALSE]
                                       (classic(denotation(t2!1))))))=emptyset")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "intersection(denotation(t1!1),
                         bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(comp(denotation(t1!1))))))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (lemma
                                                                   "sub_comp_denotation")
                                                                  (("1"
                                                                    (inst
                                                                     -1
                                                                     "t1!1"
                                                                     "_")
                                                                    (("1"
                                                                      (apply-extensionality)
                                                                      (("1"
                                                                        (hide
                                                                         2)
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "x!2")
                                                                          (("1"
                                                                            (name
                                                                             "iii"
                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                         (classic(comp(denotation(t1!1)))))")
                                                                            (("1"
                                                                              (replace
                                                                               -1)
                                                                              (("1"
                                                                                (hide
                                                                                 -1)
                                                                                (("1"
                                                                                  (postpone)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (faltancosas "faltancosas" 3638538503
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (expand "subset?")
        (("" (skosimp)
          (("" (expand "member")
            (("" (inst -1 "t1!1" "t2!1" "x!1")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (lemma "intersection_commutative[I[T]]")
                    ((""
                      (inst -1
                       "union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))),
                         denotation(t2!1))" "denotation(t1!1)")
                      (("" (replace -1)
                        (("" (hide -1)
                          (("" (lemma "distribute_intersection_union[I[T]]")
                            ((""
                              (inst -1 "denotation(t1!1)"
                               "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))"
                               "denotation(t2!1)")
                              (("" (replace -1)
                                (("" (hide -1)
                                  ((""
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("" (inst -1 "denotation(t1!1)" "_" "_")
                                      ((""
                                        (inst
                                         -1
                                         "bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))"
                                         "_")
                                        ((""
                                          (inst
                                           -1
                                           " intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (case
                                                 "union(intersection(denotation(t1!1),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))),
                  intersection(denotation(t1!1),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))) = emptyset")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (lemma
                                                       "union_empty[I[T]]")
                                                      (("1"
                                                        (lemma
                                                         "union_commutative[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "emptyset"
                                                           " intersection(denotation(t1!1), denotation(t2!1))")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 " intersection(denotation(t1!1), denotation(t2!1))")
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (hide -1)
                                                                    (("1"
                                                                      (lemma
                                                                       "intersection_subset1[I[T]]")
                                                                      (("1"
                                                                        (lemma
                                                                         "intersection_commutative[I[T]]")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "denotation(t1!1)"
                                                                           "denotation(t2!1)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "denotation(t2!1)"
                                                                                 "_")
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "denotation(t1!1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -1 2)
                                                  (("2"
                                                    (lemma
                                                     "union_empty[I[T]]")
                                                    (("2"
                                                      (case
                                                       " intersection(denotation(t1!1),
                         intersection(comp(denotation(t1!1)),
                                      bottom
                                      (extend[I[T], IC[T], bool, FALSE]
                                       (classic(denotation(t2!1))))))=emptyset")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (inst
                                                             -1
                                                             "intersection(denotation(t1!1),
                         bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(comp(denotation(t1!1))))))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (postpone)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_imp_inc_2-1 nil 3638516427
   ("" (skosimp)
    (("" (lemma "denotation_imp")
      (("" (expand "subset?")
        (("" (skosimp)
          (("" (expand "member")
            (("" (inst -1 "t1!1" "t2!1" "x!1")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (lemma "intersection_commutative[I[T]]")
                    ((""
                      (inst -1
                       "union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))),
                         denotation(t2!1))" "denotation(t1!1)")
                      (("" (replace -1)
                        (("" (hide -1)
                          (("" (lemma "distribute_intersection_union[I[T]]")
                            ((""
                              (inst -1 "denotation(t1!1)"
                               "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))"
                               "denotation(t2!1)")
                              (("" (replace -1)
                                (("" (hide -1)
                                  ((""
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("" (inst -1 "denotation(t1!1)" "_" "_")
                                      ((""
                                        (inst
                                         -1
                                         "bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))"
                                         "_")
                                        ((""
                                          (inst
                                           -1
                                           " intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1)))))")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (case
                                                 "union(intersection(denotation(t1!1),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1)))))),
                  intersection(denotation(t1!1),
                               intersection(comp(denotation(t1!1)),
                                            bottom
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (denotation(t2!1))))))) = emptyset")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (hide -1)
                                                    (("1"
                                                      (lemma
                                                       "union_empty[I[T]]")
                                                      (("1"
                                                        (lemma
                                                         "union_commutative[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "emptyset"
                                                           " intersection(denotation(t1!1), denotation(t2!1))")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (inst
                                                                 -1
                                                                 " intersection(denotation(t1!1), denotation(t2!1))")
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (hide -1)
                                                                    (("1"
                                                                      (lemma
                                                                       "intersection_subset1[I[T]]")
                                                                      (("1"
                                                                        (lemma
                                                                         "intersection_commutative[I[T]]")
                                                                        (("1"
                                                                          (inst
                                                                           -1
                                                                           "denotation(t1!1)"
                                                                           "denotation(t2!1)")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1)
                                                                              (("1"
                                                                                (inst
                                                                                 -1
                                                                                 "denotation(t2!1)"
                                                                                 "_")
                                                                                (("1"
                                                                                  (inst
                                                                                   -1
                                                                                   "denotation(t1!1)")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -1
                                                                                       "x!1")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "member")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -1 2)
                                                  (("2" (postpone) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (denotation_imp_intersec 0
  (teo "fin" 3638729526
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      ((""
        (inst -1
         " intersection(denotation(t1!1), denotation(op_imp(t1!1, t2!1)))"
         "_")
        (("" (inst -1 " intersection(denotation(t1!1), denotation(t2!1))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t2!1))")
                    (("1"
                      (name "qqq" "intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1)))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "jjj" "denotation(t2!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1" (name "uuu" "denotation(t1!1)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2)
                      (("2" (lemma "intersection_commutative[I[T]]")
                        (("2" (inst -1 "denotation(t1!1)" "_")
                          (("2" (inst -1 " denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (lemma "denotation_imp_inc_2")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "iii" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "fff" "denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(op_imp(t1!1, t2!1)))")
                    (("1"
                      (name "rrr"
                            "intersection(denotation(t1!1), denotation(t2!1))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "iii" "denotation(t1!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1"
                                  (name "ooo"
                                        " denotation(op_imp(t1!1, t2!1))")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (hide -1)
                        (("2" (lemma "denotation_imp")
                          (("2" (inst -1 "t1!1" "t2!1" "i!1")
                            (("2" (replace -1)
                              (("2"
                                (case "subset?(denotation(t2!1), union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                     (classic(comp(denotation(t1!1))))),
                          intersection(comp(denotation(t1!1)),
                                       bottom
                                       (extend[I[T], IC[T], bool, FALSE]
                                        (classic(denotation(t2!1)))))),
                    denotation(t2!1)))")
                                (("1" (hide -2)
                                  (("1" (lemma "subset_transitive[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(denotation(t1!1), denotation(t2!1))"
                                       "denotation(t2!1)"
                                       "_")
                                      (("1"
                                        (inst
                                         -1
                                         "union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                     (classic(comp(denotation(t1!1))))),
                          intersection(comp(denotation(t1!1)),
                                       bottom
                                       (extend[I[T], IC[T], bool, FALSE]
                                        (classic(denotation(t2!1)))))),
                    denotation(t2!1))")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (hide -1 2)
                                            (("1"
                                              (expand "subset?")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (expand "intersection")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (hide -1 2)
                                  (("2"
                                    (name "fff"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                     (classic(comp(denotation(t1!1))))),
                          intersection(comp(denotation(t1!1)),
                                       bottom
                                       (extend[I[T], IC[T], bool, FALSE]
                                        (classic(denotation(t2!1))))))")
                                    (("2" (replace -1)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (expand "subset?")
                                          (("2"
                                            (skosimp)
                                            (("2"
                                              (expand "member")
                                              (("2"
                                                (expand "union")
                                                (("2"
                                                  (expand "member")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "yyy" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "lll" "denotation(t2!1)")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (subset_antisymmetric formula-decl nil sets_lemmas nil)
    (denotation_imp formula-decl nil Sig_denot nil)
    (subset_transitive formula-decl nil sets_lemmas nil)
    (union const-decl "set" sets nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IC type-eq-decl nil Sig_prop nil) (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (subset? const-decl "bool" sets nil)
    (denotation_imp_inc_2 formula-decl nil Sig_denot nil)
    (intersection_commutative formula-decl nil sets_lemmas nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (member const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (intersection const-decl "set" sets nil) (set type-eq-decl nil sets nil))
   shostak)
  (casi "casi" 3638729314
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      ((""
        (inst -1
         " intersection(denotation(t1!1), denotation(op_imp(t1!1, t2!1)))"
         "_")
        (("" (inst -1 " intersection(denotation(t1!1), denotation(t2!1))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t2!1))")
                    (("1"
                      (name "qqq" "intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1)))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "jjj" "denotation(t2!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1" (name "uuu" "denotation(t1!1)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2)
                      (("2" (lemma "intersection_commutative[I[T]]")
                        (("2" (inst -1 "denotation(t1!1)" "_")
                          (("2" (inst -1 " denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (lemma "denotation_imp_inc_2")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "iii" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "fff" "denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(op_imp(t1!1, t2!1)))")
                    (("1"
                      (name "rrr"
                            "intersection(denotation(t1!1), denotation(t2!1))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "iii" "denotation(t1!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1"
                                  (name "ooo"
                                        " denotation(op_imp(t1!1, t2!1))")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (hide -1)
                        (("2" (lemma "denotation_imp")
                          (("2" (inst -1 "t1!1" "t2!1" "i!1")
                            (("2" (replace -1)
                              (("2"
                                (case "subset?(denotation(t2!1), union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                     (classic(comp(denotation(t1!1))))),
                          intersection(comp(denotation(t1!1)),
                                       bottom
                                       (extend[I[T], IC[T], bool, FALSE]
                                        (classic(denotation(t2!1)))))),
                    denotation(t2!1)))")
                                (("1" (hide -2)
                                  (("1" (lemma "subset_transitive[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(denotation(t1!1), denotation(t2!1))"
                                       "denotation(t2!1)"
                                       "_")
                                      (("1"
                                        (inst
                                         -1
                                         "union(union(bottom(extend[I[T], IC[T], bool, FALSE]
                                     (classic(comp(denotation(t1!1))))),
                          intersection(comp(denotation(t1!1)),
                                       bottom
                                       (extend[I[T], IC[T], bool, FALSE]
                                        (classic(denotation(t2!1)))))),
                    denotation(t2!1))")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (hide -1 2)
                                            (("1"
                                              (expand "subset?")
                                              (("1"
                                                (skosimp)
                                                (("1"
                                                  (expand "member")
                                                  (("1"
                                                    (expand "intersection")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (flatten)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (hide -1 2) (("2" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "yyy" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "lll" "denotation(t2!1)")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Sig_form type-decl nil Sig_form_adt nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (IC type-eq-decl nil Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil))
   shostak)
  (unamet "unamet" 3638728810
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      ((""
        (inst -1
         " intersection(denotation(t1!1), denotation(op_imp(t1!1, t2!1)))"
         "_")
        (("" (inst -1 " intersection(denotation(t1!1), denotation(t2!1))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t2!1))")
                    (("1"
                      (name "qqq" "intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1)))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "jjj" "denotation(t2!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1" (name "uuu" "denotation(t1!1)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2)
                      (("2" (lemma "intersection_commutative[I[T]]")
                        (("2" (inst -1 "denotation(t1!1)" "_")
                          (("2" (inst -1 " denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (lemma "denotation_imp_inc_2")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "iii" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "fff" "denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(op_imp(t1!1, t2!1)))")
                    (("1"
                      (name "rrr"
                            "intersection(denotation(t1!1), denotation(t2!1))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "iii" "denotation(t1!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1"
                                  (name "ooo"
                                        " denotation(op_imp(t1!1, t2!1))")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (hide -1) (("2" (postpone) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "yyy" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "lll" "denotation(t2!1)")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (unameta "unameta" 3638728581
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      ((""
        (inst -1
         " intersection(denotation(t1!1), denotation(op_imp(t1!1, t2!1)))"
         "_")
        (("" (inst -1 " intersection(denotation(t1!1), denotation(t2!1))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t2!1))")
                    (("1"
                      (name "qqq" "intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1)))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "jjj" "denotation(t2!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1" (name "uuu" "denotation(t1!1)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2)
                      (("2" (lemma "intersection_commutative[I[T]]")
                        (("2" (inst -1 "denotation(t1!1)" "_")
                          (("2" (inst -1 " denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (lemma "denotation_imp_inc_2")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "iii" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "fff" "denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(op_imp(t1!1, t2!1)))")
                    (("1"
                      (name "rrr"
                            "intersection(denotation(t1!1), denotation(t2!1))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "iii" "denotation(t1!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1"
                                  (name "ooo"
                                        " denotation(op_imp(t1!1, t2!1))")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "yyy" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "lll" "denotation(t2!1)")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (dosmetas "dosmetas" 3638728350
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      ((""
        (inst -1
         " intersection(denotation(t1!1), denotation(op_imp(t1!1, t2!1)))"
         "_")
        (("" (inst -1 " intersection(denotation(t1!1), denotation(t2!1))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t2!1))")
                    (("1"
                      (name "qqq" "intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1)))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "jjj" "denotation(t2!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1" (name "uuu" "denotation(t1!1)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "iii" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "fff" "denotation(op_imp(t1!1, t2!1))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2"
                  (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(op_imp(t1!1, t2!1)))")
                    (("1"
                      (name "rrr"
                            "intersection(denotation(t1!1), denotation(t2!1))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "iii" "denotation(t1!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1"
                                  (name "ooo"
                                        " denotation(op_imp(t1!1, t2!1))")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "yyy" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "lll" "denotation(t2!1)")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (tresmetas "tresmetas" 3638728265
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      ((""
        (inst -1
         " intersection(denotation(t1!1), denotation(op_imp(t1!1, t2!1)))"
         "_")
        (("" (inst -1 " intersection(denotation(t1!1), denotation(t2!1))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1))),denotation(t2!1))")
                    (("1"
                      (name "qqq" "intersection(denotation(t1!1),
                           denotation(op_imp(t1!1, t2!1)))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "jjj" "denotation(t2!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1" (name "uuu" "denotation(t1!1)")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                    nil)
                   ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                  nil)
                 ("2"
                  (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(op_imp(t1!1, t2!1)))")
                    (("1"
                      (name "rrr"
                            "intersection(denotation(t1!1), denotation(t2!1))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "iii" "denotation(t1!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1"
                                  (name "ooo"
                                        " denotation(op_imp(t1!1, t2!1))")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "yyy" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "lll" "denotation(t2!1)")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_imp_intersec-1 nil 3638689376
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      ((""
        (inst -1
         " intersection(denotation(t1!1), denotation(op_imp(t1!1, t2!1)))"
         "_")
        (("" (inst -1 " intersection(denotation(t1!1), denotation(t2!1))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1" (postpone) nil nil)
                 ("2"
                  (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(t1!1))")
                  (("1"
                    (case "subset?(intersection(denotation(t1!1), denotation(t2!1)),denotation(op_imp(t1!1, t2!1)))")
                    (("1"
                      (name "rrr"
                            "intersection(denotation(t1!1), denotation(t2!1))")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (name "iii" "denotation(t1!1)")
                            (("1" (replace -1)
                              (("1" (hide -1)
                                (("1"
                                  (name "ooo"
                                        " denotation(op_imp(t1!1, t2!1))")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (expand "subset?")
                                        (("1"
                                          (skosimp)
                                          (("1"
                                            (expand "member")
                                            (("1"
                                              (expand "intersection")
                                              (("1"
                                                (expand "member")
                                                (("1"
                                                  (inst -1 "x!1")
                                                  (("1"
                                                    (inst -2 "x!1")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2" (name "yyy" "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (name "lll" "denotation(t2!1)")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (expand "subset?")
                                  (("2" (skosimp)
                                    (("2" (expand "member")
                                      (("2"
                                        (expand "intersection")
                                        (("2"
                                          (expand "member")
                                          (("2" (flatten) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (denotation_and_imp 0
  (denotation_and_imp-1 nil 3638689496
   ("" (skosimp)
    (("" (apply-extensionality)
      (("" (hide 2)
        (("" (expand "denotation" 1 1)
          (("" (lemma "denotation_imp_intersec")
            (("" (inst -1 "t1!1" "t2!1" "i!1")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (expand "denotation" 1 3) (("" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil Sig_denot nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (op_and adt-constructor-decl "[[Sig_form, Sig_form] -> (op_and?)]"
     Sig_form_adt nil)
    (op_and? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (set type-eq-decl nil sets nil) (I nonempty-type-eq-decl nil Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (denotation_imp_intersec formula-decl nil Sig_denot nil))
   shostak))
 (denotation_imp_classic 0
  (denotation_imp_classic-1 nil 3638690017
   ("" (skeep)
    (("" (expand "denotation" 1 1)
      (("" (lemma "intersection_classic")
        (("" (lemma "classic_bottom_classic")
          ((""
            (inst -2 "union(comp(denotation(t1)), denotation(t2))"
             "bottom(extend[I[T], IC[T], bool, FALSE]
                                          (classic(union(comp(denotation(t1)), denotation(t2)))))")
            (("" (replace -2)
              (("" (inst -1 "union(comp(denotation(t1)), denotation(t2))")
                (("" (replace -1)
                  (("" (grind)
                    (("" (lemma "intersection_idempotent[I]")
                      ((""
                        (inst -1
                         "classic(union(comp(denotation(t1)), denotation(t2)))")
                        (("" (grind)
                          (("" (lemma "union_classic")
                            ((""
                              (inst -1 "comp(denotation(t1))"
                               "denotation(t2)")
                              (("" (hide -1 -3 -4)
                                (("" (apply-extensionality)
                                  (("" (hide 2) (("" (grind) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation def-decl "set[I[T]]" Sig_denot nil)
    (classic_bottom_classic formula-decl nil Sig_prop nil)
    (intersection_idempotent formula-decl nil sets_lemmas nil)
    (intersection const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (union_classic formula-decl nil Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil) (union const-decl "set" sets nil)
    (set type-eq-decl nil sets nil) (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (intersection_classic formula-decl nil Sig_prop nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak))
 (denotation_comp_imp_classic 0
  (denotation_comp_imp_classic-1 nil 3638779816
   ("" (skeep)
    (("" (apply-extensionality)
      (("" (hide 2)
        (("" (iff)
          (("" (split)
            (("1" (flatten)
              (("1" (expand "classic" -1)
                (("1" (expand "member")
                  (("1" (lemma "denotation_imp")
                    (("1" (inst -1 "t1" "t2" "i")
                      (("1" (replace -1 -2)
                        (("1" (hide -1)
                          (("1" (lemma "comp_eq_complement")
                            (("1"
                              (inst -1
                               "union(union(bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(t1))))),
                           intersection(comp(denotation(t1)), bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(t2)))))),
                     denotation(t2))")
                              (("1" (replace -1 -2)
                                (("1" (hide -1)
                                  (("1" (lemma "demorgan1[I]")
                                    (("1"
                                      (inst-cp
                                       -1
                                       "union(bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(t1))))),
                                 intersection(comp(denotation(t1)), bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(t2))))))"
                                       "denotation(t2)")
                                      (("1"
                                        (replace -2 -3)
                                        (("1"
                                          (hide -2)
                                          (("1"
                                            (inst
                                             -1
                                             "bottom(extend[I[T], IC[T], bool, FALSE](classic(comp(denotation(t1)))))"
                                             "intersection(comp(denotation(t1)),
                                                     bottom(extend[I[T], IC[T], bool, FALSE](classic(denotation(t2)))))")
                                            (("1"
                                              (replace -1 -2)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (expand "intersection" -1)
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "classic")
                                                        (("1"
                                                          (expand "member" 1)
                                                          (("1"
                                                            (expand
                                                             "intersection")
                                                            (("1"
                                                              (split)
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (hide -2 -3)
                                                                  (("1"
                                                                    (expand
                                                                     "complement")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (grind)
                                                                        (("1"
                                                                          (typepred
                                                                           "x!1")
                                                                          (("1"
                                                                            (inst
                                                                             -1
                                                                             "t!1")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide -1 -2)
                                                                (("2"
                                                                  (grind)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (flatten)
              (("2" (lemma "denotation_imp_inc_1")
                (("2" (inst -1 "t1" "t2" "i")
                  (("2" (lemma "subset_comp")
                    (("2"
                      (inst -1 "union(comp(denotation(t1)), denotation(t2))"
                       "denotation(op_imp(t1, t2))")
                      (("2" (assert)
                        (("2" (hide -2)
                          (("2" (lemma "demorgan1[I]")
                            (("2"
                              (inst -1 "comp(denotation(t1))"
                               "denotation(t2)")
                              (("2" (lemma "comp_eq_complement")
                                (("2"
                                  (inst-cp -1
                                   "union(comp(denotation(t1)), denotation(t2))")
                                  (("2" (inst-cp -1 "comp(denotation(t1))")
                                    (("2" (assert)
                                      (("2"
                                        (replace -3 -5)
                                        (("2"
                                          (inst-cp
                                           -1
                                           "denotation(op_imp(t1, t2))")
                                          (("2"
                                            (replace -2 -6)
                                            (("2"
                                              (replace -5 -6)
                                              (("2"
                                                (hide -5)
                                                (("2"
                                                  (hide -2)
                                                  (("2"
                                                    (hide -2)
                                                    (("2"
                                                      (inst-cp
                                                       -1
                                                       "denotation(t1)")
                                                      (("2"
                                                        (replace -2 -4)
                                                        (("2"
                                                          (hide -2)
                                                          (("2"
                                                            (lemma
                                                             "complement_complement[I]")
                                                            (("2"
                                                              (inst
                                                               -1
                                                               "denotation(t1)")
                                                              (("2"
                                                                (replace
                                                                 -1
                                                                 -4)
                                                                (("2"
                                                                  (hide -1)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (inst-cp
                                                                       -1
                                                                       "denotation(t2)")
                                                                      (("2"
                                                                        (replace
                                                                         -2
                                                                         -4)
                                                                        (("2"
                                                                          (hide
                                                                           -2)
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "denotation(op_imp(t1, t2))")
                                                                            (("2"
                                                                              (replace
                                                                               -1
                                                                               1)
                                                                              (("2"
                                                                                (hide
                                                                                 -1)
                                                                                (("2"
                                                                                  (grind)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((T formal-nonempty-type-decl nil Sig_denot nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IC type-eq-decl nil Sig_prop nil)
    (intersection const-decl "set" sets nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (set type-eq-decl nil sets nil) (subset? const-decl "bool" sets nil)
    (complement_complement formula-decl nil sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (subset_comp formula-decl nil Sig_prop nil)
    (denotation_imp_inc_1 formula-decl nil Sig_denot nil)
    (member const-decl "bool" sets nil) (extend const-decl "R" extend nil)
    (FALSE const-decl "bool" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (union const-decl "set" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (R_ord2 const-decl "bool" Sig_prop nil)
    (complement const-decl "set" sets nil)
    (demorgan1 formula-decl nil sets_lemmas nil)
    (comp_eq_complement formula-decl nil Sig_prop nil)
    (denotation_imp formula-decl nil Sig_denot nil))
   shostak))
 (denotation_imp_sub_l 0
  (teo "fin" 3640439760
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "intersection(ddd,fff)"
                                                                   "ggg")
                                                                  (("2"
                                                                    (case
                                                                     "union(intersection(ddd, fff), ggg)= union(extend[I[T], IC[T], bool, FALSE](intersection(ddd, fff)),
            extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                               "ddd"
                                                                               "fff")
                                                                              (("1"
                                                                                (case
                                                                                 " union(extend[I[T], IC[T], bool, FALSE](ggg),
            intersection(extend[I[T], IC[T], bool, FALSE](ddd),
                         extend[I[T], IC[T], bool, FALSE](fff))) = union(extend[I[T], IC[T], bool, FALSE](ggg),
                                     extend[I[T], IC[T], bool, FALSE]
                                     (intersection(ddd, fff)))")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "ggg"
                                                                                         1
                                                                                         2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "fff")
                                                                                          (("1"
                                                                                            (case
                                                                                             " union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic(denotation(t1!1))),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (comp
                                               (denotation(t1!1))))) = fullset[IC[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "extend[I[T], IC[T], bool, FALSE]
                         (restrict[I[T], IC[T], boolean]
                              (intersection(union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ggg),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ddd)),
                                            extend[I[T], IC[T], bool, FALSE]
                                            (fullset[IC[T]])))) = union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ggg),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ddd))")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "union_bottom")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                                                           " extend[I[T], IC[T], bool, FALSE](ddd)")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE](ddd)))")
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "nnn"
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE](ddd))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (name
                                                                                                                         "mmm"
                                                                                                                         "bottom(extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1)
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (expand
                                                                                                                               "subset?")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "union")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "member")
                                                                                                                                  (("1"
                                                                                                                                    (skosimp)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "x!1")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "qqq")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "ddd")
                                                                                                                      (("2"
                                                                                                                        (lemma
                                                                                                                         "denotation_sub")
                                                                                                                        (("2"
                                                                                                                          (inst
                                                                                                                           -1
                                                                                                                           "t2!1"
                                                                                                                           "i!1")
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "zzz"
                                                                                                       "  union(extend[I[T], IC[T], bool, FALSE](ggg),
             extend[I[T], IC[T], bool, FALSE](ddd))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "extend")
                                                                                                              (("2"
                                                                                                                (apply-extensionality)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "x!1(t!1)")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "s3?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "zzz")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "extend")
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "jjj"
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      (("2"
                                                                                                        (apply-extensionality)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality)
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "extend")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       2)
                                                                      (("2"
                                                                        (grind)
                                                                        (("2"
                                                                          (expand
                                                                           "restrict")
                                                                          (("2"
                                                                            (apply-extensionality)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil) (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil) (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil)
    (union_commutative formula-decl nil sets_lemmas nil)
    (fff skolem-const-decl "set[IC[T]]" Sig_denot nil)
    (ddd skolem-const-decl "set[IC[T]]" Sig_denot nil)
    (denotation_sub formula-decl nil Sig_denot nil)
    (qqq skolem-const-decl "set[I[T]]" Sig_denot nil)
    (union_bottom formula-decl nil Sig_prop nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (zzz skolem-const-decl "set[I[T]]" Sig_denot nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (fullset const-decl "set" sets nil)
    (ggg skolem-const-decl "set[IC[T]]" Sig_denot nil)
    (restrict const-decl "R" restrict nil)
    (distribute_union_intersection formula-decl nil sets_lemmas nil)
    (intersection_classic formula-decl nil Sig_prop nil)
    (denotation_comp_imp_classic formula-decl nil Sig_denot nil)
    (union_classic formula-decl nil Sig_prop nil)
    (member const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IC type-eq-decl nil Sig_prop nil) (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (demorgan2 formula-decl nil sets_lemmas nil)
    (demorgan1 formula-decl nil sets_lemmas nil)
    (complement const-decl "set" sets nil))
   shostak)
  (final "final" 3640439435
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "intersection(ddd,fff)"
                                                                   "ggg")
                                                                  (("2"
                                                                    (case
                                                                     "union(intersection(ddd, fff), ggg)= union(extend[I[T], IC[T], bool, FALSE](intersection(ddd, fff)),
            extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                               "ddd"
                                                                               "fff")
                                                                              (("1"
                                                                                (case
                                                                                 " union(extend[I[T], IC[T], bool, FALSE](ggg),
            intersection(extend[I[T], IC[T], bool, FALSE](ddd),
                         extend[I[T], IC[T], bool, FALSE](fff))) = union(extend[I[T], IC[T], bool, FALSE](ggg),
                                     extend[I[T], IC[T], bool, FALSE]
                                     (intersection(ddd, fff)))")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "ggg"
                                                                                         1
                                                                                         2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "fff")
                                                                                          (("1"
                                                                                            (case
                                                                                             " union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic(denotation(t1!1))),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (comp
                                               (denotation(t1!1))))) = fullset[IC[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   "extend[I[T], IC[T], bool, FALSE]
                         (restrict[I[T], IC[T], boolean]
                              (intersection(union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ggg),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ddd)),
                                            extend[I[T], IC[T], bool, FALSE]
                                            (fullset[IC[T]])))) = union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ggg),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (ddd))")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "union_bottom")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                                                           " extend[I[T], IC[T], bool, FALSE](ddd)")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "subset?(qqq,bottom(extend[I[T], IC[T], bool, FALSE](ggg)))")
                                                                                                                (("1"
                                                                                                                  (postpone)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (postpone)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "zzz"
                                                                                                       "  union(extend[I[T], IC[T], bool, FALSE](ggg),
             extend[I[T], IC[T], bool, FALSE](ddd))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "extend")
                                                                                                              (("2"
                                                                                                                (apply-extensionality)
                                                                                                                (("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (grind)
                                                                                                                    (("2"
                                                                                                                      (typepred
                                                                                                                       "x!1(t!1)")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "s3?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "zzz")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "extend")
                                                                                                                            (("2"
                                                                                                                              (grind)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "jjj"
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      (("2"
                                                                                                        (apply-extensionality)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality)
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "extend")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       2)
                                                                      (("2"
                                                                        (grind)
                                                                        (("2"
                                                                          (expand
                                                                           "restrict")
                                                                          (("2"
                                                                            (apply-extensionality)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((classic const-decl "set[IC]" Sig_prop nil)
    (IC type-eq-decl nil Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (union_classic formula-decl nil Sig_prop nil)
    (intersection_classic formula-decl nil Sig_prop nil)
    (union_bottom formula-decl nil Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil))
   shostak)
  (fal "fal" 3640434659
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "intersection(ddd,fff)"
                                                                   "ggg")
                                                                  (("2"
                                                                    (case
                                                                     "union(intersection(ddd, fff), ggg)= union(extend[I[T], IC[T], bool, FALSE](intersection(ddd, fff)),
            extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                               "ddd"
                                                                               "fff")
                                                                              (("1"
                                                                                (case
                                                                                 " union(extend[I[T], IC[T], bool, FALSE](ggg),
            intersection(extend[I[T], IC[T], bool, FALSE](ddd),
                         extend[I[T], IC[T], bool, FALSE](fff))) = union(extend[I[T], IC[T], bool, FALSE](ggg),
                                     extend[I[T], IC[T], bool, FALSE]
                                     (intersection(ddd, fff)))")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "ggg"
                                                                                         1
                                                                                         2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "fff")
                                                                                          (("1"
                                                                                            (case
                                                                                             " union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic(denotation(t1!1))),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (comp
                                               (denotation(t1!1))))) = fullset[IC[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (postpone)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               2)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "jjj"
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      (("2"
                                                                                                        (apply-extensionality)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           2)
                                                                                                          (("2"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality)
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "extend")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       2)
                                                                      (("2"
                                                                        (grind)
                                                                        (("2"
                                                                          (expand
                                                                           "restrict")
                                                                          (("2"
                                                                            (apply-extensionality)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (falt "falt" 3640432130
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "intersection(ddd,fff)"
                                                                   "ggg")
                                                                  (("2"
                                                                    (case
                                                                     "union(intersection(ddd, fff), ggg)= union(extend[I[T], IC[T], bool, FALSE](intersection(ddd, fff)),
            extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                               "ddd"
                                                                               "fff")
                                                                              (("1"
                                                                                (case
                                                                                 " union(extend[I[T], IC[T], bool, FALSE](ggg),
            intersection(extend[I[T], IC[T], bool, FALSE](ddd),
                         extend[I[T], IC[T], bool, FALSE](fff))) = union(extend[I[T], IC[T], bool, FALSE](ggg),
                                     extend[I[T], IC[T], bool, FALSE]
                                     (intersection(ddd, fff)))")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "ggg"
                                                                                         1
                                                                                         2)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "fff")
                                                                                          (("1"
                                                                                            (case
                                                                                             " union
                                            (extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic(denotation(t1!1))),
                                             extend
                                             [I[T], IC[T], bool, FALSE]
                                             (classic
                                              (comp
                                               (denotation(t1!1))))) = fullset[IC[T]]")
                                                                                            (("1"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil)
                                                                                             ("2"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality)
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "extend")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       2)
                                                                      (("2"
                                                                        (grind)
                                                                        (("2"
                                                                          (expand
                                                                           "restrict")
                                                                          (("2"
                                                                            (apply-extensionality)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (falta "falta" 3640431917
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "intersection(ddd,fff)"
                                                                   "ggg")
                                                                  (("2"
                                                                    (case
                                                                     "union(intersection(ddd, fff), ggg)= union(extend[I[T], IC[T], bool, FALSE](intersection(ddd, fff)),
            extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                               "ddd"
                                                                               "fff")
                                                                              (("1"
                                                                                (case
                                                                                 " union(extend[I[T], IC[T], bool, FALSE](ggg),
            intersection(extend[I[T], IC[T], bool, FALSE](ddd),
                         extend[I[T], IC[T], bool, FALSE](fff))) = union(extend[I[T], IC[T], bool, FALSE](ggg),
                                     extend[I[T], IC[T], bool, FALSE]
                                     (intersection(ddd, fff)))")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -2)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1
                                                                                       -2)
                                                                                      (("1"
                                                                                        (postpone)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   2)
                                                                                  (("2"
                                                                                    (apply-extensionality)
                                                                                    (("2"
                                                                                      (hide
                                                                                       2)
                                                                                      (("2"
                                                                                        (expand
                                                                                         "extend")
                                                                                        (("2"
                                                                                          (grind)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       2)
                                                                      (("2"
                                                                        (grind)
                                                                        (("2"
                                                                          (expand
                                                                           "restrict")
                                                                          (("2"
                                                                            (apply-extensionality)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (otropaso "otropaso" 3640431691
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "intersection(ddd,fff)"
                                                                   "ggg")
                                                                  (("2"
                                                                    (case
                                                                     "union(intersection(ddd, fff), ggg)= union(extend[I[T], IC[T], bool, FALSE](intersection(ddd, fff)),
            extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "extend[I[T], IC[T], bool, FALSE](ggg)"
                                                                               "ddd"
                                                                               "fff")
                                                                              (("1"
                                                                                (case
                                                                                 "intersection(ddd,fff) =  intersection(extend[I[T], IC[T], bool, FALSE](ddd),
                         extend[I[T], IC[T], bool, FALSE](fff))")
                                                                                (("1"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("1"
                                                                                    (hide
                                                                                     -1
                                                                                     -2)
                                                                                    (("1"
                                                                                      (postpone)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -1
                                                                                   2)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "restrict")
                                                                                    (("2"
                                                                                      (apply-extensionality)
                                                                                      (("2"
                                                                                        (hide
                                                                                         2)
                                                                                        (("2"
                                                                                          (expand
                                                                                           "extend")
                                                                                          (("2"
                                                                                            (grind)
                                                                                            (("2"
                                                                                              (typepred
                                                                                               "x!1")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "t!1")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       2)
                                                                      (("2"
                                                                        (grind)
                                                                        (("2"
                                                                          (expand
                                                                           "restrict")
                                                                          (("2"
                                                                            (apply-extensionality)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (avances "avances" 3640431524
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (inst
                                                                   -1
                                                                   "intersection(ddd,fff)"
                                                                   "ggg")
                                                                  (("2"
                                                                    (case
                                                                     "union(intersection(ddd, fff), ggg)= union(extend[I[T], IC[T], bool, FALSE](intersection(ddd, fff)),
            extend[I[T], IC[T], bool, FALSE](ggg))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (hide
                                                                             -1)
                                                                            (("1"
                                                                              (postpone)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (hide
                                                                       -1
                                                                       -2
                                                                       2)
                                                                      (("2"
                                                                        (grind)
                                                                        (("2"
                                                                          (expand
                                                                           "restrict")
                                                                          (("2"
                                                                            (apply-extensionality)
                                                                            (("2"
                                                                              (hide
                                                                               2)
                                                                              (("2"
                                                                                (grind)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (problemilla "problemilla" 3640431366
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2"
                                            (lemma
                                             "distribute_union_intersection[I[T]]")
                                            (("2"
                                              (lemma
                                               "union_commutative[I[T]]")
                                              (("2"
                                                (name
                                                 "ddd"
                                                 "classic(denotation(t2!1))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (name
                                                       "fff"
                                                       "classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (hide -1)
                                                          (("2"
                                                            (name
                                                             "ggg"
                                                             " classic(denotation(t1!1))")
                                                            (("2"
                                                              (replace -1)
                                                              (("2"
                                                                (hide -1)
                                                                (("2"
                                                                  (postpone)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (bien "bien" 3640430639
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2" (lemma "denotation_comp_imp_classic")
                            (("2" (inst -1 "t2!1" "t1!1" "i!1")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (lemma "intersection_classic")
                                    (("2"
                                      (inst
                                       -1
                                       "denotation(t2!1)"
                                       " comp(denotation(t1!1))")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (hide -1)
                                          (("2" (postpone) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (avanzando "avanzando" 3640426394
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_bottom_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2"
                            (name "ppp"
                                  " bottom(extend[I[T], IC[T], bool, FALSE]
                               (classic(denotation(t1!1))))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (lemma "denotation_comp_imp_classic")
                                  (("2" (inst -1 "t2!1" "t1!1" "i!1")
                                    (("2" (replace -1)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (lemma "intersection_classic")
                                          (("2"
                                            (inst
                                             -1
                                             "denotation(t2!1)"
                                             "comp(denotation(t1!1))")
                                            (("2"
                                              (replace -1)
                                              (("2"
                                                (hide -1)
                                                (("2"
                                                  (lemma "union_bottom")
                                                  (("2"
                                                    (expand "ppp")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       "extend[I[T], IC[T], bool, FALSE]
                               (intersection(classic(denotation(t2!1)),
                                             classic
                                             (comp(denotation(t1!1)))))"
                                                       "_")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "extend[I[T], IC[T], bool, FALSE]
                               (classic(denotation(t1!1)))")
                                                        (("2"
                                                          (swap-rel -1)
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                (("2"
                                                                  (postpone)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (problema "problema" 3640425279
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_bottom_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2"
                            (name "ppp"
                                  " bottom(extend[I[T], IC[T], bool, FALSE]
                               (classic(denotation(t1!1))))")
                            (("2" (replace -1)
                              (("2" (hide -1)
                                (("2" (lemma "denotation_comp_imp_classic")
                                  (("2" (inst -1 "t2!1" "t1!1" "i!1")
                                    (("2" (replace -1)
                                      (("2"
                                        (hide -1)
                                        (("2"
                                          (lemma "intersection_classic")
                                          (("2"
                                            (inst
                                             -1
                                             "denotation(t2!1)"
                                             "comp(denotation(t1!1))")
                                            (("2"
                                              (replace -1)
                                              (("2"
                                                (hide -1)
                                                (("2"
                                                  (lemma
                                                   "intersection_bottom")
                                                  (("2"
                                                    (inst
                                                     -1
                                                     "classic(denotation(t2!1))"
                                                     "_")
                                                    (("2"
                                                      (inst
                                                       -1
                                                       " classic
                                             (comp(denotation(t1!1)))")
                                                      (("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (mit "mit" 3640424363
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2)
                  (("2" (lemma "union_bottom_classic")
                    (("2"
                      (inst -1 "comp
                                        (denotation(op_imp(t2!1, t1!1)))"
                       "denotation(t1!1)")
                      (("2" (replace -1)
                        (("2" (hide -1)
                          (("2"
                            (name "ppp"
                                  " bottom(extend[I[T], IC[T], bool, FALSE]
                               (classic(denotation(t1!1))))")
                            (("2" (replace -1)
                              (("2" (hide -1) (("2" (postpone) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (mitad "mitad" 3640358720
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (expand
                                                                     "subset?")
                                                                    (("1"
                                                                      (expand
                                                                       "union")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (skosimp)
                                                                          (("1"
                                                                            (expand
                                                                             "comp")
                                                                            (("1"
                                                                              (expand
                                                                               "complement")
                                                                              (("1"
                                                                                (propax)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (casimit "casimit" 3640358675
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (expand "denotation" 1 3)
                                (("2" (lemma "demorgan2[I[T]]")
                                  (("2"
                                    (inst -1 "union(comp(denotation(t2!1)),
                                      denotation(t1!1))" "_")
                                    (("2"
                                      (inst
                                       -1
                                       " bottom(extend[I[T], IC[T], bool, FALSE]
                                       (classic
                                        (union
                                         (comp(denotation(t2!1)),
                                          denotation(t1!1)))))")
                                      (("2"
                                        (expand "complement" -1 1)
                                        (("2"
                                          (expand "comp" 1 2)
                                          (("2"
                                            (replace -1)
                                            (("2"
                                              (hide -1)
                                              (("2"
                                                (name
                                                 "uuu"
                                                 " complement(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp(denotation(t2!1)),
                                         denotation(t1!1))))))")
                                                (("2"
                                                  (replace -1)
                                                  (("2"
                                                    (hide -1)
                                                    (("2"
                                                      (lemma
                                                       "demorgan1[I[T]]")
                                                      (("2"
                                                        (inst
                                                         -1
                                                         "comp(denotation(t2!1))"
                                                         "denotation(t1!1)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (hide -1)
                                                            (("2"
                                                              (case
                                                               "complement(comp(denotation(t2!1))) = denotation(t2!1)")
                                                              (("1"
                                                                (replace -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (postpone)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (hide 2)
                                                                (("2"
                                                                  (name
                                                                   "iii"
                                                                   "denotation(t2!1)")
                                                                  (("2"
                                                                    (replace
                                                                     -1)
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (expand
                                                                         "comp")
                                                                        (("2"
                                                                          (expand
                                                                           "complement")
                                                                          (("2"
                                                                            (expand
                                                                             "member")
                                                                            (("2"
                                                                              (apply-extensionality)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (encami "encami" 3640357565
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2)
                      (("2" (name "ttt" "denotation(t2!1)")
                        (("2" (replace -1)
                          (("2" (hide -1)
                            (("2" (name "yyy" "denotation(t1!1)")
                              (("2" (replace -1)
                                (("2" (hide -1)
                                  (("2" (apply-extensionality)
                                    (("2" (hide 2) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (encamin "encamin" 3640357447
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1"
                              (name "www"
                                    "intersection(denotation(t2!1), comp(denotation(t1!1)))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (name "eee"
                                          "comp(denotation(op_imp(t2!1, t1!1)))")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (name
                                           "rrr"
                                           "intersection(denotation(t2!1), denotation(t1!1))")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (expand "subset?")
                                                (("1"
                                                  (expand "union")
                                                  (("1"
                                                    (expand "member")
                                                    (("1"
                                                      (skosimp)
                                                      (("1"
                                                        (inst -2 "x!1")
                                                        (("1"
                                                          (inst -1 "x!1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (encamino "encamino" 3640357221
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                nil)
               ("2" (hide 2)
                (("2" (expand "qqq")
                  (("2"
                    (case "denotation(t2!1)= union(intersection(denotation(t2!1),denotation(t1!1)),intersection(denotation(t2!1),comp(denotation(t1!1))))")
                    (("1" (replace -1)
                      (("1" (hide -1)
                        (("1"
                          (case "subset?(intersection(denotation(t2!1), denotation(t1!1)),denotation(t1!1))")
                          (("1"
                            (case "subset?( intersection(denotation(t2!1),
                                 comp(denotation(t1!1))),comp(denotation(op_imp(t2!1, t1!1))))")
                            (("1" (postpone) nil nil)
                             ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "subset?")
                              (("2" (expand "member")
                                (("2" (expand "intersection")
                                  (("2" (expand "member")
                                    (("2" (skosimp) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_imp_sub_l-1 nil 3640348724
   ("" (skosimp)
    (("" (name "qqq" "denotation(t2!1)")
      (("" (replace -1)
        (("" (hide -1)
          (("" (expand "denotation")
            ((""
              (case "subset?(qqq,union(comp(denotation(op_imp(t2!1, t1!1))),
                                 denotation(t1!1)))")
              (("1"
                (case "subset?(qqq, bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic
                                       (union
                                        (comp
                                         (denotation(op_imp(t2!1, t1!1))),
                                         denotation(t1!1))))))")
                (("1" (expand "subset?")
                  (("1" (expand "intersection")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1")
                          (("1" (inst -2 "x!1") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                nil)
               ("2" (hide 2) (("2" (postpone) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (denotation_full_aux 0
  (teo "fin" 3640839323
   ("" (skosimp)
    ((""
      (case "subset?(union(comp(denotation(t!1)),denotation(t!1)), union(comp(denotation(t!1)),
            bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t!1))))))")
      (("1"
        (case "union(comp(denotation(t!1)), denotation(t!1)) = fullset[I[T]]")
        (("1" (replace -1)
          (("1" (hide -1)
            (("1"
              (name "qqq" " union(comp(denotation(t!1)),
            bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t!1)))))")
              (("1" (replace -1)
                (("1" (hide -1)
                  (("1" (expand "fullset")
                    (("1" (expand "subset?")
                      (("1" (apply-extensionality)
                        (("1" (expand "member")
                          (("1" (inst -1 "x!1") nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide -1 2)
          (("2" (expand "union")
            (("2" (expand "comp")
              (("2" (expand "member")
                (("2" (expand "fullset")
                  (("2" (apply-extensionality)
                    (("2" (hide 2) (("2" (flatten) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2"
          (case "subset?(denotation(t!1), bottom(extend[I[T], IC[T], bool, FALSE]
                               (classic(denotation(t!1)))))")
          (("1"
            (name "www" " bottom(extend[I[T], IC[T], bool, FALSE]
                         (classic(denotation(t!1))))")
            (("1" (replace -1)
              (("1" (hide -1)
                (("1" (expand "union")
                  (("1" (expand "subset?")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1") (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (lemma "denotation_total_closed")
              (("2" (lemma "total_closed_1")
                (("2" (inst -1 "denotation(t!1)")
                  (("2" (inst -2 "t!1" "i!1") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (FALSE const-decl "bool" booleans nil)
    (IC type-eq-decl nil Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil) (union const-decl "set" sets nil)
    (subset? const-decl "bool" sets nil) (set type-eq-decl nil sets nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (member const-decl "bool" sets nil) (TRUE const-decl "bool" booleans nil)
    (fullset const-decl "set" sets nil)
    (denotation_total_closed formula-decl nil Sig_denot nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (total_closed_1 formula-decl nil Sig_prop nil))
   shostak)
  (faltapoco "faltapoco" 3640834063
   ("" (skosimp)
    ((""
      (case "subset?(union(comp(denotation(t!1)),denotation(t!1)), union(comp(denotation(t!1)),
            bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t!1))))))")
      (("1"
        (case "union(comp(denotation(t!1)), denotation(t!1)) = fullset[I[T]]")
        (("1" (replace -1)
          (("1" (hide -1)
            (("1"
              (name "qqq" " union(comp(denotation(t!1)),
            bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t!1)))))")
              (("1" (replace -1)
                (("1" (hide -1)
                  (("1" (expand "fullset")
                    (("1" (expand "subset?")
                      (("1" (apply-extensionality)
                        (("1" (expand "member")
                          (("1" (inst -1 "x!1") nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide -1 2)
          (("2" (expand "union")
            (("2" (expand "comp")
              (("2" (expand "member")
                (("2" (expand "fullset")
                  (("2" (apply-extensionality)
                    (("2" (hide 2) (("2" (flatten) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2"
          (case "subset?(denotation(t!1), bottom(extend[I[T], IC[T], bool, FALSE]
                               (classic(denotation(t!1)))))")
          (("1"
            (name "www" " bottom(extend[I[T], IC[T], bool, FALSE]
                         (classic(denotation(t!1))))")
            (("1" (replace -1)
              (("1" (hide -1)
                (("1" (expand "union")
                  (("1" (expand "subset?")
                    (("1" (expand "member")
                      (("1" (skosimp)
                        (("1" (inst -1 "x!1") (("1" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2) (("2" (postpone) nil nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((total_closed_1 formula-decl nil Sig_prop nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (IC type-eq-decl nil Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil))
   shostak)
  (denotation_full_aux-1 nil 3640831211
   ("" (skosimp) (("" (postpone) nil nil)) nil) nil shostak))
 (denotation_imp_full 0
  (teo "fin" 3640839566
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1)
                      ((""
                        (name "qqq"
                              "union(comp(denotation(t1!1)), denotation(t2!1))")
                        (("" (replace -1)
                          ((""
                            (name "www"
                                  " union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                            (("" (replace -1)
                              ((""
                                (name "eee"
                                      "union(comp(denotation(t2!1)), denotation(t1!1))")
                                (("" (replace -1)
                                  ((""
                                    (name "rrr"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t2!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t1!1)))))")
                                    (("" (replace -1)
                                      ((""
                                        (lemma
                                         "distribute_union_intersection[I[T]]")
                                        ((""
                                          (inst
                                           -1
                                           "intersection(qqq,www)"
                                           "eee"
                                           "rrr")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (lemma
                                                 "distribute_union_intersection[I[T]]")
                                                ((""
                                                  (lemma
                                                   "union_commutative[I[T]]")
                                                  ((""
                                                    (inst
                                                     -1
                                                     "intersection(qqq,www)"
                                                     "eee")
                                                    ((""
                                                      (replace -1)
                                                      ((""
                                                        (hide -1)
                                                        ((""
                                                          (inst
                                                           -1
                                                           "eee"
                                                           "qqq"
                                                           "www")
                                                          ((""
                                                            (replace -1)
                                                            ((""
                                                              (hide -1)
                                                              ((""
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                ((""
                                                                  (lemma
                                                                   "union_commutative[I[T]]")
                                                                  ((""
                                                                    (inst
                                                                     -1
                                                                     "intersection(qqq,www)"
                                                                     "rrr")
                                                                    ((""
                                                                      (replace
                                                                       -1)
                                                                      ((""
                                                                        (hide
                                                                         -1)
                                                                        ((""
                                                                          (inst
                                                                           -1
                                                                           "rrr"
                                                                           "qqq"
                                                                           "www")
                                                                          ((""
                                                                            (replace
                                                                             -1)
                                                                            ((""
                                                                              (case
                                                                               "union(eee,qqq) = fullset[I[T]]")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "intersection(fullset[I[T]], union(eee, www)) = union(eee,www)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "union(rrr,qqq) = fullset[I[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "union(eee,www) = fullset[I[T]]")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "rrr")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "www")
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "union_associative[I[T]]")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                                                 " bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                                                 " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1)))))")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(comp(denotation(t1!1))))),
                        bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(denotation(t2!1)))))) = fullset[I[T]]")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "union")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "fullset")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "union_associative[I[T]]")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))"
                                                                                                                                             " bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))")
                                                                                                                                            (("2"
                                                                                                                                              (swap-rel
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))) = fullset[I[T]]")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (hide
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "union")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "fullset")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "member")
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "union_bottom_classic")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "denotation(t1!1)"
                                                                                                                                                           "comp(denotation(t1!1))")
                                                                                                                                                          (("2"
                                                                                                                                                            (swap-rel
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "comp_eq_complement")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "denotation(t1!1)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "union(denotation(t1!1),
                                complement(denotation(t1!1))) = fullset[I[T]]")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (lemma
                                                                                                                                                                                 "total_closed_1")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (inst
                                                                                                                                                                                   -1
                                                                                                                                                                                   "fullset[I[T]]")
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (case
                                                                                                                                                                                       " total_closed?(fullset[I[T]])")
                                                                                                                                                                                      (("1"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("1"
                                                                                                                                                                                          (hide
                                                                                                                                                                                           -1)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (name
                                                                                                                                                                                             "ooo"
                                                                                                                                                                                             " bottom(extend[I[T], IC[T], bool, FALSE](classic(fullset[I[T]])))")
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (replace
                                                                                                                                                                                               -1)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (hide
                                                                                                                                                                                                 -1)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (expand
                                                                                                                                                                                                   "fullset")
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (expand
                                                                                                                                                                                                     "subset?")
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (apply-extensionality)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (hide
                                                                                                                                                                                                         2)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (inst
                                                                                                                                                                                                           -1
                                                                                                                                                                                                           "x!1")
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (expand
                                                                                                                                                                                                             "member")
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (propax)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil)
                                                                                                                                                                                       ("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         -1
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "total_closed?")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (expand
                                                                                                                                                                                             "member")
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "fullset")
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (propax)
                                                                                                                                                                                                nil
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "union")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "fullset")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "complement")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (apply-extensionality)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -1
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "intersection")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             -2
                                                                                                             -3
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "eee")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "www")
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "union_commutative[I[T]]")
                                                                                                                  (("2"
                                                                                                                    (copy
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                       "denotation(t1!1)")
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))"
                                                                                                                             "_")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "union_associative[I[T]]")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "denotation(t1!1)"
                                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                                       " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1)))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))))")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             " union(comp(denotation(t2!1)),
                  union(bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(denotation(t2!1)))),
                        bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(comp(denotation(t1!1))))))) = fullset[I[T]]")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "fullset")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "union")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "member")
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "union_associative[I[T]]")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "comp(denotation(t2!1))"
                                                                                                                                                   "_"
                                                                                                                                                   "_")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))"
                                                                                                                                                     "_")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                                                                                                                                                      (("2"
                                                                                                                                                        (swap-rel
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "union(comp(denotation(t2!1)),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))) = fullset[I[T]]")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "fullset")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "union")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "member")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (hide
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "denotation_full_aux")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "t2!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -1
                                                                                                     -2
                                                                                                     -3
                                                                                                     -4
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "intersection")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (apply-extensionality)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "rrr")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "qqq")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "union_associative[I[T]]")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                       "union(comp(denotation(t1!1)), denotation(t2!1))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(comp(denotation(t1!1)), denotation(t2!1))) = fullset[I[T]]")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "iii"
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(comp(denotation(t2!1)))))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "fullset")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "union")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "union_associative[I[T]]")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                   "_"
                                                                                                                   "_")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "comp(denotation(t1!1))"
                                                                                                                     "denotation(t2!1)")
                                                                                                                    (("2"
                                                                                                                      (swap-rel
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  comp(denotation(t1!1))) = fullset[I[T]]")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "union")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "union_commutative[I[T]]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                   "comp(denotation(t1!1))")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "denotation_full_aux")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "t1!1"
                                                                                                                                           "i!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       2)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "union(eee,www)")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "fullset")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (apply-extensionality)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "eee")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "qqq")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "comp_eq_complement")
                                                                                      (("2"
                                                                                        (copy
                                                                                         -1)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "denotation(t2!1)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "ttt"
                                                                                                       "denotation(t2!1)")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "yyy"
                                                                                                             "denotation(t1!1)")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "union")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "complement")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((denotation def-decl "set[I[T]]" Sig_denot nil)
    (intersection const-decl "set" sets nil)
    (union_commutative formula-decl nil sets_lemmas nil)
    (fullset const-decl "set" sets nil)
    (qqq skolem-const-decl "set[I[T]]" Sig_denot nil)
    (rrr skolem-const-decl "set[I[T]]" Sig_denot nil)
    (union_associative formula-decl nil sets_lemmas nil)
    (member const-decl "bool" sets nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (comp_eq_complement formula-decl nil Sig_prop nil)
    (complement const-decl "set" sets nil)
    (total_closed? const-decl "bool" Sig_prop nil)
    (TRUE const-decl "bool" booleans nil) (subset? const-decl "bool" sets nil)
    (total_closed_1 formula-decl nil Sig_prop nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (www skolem-const-decl "set[I[T]]" Sig_denot nil)
    (eee skolem-const-decl "set[I[T]]" Sig_denot nil)
    (denotation_full_aux formula-decl nil Sig_denot nil)
    (distribute_union_intersection formula-decl nil sets_lemmas nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IC type-eq-decl nil Sig_prop nil) (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (union const-decl "set" sets nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil) (set type-eq-decl nil sets nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (union_bottom_classic formula-decl nil Sig_prop nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak)
  (final "final" 3640833220
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1)
                      ((""
                        (name "qqq"
                              "union(comp(denotation(t1!1)), denotation(t2!1))")
                        (("" (replace -1)
                          ((""
                            (name "www"
                                  " union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                            (("" (replace -1)
                              ((""
                                (name "eee"
                                      "union(comp(denotation(t2!1)), denotation(t1!1))")
                                (("" (replace -1)
                                  ((""
                                    (name "rrr"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t2!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t1!1)))))")
                                    (("" (replace -1)
                                      ((""
                                        (lemma
                                         "distribute_union_intersection[I[T]]")
                                        ((""
                                          (inst
                                           -1
                                           "intersection(qqq,www)"
                                           "eee"
                                           "rrr")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (lemma
                                                 "distribute_union_intersection[I[T]]")
                                                ((""
                                                  (lemma
                                                   "union_commutative[I[T]]")
                                                  ((""
                                                    (inst
                                                     -1
                                                     "intersection(qqq,www)"
                                                     "eee")
                                                    ((""
                                                      (replace -1)
                                                      ((""
                                                        (hide -1)
                                                        ((""
                                                          (inst
                                                           -1
                                                           "eee"
                                                           "qqq"
                                                           "www")
                                                          ((""
                                                            (replace -1)
                                                            ((""
                                                              (hide -1)
                                                              ((""
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                ((""
                                                                  (lemma
                                                                   "union_commutative[I[T]]")
                                                                  ((""
                                                                    (inst
                                                                     -1
                                                                     "intersection(qqq,www)"
                                                                     "rrr")
                                                                    ((""
                                                                      (replace
                                                                       -1)
                                                                      ((""
                                                                        (hide
                                                                         -1)
                                                                        ((""
                                                                          (inst
                                                                           -1
                                                                           "rrr"
                                                                           "qqq"
                                                                           "www")
                                                                          ((""
                                                                            (replace
                                                                             -1)
                                                                            ((""
                                                                              (case
                                                                               "union(eee,qqq) = fullset[I[T]]")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "intersection(fullset[I[T]], union(eee, www)) = union(eee,www)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "union(rrr,qqq) = fullset[I[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "union(eee,www) = fullset[I[T]]")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "rrr")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "www")
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "union_associative[I[T]]")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                                                 " bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                                                 " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1)))))")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(comp(denotation(t1!1))))),
                        bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(denotation(t2!1)))))) = fullset[I[T]]")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "union")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "fullset")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "union_associative[I[T]]")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))"
                                                                                                                                             " bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))")
                                                                                                                                            (("2"
                                                                                                                                              (swap-rel
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))) = fullset[I[T]]")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (hide
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "union")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "fullset")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "member")
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (lemma
                                                                                                                                                         "union_bottom_classic")
                                                                                                                                                        (("2"
                                                                                                                                                          (inst
                                                                                                                                                           -1
                                                                                                                                                           "denotation(t1!1)"
                                                                                                                                                           "comp(denotation(t1!1))")
                                                                                                                                                          (("2"
                                                                                                                                                            (swap-rel
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (replace
                                                                                                                                                               -1)
                                                                                                                                                              (("2"
                                                                                                                                                                (hide
                                                                                                                                                                 -1)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "comp_eq_complement")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "denotation(t1!1)")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (replace
                                                                                                                                                                       -1)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (hide
                                                                                                                                                                         -1)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (case
                                                                                                                                                                           "union(denotation(t1!1),
                                complement(denotation(t1!1))) = fullset[I[T]]")
                                                                                                                                                                          (("1"
                                                                                                                                                                            (replace
                                                                                                                                                                             -1)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide
                                                                                                                                                                               -1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (postpone)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil)
                                                                                                                                                                           ("2"
                                                                                                                                                                            (hide
                                                                                                                                                                             2)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "union")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "fullset")
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "complement")
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "member")
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (apply-extensionality)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (hide
                                                                                                                                                                                         2)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (flatten)
                                                                                                                                                                                          nil
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -1
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "intersection")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             -2
                                                                                                             -3
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "eee")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "www")
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "union_commutative[I[T]]")
                                                                                                                  (("2"
                                                                                                                    (copy
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                       "denotation(t1!1)")
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))"
                                                                                                                             "_")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "union_associative[I[T]]")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "denotation(t1!1)"
                                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                                       " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1)))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))))")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             " union(comp(denotation(t2!1)),
                  union(bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(denotation(t2!1)))),
                        bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(comp(denotation(t1!1))))))) = fullset[I[T]]")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "fullset")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "union")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "member")
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "union_associative[I[T]]")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "comp(denotation(t2!1))"
                                                                                                                                                   "_"
                                                                                                                                                   "_")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))"
                                                                                                                                                     "_")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                                                                                                                                                      (("2"
                                                                                                                                                        (swap-rel
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "union(comp(denotation(t2!1)),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))) = fullset[I[T]]")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "fullset")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "union")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "member")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (hide
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "denotation_full_aux")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "t2!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -1
                                                                                                     -2
                                                                                                     -3
                                                                                                     -4
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "intersection")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (apply-extensionality)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "rrr")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "qqq")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "union_associative[I[T]]")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                       "union(comp(denotation(t1!1)), denotation(t2!1))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(comp(denotation(t1!1)), denotation(t2!1))) = fullset[I[T]]")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "iii"
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(comp(denotation(t2!1)))))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "fullset")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "union")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "union_associative[I[T]]")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                   "_"
                                                                                                                   "_")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "comp(denotation(t1!1))"
                                                                                                                     "denotation(t2!1)")
                                                                                                                    (("2"
                                                                                                                      (swap-rel
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  comp(denotation(t1!1))) = fullset[I[T]]")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "union")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "union_commutative[I[T]]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                   "comp(denotation(t1!1))")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "denotation_full_aux")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "t1!1"
                                                                                                                                           "i!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       2)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "union(eee,www)")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "fullset")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (apply-extensionality)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "eee")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "qqq")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "comp_eq_complement")
                                                                                      (("2"
                                                                                        (copy
                                                                                         -1)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "denotation(t2!1)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "ttt"
                                                                                                       "denotation(t2!1)")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "yyy"
                                                                                                             "denotation(t1!1)")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "union")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "complement")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((union_bottom_classic formula-decl nil Sig_prop nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (IC type-eq-decl nil Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (total_closed_1 formula-decl nil Sig_prop nil)
    (total_closed? const-decl "bool" Sig_prop nil)
    (comp_eq_complement formula-decl nil Sig_prop nil))
   shostak)
  (casi "casi" 3640832883
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1)
                      ((""
                        (name "qqq"
                              "union(comp(denotation(t1!1)), denotation(t2!1))")
                        (("" (replace -1)
                          ((""
                            (name "www"
                                  " union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                            (("" (replace -1)
                              ((""
                                (name "eee"
                                      "union(comp(denotation(t2!1)), denotation(t1!1))")
                                (("" (replace -1)
                                  ((""
                                    (name "rrr"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t2!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t1!1)))))")
                                    (("" (replace -1)
                                      ((""
                                        (lemma
                                         "distribute_union_intersection[I[T]]")
                                        ((""
                                          (inst
                                           -1
                                           "intersection(qqq,www)"
                                           "eee"
                                           "rrr")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (lemma
                                                 "distribute_union_intersection[I[T]]")
                                                ((""
                                                  (lemma
                                                   "union_commutative[I[T]]")
                                                  ((""
                                                    (inst
                                                     -1
                                                     "intersection(qqq,www)"
                                                     "eee")
                                                    ((""
                                                      (replace -1)
                                                      ((""
                                                        (hide -1)
                                                        ((""
                                                          (inst
                                                           -1
                                                           "eee"
                                                           "qqq"
                                                           "www")
                                                          ((""
                                                            (replace -1)
                                                            ((""
                                                              (hide -1)
                                                              ((""
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                ((""
                                                                  (lemma
                                                                   "union_commutative[I[T]]")
                                                                  ((""
                                                                    (inst
                                                                     -1
                                                                     "intersection(qqq,www)"
                                                                     "rrr")
                                                                    ((""
                                                                      (replace
                                                                       -1)
                                                                      ((""
                                                                        (hide
                                                                         -1)
                                                                        ((""
                                                                          (inst
                                                                           -1
                                                                           "rrr"
                                                                           "qqq"
                                                                           "www")
                                                                          ((""
                                                                            (replace
                                                                             -1)
                                                                            ((""
                                                                              (case
                                                                               "union(eee,qqq) = fullset[I[T]]")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "intersection(fullset[I[T]], union(eee, www)) = union(eee,www)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "union(rrr,qqq) = fullset[I[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "union(eee,www) = fullset[I[T]]")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         -1
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "rrr")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "www")
                                                                                                                            (("1"
                                                                                                                              (lemma
                                                                                                                               "union_associative[I[T]]")
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                                                 " bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                                                 " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1)))))")
                                                                                                                                (("1"
                                                                                                                                  (replace
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (hide
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(comp(denotation(t1!1))))),
                        bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(denotation(t2!1)))))) = fullset[I[T]]")
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("1"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("1"
                                                                                                                                            (expand
                                                                                                                                             "union")
                                                                                                                                            (("1"
                                                                                                                                              (expand
                                                                                                                                               "fullset")
                                                                                                                                              (("1"
                                                                                                                                                (expand
                                                                                                                                                 "member")
                                                                                                                                                (("1"
                                                                                                                                                  (propax)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (hide
                                                                                                                                         2)
                                                                                                                                        (("2"
                                                                                                                                          (lemma
                                                                                                                                           "union_associative[I[T]]")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -1
                                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))"
                                                                                                                                             " bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))")
                                                                                                                                            (("2"
                                                                                                                                              (swap-rel
                                                                                                                                               -1)
                                                                                                                                              (("2"
                                                                                                                                                (replace
                                                                                                                                                 -1)
                                                                                                                                                (("2"
                                                                                                                                                  (hide
                                                                                                                                                   -1)
                                                                                                                                                  (("2"
                                                                                                                                                    (case
                                                                                                                                                     "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))) = fullset[I[T]]")
                                                                                                                                                    (("1"
                                                                                                                                                      (replace
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (hide
                                                                                                                                                         -1)
                                                                                                                                                        (("1"
                                                                                                                                                          (expand
                                                                                                                                                           "union")
                                                                                                                                                          (("1"
                                                                                                                                                            (expand
                                                                                                                                                             "fullset")
                                                                                                                                                            (("1"
                                                                                                                                                              (expand
                                                                                                                                                               "member")
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil)
                                                                                                                                                     ("2"
                                                                                                                                                      (hide
                                                                                                                                                       2)
                                                                                                                                                      (("2"
                                                                                                                                                        (postpone)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -1
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "intersection")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             -2
                                                                                                             -3
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "eee")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "www")
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "union_commutative[I[T]]")
                                                                                                                  (("2"
                                                                                                                    (copy
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                       "denotation(t1!1)")
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))"
                                                                                                                             "_")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "union_associative[I[T]]")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "denotation(t1!1)"
                                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                                       " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1)))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))))")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             " union(comp(denotation(t2!1)),
                  union(bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(denotation(t2!1)))),
                        bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(comp(denotation(t1!1))))))) = fullset[I[T]]")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "fullset")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "union")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "member")
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "union_associative[I[T]]")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "comp(denotation(t2!1))"
                                                                                                                                                   "_"
                                                                                                                                                   "_")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))"
                                                                                                                                                     "_")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                                                                                                                                                      (("2"
                                                                                                                                                        (swap-rel
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "union(comp(denotation(t2!1)),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))) = fullset[I[T]]")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "fullset")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "union")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "member")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (hide
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "denotation_full_aux")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "t2!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -1
                                                                                                     -2
                                                                                                     -3
                                                                                                     -4
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "intersection")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (apply-extensionality)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "rrr")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "qqq")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "union_associative[I[T]]")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                       "union(comp(denotation(t1!1)), denotation(t2!1))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(comp(denotation(t1!1)), denotation(t2!1))) = fullset[I[T]]")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "iii"
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(comp(denotation(t2!1)))))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "fullset")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "union")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "union_associative[I[T]]")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                   "_"
                                                                                                                   "_")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "comp(denotation(t1!1))"
                                                                                                                     "denotation(t2!1)")
                                                                                                                    (("2"
                                                                                                                      (swap-rel
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  comp(denotation(t1!1))) = fullset[I[T]]")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "union")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "union_commutative[I[T]]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                   "comp(denotation(t1!1))")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "denotation_full_aux")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "t1!1"
                                                                                                                                           "i!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       2)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "union(eee,www)")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "fullset")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (apply-extensionality)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "eee")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "qqq")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "comp_eq_complement")
                                                                                      (("2"
                                                                                        (copy
                                                                                         -1)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "denotation(t2!1)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "ttt"
                                                                                                       "denotation(t2!1)")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "yyy"
                                                                                                             "denotation(t1!1)")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "union")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "complement")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (quedauna "quedauna" 3640832567
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1)
                      ((""
                        (name "qqq"
                              "union(comp(denotation(t1!1)), denotation(t2!1))")
                        (("" (replace -1)
                          ((""
                            (name "www"
                                  " union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                            (("" (replace -1)
                              ((""
                                (name "eee"
                                      "union(comp(denotation(t2!1)), denotation(t1!1))")
                                (("" (replace -1)
                                  ((""
                                    (name "rrr"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t2!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t1!1)))))")
                                    (("" (replace -1)
                                      ((""
                                        (lemma
                                         "distribute_union_intersection[I[T]]")
                                        ((""
                                          (inst
                                           -1
                                           "intersection(qqq,www)"
                                           "eee"
                                           "rrr")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (lemma
                                                 "distribute_union_intersection[I[T]]")
                                                ((""
                                                  (lemma
                                                   "union_commutative[I[T]]")
                                                  ((""
                                                    (inst
                                                     -1
                                                     "intersection(qqq,www)"
                                                     "eee")
                                                    ((""
                                                      (replace -1)
                                                      ((""
                                                        (hide -1)
                                                        ((""
                                                          (inst
                                                           -1
                                                           "eee"
                                                           "qqq"
                                                           "www")
                                                          ((""
                                                            (replace -1)
                                                            ((""
                                                              (hide -1)
                                                              ((""
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                ((""
                                                                  (lemma
                                                                   "union_commutative[I[T]]")
                                                                  ((""
                                                                    (inst
                                                                     -1
                                                                     "intersection(qqq,www)"
                                                                     "rrr")
                                                                    ((""
                                                                      (replace
                                                                       -1)
                                                                      ((""
                                                                        (hide
                                                                         -1)
                                                                        ((""
                                                                          (inst
                                                                           -1
                                                                           "rrr"
                                                                           "qqq"
                                                                           "www")
                                                                          ((""
                                                                            (replace
                                                                             -1)
                                                                            ((""
                                                                              (case
                                                                               "union(eee,qqq) = fullset[I[T]]")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "intersection(fullset[I[T]], union(eee, www)) = union(eee,www)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "union(rrr,qqq) = fullset[I[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         -4)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "union(eee,www) = fullset[I[T]]")
                                                                                                          (("1"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("1"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (postpone)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   -1
                                                                                                                   -2
                                                                                                                   -3
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "intersection")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             -1
                                                                                                             -2
                                                                                                             -3
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "eee")
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "www")
                                                                                                                (("2"
                                                                                                                  (lemma
                                                                                                                   "union_commutative[I[T]]")
                                                                                                                  (("2"
                                                                                                                    (copy
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -1
                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                       "denotation(t1!1)")
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (inst
                                                                                                                             -1
                                                                                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))"
                                                                                                                             "_")
                                                                                                                            (("2"
                                                                                                                              (inst
                                                                                                                               -1
                                                                                                                               "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (hide
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "union_associative[I[T]]")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -1
                                                                                                                                       "denotation(t1!1)"
                                                                                                                                       "comp(denotation(t2!1))"
                                                                                                                                       " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1)))),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1))))))")
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (case
                                                                                                                                             " union(comp(denotation(t2!1)),
                  union(bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(denotation(t2!1)))),
                        bottom(extend[I[T], IC[T], bool, FALSE]
                                   (classic(comp(denotation(t1!1))))))) = fullset[I[T]]")
                                                                                                                                            (("1"
                                                                                                                                              (replace
                                                                                                                                               -1)
                                                                                                                                              (("1"
                                                                                                                                                (hide
                                                                                                                                                 -1)
                                                                                                                                                (("1"
                                                                                                                                                  (expand
                                                                                                                                                   "fullset")
                                                                                                                                                  (("1"
                                                                                                                                                    (expand
                                                                                                                                                     "union")
                                                                                                                                                    (("1"
                                                                                                                                                      (expand
                                                                                                                                                       "member")
                                                                                                                                                      (("1"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (hide
                                                                                                                                               2)
                                                                                                                                              (("2"
                                                                                                                                                (lemma
                                                                                                                                                 "union_associative[I[T]]")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -1
                                                                                                                                                   "comp(denotation(t2!1))"
                                                                                                                                                   "_"
                                                                                                                                                   "_")
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -1
                                                                                                                                                     "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))"
                                                                                                                                                     "_")
                                                                                                                                                    (("2"
                                                                                                                                                      (inst
                                                                                                                                                       -1
                                                                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t1!1)))))")
                                                                                                                                                      (("2"
                                                                                                                                                        (swap-rel
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (replace
                                                                                                                                                           -1)
                                                                                                                                                          (("2"
                                                                                                                                                            (hide
                                                                                                                                                             -1)
                                                                                                                                                            (("2"
                                                                                                                                                              (case
                                                                                                                                                               "union(comp(denotation(t2!1)),
                  bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t2!1))))) = fullset[I[T]]")
                                                                                                                                                              (("1"
                                                                                                                                                                (replace
                                                                                                                                                                 -1)
                                                                                                                                                                (("1"
                                                                                                                                                                  (hide
                                                                                                                                                                   -1)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "fullset")
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "union")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (expand
                                                                                                                                                                         "member")
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (hide
                                                                                                                                                                 2)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lemma
                                                                                                                                                                   "denotation_full_aux")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (inst
                                                                                                                                                                     -1
                                                                                                                                                                     "t2!1"
                                                                                                                                                                     "i!1")
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -1
                                                                                                     -2
                                                                                                     -3
                                                                                                     -4
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "intersection")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (apply-extensionality)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "rrr")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "qqq")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "union_associative[I[T]]")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                       "union(comp(denotation(t1!1)), denotation(t2!1))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(comp(denotation(t1!1)), denotation(t2!1))) = fullset[I[T]]")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "iii"
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(comp(denotation(t2!1)))))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "fullset")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "union")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "union_associative[I[T]]")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                   "_"
                                                                                                                   "_")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "comp(denotation(t1!1))"
                                                                                                                     "denotation(t2!1)")
                                                                                                                    (("2"
                                                                                                                      (swap-rel
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  comp(denotation(t1!1))) = fullset[I[T]]")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "union")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "union_commutative[I[T]]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                   "comp(denotation(t1!1))")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "denotation_full_aux")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "t1!1"
                                                                                                                                           "i!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       2)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "union(eee,www)")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "fullset")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (apply-extensionality)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "eee")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "qqq")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "comp_eq_complement")
                                                                                      (("2"
                                                                                        (copy
                                                                                         -1)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "denotation(t2!1)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "ttt"
                                                                                                       "denotation(t2!1)")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "yyy"
                                                                                                             "denotation(t1!1)")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "union")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "complement")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (quedandos "quedandos" 3640831957
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1)
                      ((""
                        (name "qqq"
                              "union(comp(denotation(t1!1)), denotation(t2!1))")
                        (("" (replace -1)
                          ((""
                            (name "www"
                                  " union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                            (("" (replace -1)
                              ((""
                                (name "eee"
                                      "union(comp(denotation(t2!1)), denotation(t1!1))")
                                (("" (replace -1)
                                  ((""
                                    (name "rrr"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t2!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t1!1)))))")
                                    (("" (replace -1)
                                      ((""
                                        (lemma
                                         "distribute_union_intersection[I[T]]")
                                        ((""
                                          (inst
                                           -1
                                           "intersection(qqq,www)"
                                           "eee"
                                           "rrr")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (lemma
                                                 "distribute_union_intersection[I[T]]")
                                                ((""
                                                  (lemma
                                                   "union_commutative[I[T]]")
                                                  ((""
                                                    (inst
                                                     -1
                                                     "intersection(qqq,www)"
                                                     "eee")
                                                    ((""
                                                      (replace -1)
                                                      ((""
                                                        (hide -1)
                                                        ((""
                                                          (inst
                                                           -1
                                                           "eee"
                                                           "qqq"
                                                           "www")
                                                          ((""
                                                            (replace -1)
                                                            ((""
                                                              (hide -1)
                                                              ((""
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                ((""
                                                                  (lemma
                                                                   "union_commutative[I[T]]")
                                                                  ((""
                                                                    (inst
                                                                     -1
                                                                     "intersection(qqq,www)"
                                                                     "rrr")
                                                                    ((""
                                                                      (replace
                                                                       -1)
                                                                      ((""
                                                                        (hide
                                                                         -1)
                                                                        ((""
                                                                          (inst
                                                                           -1
                                                                           "rrr"
                                                                           "qqq"
                                                                           "www")
                                                                          ((""
                                                                            (replace
                                                                             -1)
                                                                            ((""
                                                                              (case
                                                                               "union(eee,qqq) = fullset[I[T]]")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "intersection(fullset[I[T]], union(eee, www)) = union(eee,www)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (case
                                                                                             "union(rrr,qqq) = fullset[I[T]]")
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (case
                                                                                                   " intersection(fullset[I[T]], union(rrr, www)) = union(rrr,www)")
                                                                                                  (("1"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (postpone)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     -1
                                                                                                     -2
                                                                                                     -3
                                                                                                     -4
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "fullset")
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "intersection")
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "member")
                                                                                                          (("2"
                                                                                                            (apply-extensionality)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -1
                                                                                               -2
                                                                                               -3
                                                                                               -4
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "rrr")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "qqq")
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "union_associative[I[T]]")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(t2!1)))))"
                                                                                                       "bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1))))"
                                                                                                       "union(comp(denotation(t1!1)), denotation(t2!1))")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (case
                                                                                                             " union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  union(comp(denotation(t1!1)), denotation(t2!1))) = fullset[I[T]]")
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "iii"
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(comp(denotation(t2!1)))))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "fullset")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "union")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (hide
                                                                                                               2)
                                                                                                              (("2"
                                                                                                                (lemma
                                                                                                                 "union_associative[I[T]]")
                                                                                                                (("2"
                                                                                                                  (inst
                                                                                                                   -1
                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                   "_"
                                                                                                                   "_")
                                                                                                                  (("2"
                                                                                                                    (inst
                                                                                                                     -1
                                                                                                                     "comp(denotation(t1!1))"
                                                                                                                     "denotation(t2!1)")
                                                                                                                    (("2"
                                                                                                                      (swap-rel
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (replace
                                                                                                                         -1)
                                                                                                                        (("2"
                                                                                                                          (hide
                                                                                                                           -1)
                                                                                                                          (("2"
                                                                                                                            (case
                                                                                                                             "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(denotation(t1!1)))),
                  comp(denotation(t1!1))) = fullset[I[T]]")
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -1)
                                                                                                                              (("1"
                                                                                                                                (hide
                                                                                                                                 -1)
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "fullset")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "union")
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "member")
                                                                                                                                      (("1"
                                                                                                                                        (propax)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (hide
                                                                                                                               2)
                                                                                                                              (("2"
                                                                                                                                (lemma
                                                                                                                                 "union_commutative[I[T]]")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -1
                                                                                                                                   "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(denotation(t1!1))))"
                                                                                                                                   "comp(denotation(t1!1))")
                                                                                                                                  (("2"
                                                                                                                                    (replace
                                                                                                                                     -1)
                                                                                                                                    (("2"
                                                                                                                                      (hide
                                                                                                                                       -1)
                                                                                                                                      (("2"
                                                                                                                                        (lemma
                                                                                                                                         "denotation_full_aux")
                                                                                                                                        (("2"
                                                                                                                                          (inst
                                                                                                                                           -1
                                                                                                                                           "t1!1"
                                                                                                                                           "i!1")
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       2)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "union(eee,www)")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "fullset")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (apply-extensionality)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "eee")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "qqq")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "comp_eq_complement")
                                                                                      (("2"
                                                                                        (copy
                                                                                         -1)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "denotation(t2!1)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "ttt"
                                                                                                       "denotation(t2!1)")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "yyy"
                                                                                                             "denotation(t1!1)")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "union")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "complement")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (quedantres "quedantres" 3640830876
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1)
                      ((""
                        (name "qqq"
                              "union(comp(denotation(t1!1)), denotation(t2!1))")
                        (("" (replace -1)
                          ((""
                            (name "www"
                                  " union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                            (("" (replace -1)
                              ((""
                                (name "eee"
                                      "union(comp(denotation(t2!1)), denotation(t1!1))")
                                (("" (replace -1)
                                  ((""
                                    (name "rrr"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t2!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t1!1)))))")
                                    (("" (replace -1)
                                      ((""
                                        (lemma
                                         "distribute_union_intersection[I[T]]")
                                        ((""
                                          (inst
                                           -1
                                           "intersection(qqq,www)"
                                           "eee"
                                           "rrr")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (lemma
                                                 "distribute_union_intersection[I[T]]")
                                                ((""
                                                  (lemma
                                                   "union_commutative[I[T]]")
                                                  ((""
                                                    (inst
                                                     -1
                                                     "intersection(qqq,www)"
                                                     "eee")
                                                    ((""
                                                      (replace -1)
                                                      ((""
                                                        (hide -1)
                                                        ((""
                                                          (inst
                                                           -1
                                                           "eee"
                                                           "qqq"
                                                           "www")
                                                          ((""
                                                            (replace -1)
                                                            ((""
                                                              (hide -1)
                                                              ((""
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                ((""
                                                                  (lemma
                                                                   "union_commutative[I[T]]")
                                                                  ((""
                                                                    (inst
                                                                     -1
                                                                     "intersection(qqq,www)"
                                                                     "rrr")
                                                                    ((""
                                                                      (replace
                                                                       -1)
                                                                      ((""
                                                                        (hide
                                                                         -1)
                                                                        ((""
                                                                          (inst
                                                                           -1
                                                                           "rrr"
                                                                           "qqq"
                                                                           "www")
                                                                          ((""
                                                                            (replace
                                                                             -1)
                                                                            ((""
                                                                              (case
                                                                               "union(eee,qqq) = fullset[I[T]]")
                                                                              (("1"
                                                                                (replace
                                                                                 -1)
                                                                                (("1"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("1"
                                                                                    (case
                                                                                     "intersection(fullset[I[T]], union(eee, www)) = union(eee,www)")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -1)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1)
                                                                                        (("1"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("1"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (hide
                                                                                       -1
                                                                                       -2
                                                                                       -3
                                                                                       -4
                                                                                       -5
                                                                                       2)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "union(eee,www)")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "fullset")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (apply-extensionality)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 -1
                                                                                 -2
                                                                                 -3
                                                                                 -4
                                                                                 -5
                                                                                 2)
                                                                                (("2"
                                                                                  (expand
                                                                                   "eee")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "qqq")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "comp_eq_complement")
                                                                                      (("2"
                                                                                        (copy
                                                                                         -1)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "denotation(t2!1)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(t1!1)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (name
                                                                                                       "ttt"
                                                                                                       "denotation(t2!1)")
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (hide
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (name
                                                                                                             "yyy"
                                                                                                             "denotation(t1!1)")
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (hide
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "union")
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "complement")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "fullset")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member")
                                                                                                                        (("2"
                                                                                                                          (apply-extensionality)
                                                                                                                          (("2"
                                                                                                                            (hide
                                                                                                                             2)
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (quedancosas "quedancosas" 3640830520
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1)
                      ((""
                        (name "qqq"
                              "union(comp(denotation(t1!1)), denotation(t2!1))")
                        (("" (replace -1)
                          ((""
                            (name "www"
                                  " union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t1!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t2!1)))))")
                            (("" (replace -1)
                              ((""
                                (name "eee"
                                      "union(comp(denotation(t2!1)), denotation(t1!1))")
                                (("" (replace -1)
                                  ((""
                                    (name "rrr"
                                          "union(bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(comp(denotation(t2!1))))),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(denotation(t1!1)))))")
                                    (("" (replace -1)
                                      ((""
                                        (lemma
                                         "distribute_union_intersection[I[T]]")
                                        ((""
                                          (inst
                                           -1
                                           "intersection(qqq,www)"
                                           "eee"
                                           "rrr")
                                          ((""
                                            (replace -1)
                                            ((""
                                              (hide -1)
                                              ((""
                                                (lemma
                                                 "distribute_union_intersection[I[T]]")
                                                ((""
                                                  (lemma
                                                   "union_commutative[I[T]]")
                                                  ((""
                                                    (inst
                                                     -1
                                                     "intersection(qqq,www)"
                                                     "eee")
                                                    ((""
                                                      (replace -1)
                                                      ((""
                                                        (hide -1)
                                                        ((""
                                                          (inst
                                                           -1
                                                           "eee"
                                                           "qqq"
                                                           "www")
                                                          ((""
                                                            (replace -1)
                                                            ((""
                                                              (hide -1)
                                                              ((""
                                                                (lemma
                                                                 "distribute_union_intersection[I[T]]")
                                                                ((""
                                                                  (lemma
                                                                   "union_commutative[I[T]]")
                                                                  ((""
                                                                    (inst
                                                                     -1
                                                                     "intersection(qqq,www)"
                                                                     "rrr")
                                                                    ((""
                                                                      (replace
                                                                       -1)
                                                                      ((""
                                                                        (hide
                                                                         -1)
                                                                        ((""
                                                                          (inst
                                                                           -1
                                                                           "rrr"
                                                                           "qqq"
                                                                           "www")
                                                                          ((""
                                                                            (replace
                                                                             -1)
                                                                            ((""
                                                                              (postpone)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_imp_full-1 nil 3640827362
   ("" (skosimp)
    (("" (expand "denotation")
      (("" (lemma "union_bottom_classic")
        (("" (copy -1)
          (("" (inst -1 "comp(denotation(t1!1))" "denotation(t2!1)")
            (("" (replace -1)
              (("" (hide -1)
                (("" (inst -1 "comp(denotation(t2!1))" "denotation(t1!1)")
                  (("" (replace -1)
                    (("" (hide -1) (("" (postpone) nil nil)) nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (denotation_or 0
  (teo "fin" 3640793889
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (name "qq" "op_imp(t1!1,t2!1)")
                  (("2" (replace -1)
                    (("2" (name "ww" "op_imp(t2!1,t1!1)")
                      (("2" (replace -1)
                        (("2"
                          (name "ee" "(denotation(op_imp(qq, t2!1)),
                           denotation(op_imp(ww, t1!1)))")
                          (("2" (replace -1)
                            (("2"
                              (case "intersection(ee) = intersection(intersection(ee),union(denotation(qq),comp(denotation(qq))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(ee)"
                                       "denotation(qq)"
                                       "comp(denotation(qq))")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (case
                                             "subset?(intersection(intersection(ee), denotation(qq)),denotation(t2!1))")
                                            (("1"
                                              (case
                                               "subset?(  intersection(intersection(ee), comp(denotation(qq))),denotation(t1!1))")
                                              (("1"
                                                (hide -3 -4 -5)
                                                (("1"
                                                  (name
                                                   "rr"
                                                   "intersection(intersection(ee), denotation(qq))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         " intersection(intersection(ee), comp(denotation(qq)))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (expand
                                                                   "union")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "denotation"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 2)
                                                (("2"
                                                  (case
                                                   "intersection(intersection(ee), comp(denotation(qq))) = intersection(intersection(intersection(ee), comp(denotation(qq))),union(denotation(op_imp(t2!1,t1!1)),comp(denotation(op_imp(t2!1,t1!1)))))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (lemma
                                                         "distribute_intersection_union[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "intersection(intersection(ee),
                                        comp(denotation(qq)))"
                                                           "denotation(op_imp(t2!1, t1!1))"
                                                           " comp(denotation(op_imp(t2!1, t1!1)))
")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case
                                                                 "subset?(intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 denotation(op_imp(t2!1, t1!1))),denotation(t1!1))")
                                                                (("1"
                                                                  (case
                                                                   "subset?( intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 comp(denotation(op_imp(t2!1, t1!1)))),emptyset[I[T]])")
                                                                  (("1"
                                                                    (name
                                                                     "aaa"
                                                                     "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           comp(denotation(op_imp(t2!1, t1!1))))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (name
                                                                           "sss"
                                                                           "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           denotation(op_imp(t2!1, t1!1)))")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1
                                                                               -4
                                                                               -5
                                                                               -6)
                                                                              (("1"
                                                                                (expand
                                                                                 "subset?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "union")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -1
                                                                     2)
                                                                    (("2"
                                                                      (lemma
                                                                       "denotation_imp_full")
                                                                      (("2"
                                                                        (lemma
                                                                         "intersection_associative[I[T]]")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "intersection(ee)"
                                                                           "comp(denotation(qq))"
                                                                           "comp(denotation(op_imp(t2!1, t1!1)))")
                                                                          (("2"
                                                                            (replace
                                                                             -1)
                                                                            (("2"
                                                                              (hide
                                                                               -1)
                                                                              (("2"
                                                                                (case
                                                                                 "subset?( intersection(comp(denotation(qq)),
                                        comp
                                        (denotation(op_imp(t2!1, t1!1)))),
              emptyset[I[T]])")
                                                                                (("1"
                                                                                  (expand
                                                                                   "intersection")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "subset?")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "member")
                                                                                      (("1"
                                                                                        (skosimp)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   -2
                                                                                   2)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "comp_eq_complement")
                                                                                    (("2"
                                                                                      (lemma
                                                                                       "demorgan1[I[T]]")
                                                                                      (("2"
                                                                                        (copy
                                                                                         -2)
                                                                                        (("2"
                                                                                          (inst
                                                                                           -1
                                                                                           "denotation(qq)")
                                                                                          (("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -1)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -2
                                                                                                 "denotation(op_imp(t2!1,t1!1))")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -2)
                                                                                                  (("2"
                                                                                                    (hide
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "denotation(qq)"
                                                                                                       "denotation(op_imp(t2!1, t1!1))")
                                                                                                      (("2"
                                                                                                        (swap-rel
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (hide
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "qq")
                                                                                                              (("2"
                                                                                                                (inst
                                                                                                                 -1
                                                                                                                 "t1!1"
                                                                                                                 "t2!1"
                                                                                                                 "i!1")
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (hide
                                                                                                                     -1)
                                                                                                                    (("2"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "subset?")
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "complement")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "fullset")
                                                                                                                            (("2"
                                                                                                                              (expand
                                                                                                                               "emptyset")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "member")
                                                                                                                                (("2"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (expand
                                                                     "ee")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (lemma
                                                                         "intersection_associative[I[T]]")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "_"
                                                                           "_"
                                                                           " denotation(op_imp(t2!1, t1!1))")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "intersection
                                        (denotation(op_imp(qq, t2!1)),
                                         denotation(op_imp(ww, t1!1)))"
                                                                             "_")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "comp(denotation(qq))")
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "intersection_commutative[I[T]]")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "comp(denotation(qq))"
                                                                                       "denotation(op_imp(t2!1, t1!1))")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "intersection_associative[I[T]]")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "intersection(denotation(op_imp(qq, t2!1)),
                                        denotation(op_imp(ww, t1!1)))"
                                                                                               "_"
                                                                                               "_")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(op_imp(t2!1, t1!1))"
                                                                                                 "comp(denotation(qq))")
                                                                                                (("2"
                                                                                                  (swap-rel
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "intersection_associative[I[T]]")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "denotation(op_imp(qq, t2!1))"
                                                                                                           " denotation(op_imp(ww, t1!1))"
                                                                                                           " denotation(op_imp(t2!1, t1!1))")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "subset?( intersection
                                        (denotation(op_imp(ww, t1!1)),
                                         denotation(op_imp(t2!1, t1!1))),denotation(t1!1))")
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "ggg"
                                                                                                                   "intersection(denotation(op_imp(ww, t1!1)),
                           denotation(op_imp(t2!1, t1!1)))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "subset?")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "intersection")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (skosimp)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "x!1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "denotation_imp_inc_2")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "ww")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "op_imp(t2!1, t1!1)"
                                                                                                                         "t1!1"
                                                                                                                         "i!1")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case
                                                       " union(denotation(op_imp(t2!1, t1!1)),
                          comp(denotation(op_imp(t2!1, t1!1)))) = fullset[I[T]]")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (name
                                                             "ppp"
                                                             "  intersection(intersection(ee), comp(denotation(qq)))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (expand
                                                                   "intersection")
                                                                  (("1"
                                                                    (expand
                                                                     "fullset")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (apply-extensionality)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (name
                                                           "ooo"
                                                           "denotation(op_imp(t2!1,t1!1))")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (expand
                                                                 "comp")
                                                                (("2"
                                                                  (expand
                                                                   "union")
                                                                  (("2"
                                                                    (expand
                                                                     "fullset")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (apply-extensionality)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "denotation_imp_inc_2")
                                                (("2"
                                                  (expand "ee")
                                                  (("2"
                                                    (lemma
                                                     "intersection_commutative[I[T]]")
                                                    (("2"
                                                      (lemma
                                                       "intersection_associative[I[T]]")
                                                      (("2"
                                                        (copy -1)
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "denotation(op_imp(qq, t2!1))"
                                                           "denotation(op_imp(ww, t1!1))"
                                                           "denotation(qq)")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (inst
                                                                 -2
                                                                 "denotation(op_imp(ww, t1!1))"
                                                                 "denotation(qq)")
                                                                (("2"
                                                                  (replace -2)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "denotation(op_imp(qq, t2!1))"
                                                                       "denotation(qq)"
                                                                       "denotation(op_imp(ww, t1!1))")
                                                                      (("2"
                                                                        (swap-rel
                                                                         -1)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "qq"
                                                                               "t2!1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3)
                                                                                (("2"
                                                                                  (name
                                                                                   "yy"
                                                                                   "intersection(denotation(op_imp(qq, t2!1)), denotation(qq))")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "denotation(op_imp(ww, t1!1))")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2"
                                  (case " union(denotation(qq), comp(denotation(qq))) = fullset[I[T]]")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (lemma "intersection_full[I[T]]")
                                        (("1"
                                          (inst -1 "intersection(ee)")
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -1 -2 -3 2)
                                    (("2" (expand "union")
                                      (("2"
                                        (expand "comp")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (subset_antisymmetric formula-decl nil sets_lemmas nil)
    (intersection const-decl "set" sets nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (ww skolem-const-decl "(op_imp?[T])" Sig_denot nil)
    (denotation_imp_inc_2 formula-decl nil Sig_denot nil)
    (intersection_commutative formula-decl nil sets_lemmas nil)
    (ee skolem-const-decl "[set[I[T]], set[I[T]]]" Sig_denot nil)
    (emptyset const-decl "set" sets nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (denotation_imp_full formula-decl nil Sig_denot nil)
    (demorgan1 formula-decl nil sets_lemmas nil)
    (qq skolem-const-decl "(op_imp?[T])" Sig_denot nil)
    (fullset const-decl "set" sets nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (complement const-decl "set" sets nil)
    (comp_eq_complement formula-decl nil Sig_prop nil)
    (intersection_associative formula-decl nil sets_lemmas nil)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (distribute_intersection_union formula-decl nil sets_lemmas nil)
    (intersection_full formula-decl nil sets_lemmas nil)
    (subset? const-decl "bool" sets nil) (union const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (denotation_imp_sub_r formula-decl nil Sig_denot nil)
    (denotation_imp_sub_l formula-decl nil Sig_denot nil)
    (subset_union formula-decl nil sets_lemmas nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (op_or adt-constructor-decl "[[Sig_form, Sig_form] -> (op_or?)]"
     Sig_form_adt nil)
    (op_or? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (Sig_form type-decl nil Sig_form_adt nil) (set type-eq-decl nil sets nil))
   shostak)
  (hoja4 "hoja4" 3640792949
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (name "qq" "op_imp(t1!1,t2!1)")
                  (("2" (replace -1)
                    (("2" (name "ww" "op_imp(t2!1,t1!1)")
                      (("2" (replace -1)
                        (("2"
                          (name "ee" "(denotation(op_imp(qq, t2!1)),
                           denotation(op_imp(ww, t1!1)))")
                          (("2" (replace -1)
                            (("2"
                              (case "intersection(ee) = intersection(intersection(ee),union(denotation(qq),comp(denotation(qq))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(ee)"
                                       "denotation(qq)"
                                       "comp(denotation(qq))")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (case
                                             "subset?(intersection(intersection(ee), denotation(qq)),denotation(t2!1))")
                                            (("1"
                                              (case
                                               "subset?(  intersection(intersection(ee), comp(denotation(qq))),denotation(t1!1))")
                                              (("1"
                                                (hide -3 -4 -5)
                                                (("1"
                                                  (name
                                                   "rr"
                                                   "intersection(intersection(ee), denotation(qq))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         " intersection(intersection(ee), comp(denotation(qq)))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (expand
                                                                   "union")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "denotation"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 2)
                                                (("2"
                                                  (case
                                                   "intersection(intersection(ee), comp(denotation(qq))) = intersection(intersection(intersection(ee), comp(denotation(qq))),union(denotation(op_imp(t2!1,t1!1)),comp(denotation(op_imp(t2!1,t1!1)))))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (lemma
                                                         "distribute_intersection_union[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "intersection(intersection(ee),
                                        comp(denotation(qq)))"
                                                           "denotation(op_imp(t2!1, t1!1))"
                                                           " comp(denotation(op_imp(t2!1, t1!1)))
")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case
                                                                 "subset?(intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 denotation(op_imp(t2!1, t1!1))),denotation(t1!1))")
                                                                (("1"
                                                                  (case
                                                                   "subset?( intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 comp(denotation(op_imp(t2!1, t1!1)))),emptyset[I[T]])")
                                                                  (("1"
                                                                    (name
                                                                     "aaa"
                                                                     "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           comp(denotation(op_imp(t2!1, t1!1))))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (name
                                                                           "sss"
                                                                           "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           denotation(op_imp(t2!1, t1!1)))")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1
                                                                               -4
                                                                               -5
                                                                               -6)
                                                                              (("1"
                                                                                (expand
                                                                                 "subset?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "union")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -1
                                                                     2)
                                                                    (("2"
                                                                      (postpone)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (expand
                                                                     "ee")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (lemma
                                                                         "intersection_associative[I[T]]")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "_"
                                                                           "_"
                                                                           " denotation(op_imp(t2!1, t1!1))")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "intersection
                                        (denotation(op_imp(qq, t2!1)),
                                         denotation(op_imp(ww, t1!1)))"
                                                                             "_")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "comp(denotation(qq))")
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "intersection_commutative[I[T]]")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "comp(denotation(qq))"
                                                                                       "denotation(op_imp(t2!1, t1!1))")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "intersection_associative[I[T]]")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "intersection(denotation(op_imp(qq, t2!1)),
                                        denotation(op_imp(ww, t1!1)))"
                                                                                               "_"
                                                                                               "_")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(op_imp(t2!1, t1!1))"
                                                                                                 "comp(denotation(qq))")
                                                                                                (("2"
                                                                                                  (swap-rel
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "intersection_associative[I[T]]")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "denotation(op_imp(qq, t2!1))"
                                                                                                           " denotation(op_imp(ww, t1!1))"
                                                                                                           " denotation(op_imp(t2!1, t1!1))")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "subset?( intersection
                                        (denotation(op_imp(ww, t1!1)),
                                         denotation(op_imp(t2!1, t1!1))),denotation(t1!1))")
                                                                                                                (("1"
                                                                                                                  (name
                                                                                                                   "ggg"
                                                                                                                   "intersection(denotation(op_imp(ww, t1!1)),
                           denotation(op_imp(t2!1, t1!1)))")
                                                                                                                  (("1"
                                                                                                                    (replace
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (hide
                                                                                                                       -1)
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "subset?")
                                                                                                                        (("1"
                                                                                                                          (expand
                                                                                                                           "intersection")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "member")
                                                                                                                            (("1"
                                                                                                                              (skosimp)
                                                                                                                              (("1"
                                                                                                                                (inst
                                                                                                                                 -1
                                                                                                                                 "x!1")
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "denotation_imp_inc_2")
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "ww")
                                                                                                                      (("2"
                                                                                                                        (inst
                                                                                                                         -1
                                                                                                                         "op_imp(t2!1, t1!1)"
                                                                                                                         "t1!1"
                                                                                                                         "i!1")
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case
                                                       " union(denotation(op_imp(t2!1, t1!1)),
                          comp(denotation(op_imp(t2!1, t1!1)))) = fullset[I[T]]")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (name
                                                             "ppp"
                                                             "  intersection(intersection(ee), comp(denotation(qq)))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (expand
                                                                   "intersection")
                                                                  (("1"
                                                                    (expand
                                                                     "fullset")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (apply-extensionality)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (name
                                                           "ooo"
                                                           "denotation(op_imp(t2!1,t1!1))")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (expand
                                                                 "comp")
                                                                (("2"
                                                                  (expand
                                                                   "union")
                                                                  (("2"
                                                                    (expand
                                                                     "fullset")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (apply-extensionality)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "denotation_imp_inc_2")
                                                (("2"
                                                  (expand "ee")
                                                  (("2"
                                                    (lemma
                                                     "intersection_commutative[I[T]]")
                                                    (("2"
                                                      (lemma
                                                       "intersection_associative[I[T]]")
                                                      (("2"
                                                        (copy -1)
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "denotation(op_imp(qq, t2!1))"
                                                           "denotation(op_imp(ww, t1!1))"
                                                           "denotation(qq)")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (inst
                                                                 -2
                                                                 "denotation(op_imp(ww, t1!1))"
                                                                 "denotation(qq)")
                                                                (("2"
                                                                  (replace -2)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "denotation(op_imp(qq, t2!1))"
                                                                       "denotation(qq)"
                                                                       "denotation(op_imp(ww, t1!1))")
                                                                      (("2"
                                                                        (swap-rel
                                                                         -1)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "qq"
                                                                               "t2!1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3)
                                                                                (("2"
                                                                                  (name
                                                                                   "yy"
                                                                                   "intersection(denotation(op_imp(qq, t2!1)), denotation(qq))")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "denotation(op_imp(ww, t1!1))")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2"
                                  (case " union(denotation(qq), comp(denotation(qq))) = fullset[I[T]]")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (lemma "intersection_full[I[T]]")
                                        (("1"
                                          (inst -1 "intersection(ee)")
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -1 -2 -3 2)
                                    (("2" (expand "union")
                                      (("2"
                                        (expand "comp")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Sig_form type-decl nil Sig_form_adt nil)
    (op_or? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (op_or adt-constructor-decl "[[Sig_form, Sig_form] -> (op_or?)]"
     Sig_form_adt nil)
    (comp_eq_complement formula-decl nil Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil))
   shostak)
  (variascos "variascos" 3640792554
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (name "qq" "op_imp(t1!1,t2!1)")
                  (("2" (replace -1)
                    (("2" (name "ww" "op_imp(t2!1,t1!1)")
                      (("2" (replace -1)
                        (("2"
                          (name "ee" "(denotation(op_imp(qq, t2!1)),
                           denotation(op_imp(ww, t1!1)))")
                          (("2" (replace -1)
                            (("2"
                              (case "intersection(ee) = intersection(intersection(ee),union(denotation(qq),comp(denotation(qq))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(ee)"
                                       "denotation(qq)"
                                       "comp(denotation(qq))")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (case
                                             "subset?(intersection(intersection(ee), denotation(qq)),denotation(t2!1))")
                                            (("1"
                                              (case
                                               "subset?(  intersection(intersection(ee), comp(denotation(qq))),denotation(t1!1))")
                                              (("1"
                                                (hide -3 -4 -5)
                                                (("1"
                                                  (name
                                                   "rr"
                                                   "intersection(intersection(ee), denotation(qq))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         " intersection(intersection(ee), comp(denotation(qq)))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (expand
                                                                   "union")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "denotation"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 2)
                                                (("2"
                                                  (case
                                                   "intersection(intersection(ee), comp(denotation(qq))) = intersection(intersection(intersection(ee), comp(denotation(qq))),union(denotation(op_imp(t2!1,t1!1)),comp(denotation(op_imp(t2!1,t1!1)))))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (lemma
                                                         "distribute_intersection_union[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "intersection(intersection(ee),
                                        comp(denotation(qq)))"
                                                           "denotation(op_imp(t2!1, t1!1))"
                                                           " comp(denotation(op_imp(t2!1, t1!1)))
")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case
                                                                 "subset?(intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 denotation(op_imp(t2!1, t1!1))),denotation(t1!1))")
                                                                (("1"
                                                                  (case
                                                                   "subset?( intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 comp(denotation(op_imp(t2!1, t1!1)))),emptyset[I[T]])")
                                                                  (("1"
                                                                    (name
                                                                     "aaa"
                                                                     "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           comp(denotation(op_imp(t2!1, t1!1))))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (name
                                                                           "sss"
                                                                           "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           denotation(op_imp(t2!1, t1!1)))")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1
                                                                               -4
                                                                               -5
                                                                               -6)
                                                                              (("1"
                                                                                (expand
                                                                                 "subset?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "union")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -1
                                                                     2)
                                                                    (("2"
                                                                      (postpone)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (expand
                                                                     "ee")
                                                                    (("2"
                                                                      (hide
                                                                       -1)
                                                                      (("2"
                                                                        (lemma
                                                                         "intersection_associative[I[T]]")
                                                                        (("2"
                                                                          (inst
                                                                           -1
                                                                           "_"
                                                                           "_"
                                                                           " denotation(op_imp(t2!1, t1!1))")
                                                                          (("2"
                                                                            (inst
                                                                             -1
                                                                             "intersection
                                        (denotation(op_imp(qq, t2!1)),
                                         denotation(op_imp(ww, t1!1)))"
                                                                             "_")
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "comp(denotation(qq))")
                                                                              (("2"
                                                                                (replace
                                                                                 -1)
                                                                                (("2"
                                                                                  (hide
                                                                                   -1)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "intersection_commutative[I[T]]")
                                                                                    (("2"
                                                                                      (inst
                                                                                       -1
                                                                                       "comp(denotation(qq))"
                                                                                       "denotation(op_imp(t2!1, t1!1))")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (hide
                                                                                           -1)
                                                                                          (("2"
                                                                                            (lemma
                                                                                             "intersection_associative[I[T]]")
                                                                                            (("2"
                                                                                              (inst
                                                                                               -1
                                                                                               "intersection(denotation(op_imp(qq, t2!1)),
                                        denotation(op_imp(ww, t1!1)))"
                                                                                               "_"
                                                                                               "_")
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -1
                                                                                                 "denotation(op_imp(t2!1, t1!1))"
                                                                                                 "comp(denotation(qq))")
                                                                                                (("2"
                                                                                                  (swap-rel
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (hide
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "intersection_associative[I[T]]")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -1
                                                                                                           "denotation(op_imp(qq, t2!1))"
                                                                                                           " denotation(op_imp(ww, t1!1))"
                                                                                                           " denotation(op_imp(t2!1, t1!1))")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "subset?( intersection
                                        (denotation(op_imp(ww, t1!1)),
                                         denotation(op_imp(t2!1, t1!1))),denotation(t1!1))")
                                                                                                                (("1"
                                                                                                                  (postpone)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (hide
                                                                                                                   2)
                                                                                                                  (("2"
                                                                                                                    (postpone)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case
                                                       " union(denotation(op_imp(t2!1, t1!1)),
                          comp(denotation(op_imp(t2!1, t1!1)))) = fullset[I[T]]")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (name
                                                             "ppp"
                                                             "  intersection(intersection(ee), comp(denotation(qq)))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (expand
                                                                   "intersection")
                                                                  (("1"
                                                                    (expand
                                                                     "fullset")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (apply-extensionality)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (name
                                                           "ooo"
                                                           "denotation(op_imp(t2!1,t1!1))")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (expand
                                                                 "comp")
                                                                (("2"
                                                                  (expand
                                                                   "union")
                                                                  (("2"
                                                                    (expand
                                                                     "fullset")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (apply-extensionality)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "denotation_imp_inc_2")
                                                (("2"
                                                  (expand "ee")
                                                  (("2"
                                                    (lemma
                                                     "intersection_commutative[I[T]]")
                                                    (("2"
                                                      (lemma
                                                       "intersection_associative[I[T]]")
                                                      (("2"
                                                        (copy -1)
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "denotation(op_imp(qq, t2!1))"
                                                           "denotation(op_imp(ww, t1!1))"
                                                           "denotation(qq)")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (inst
                                                                 -2
                                                                 "denotation(op_imp(ww, t1!1))"
                                                                 "denotation(qq)")
                                                                (("2"
                                                                  (replace -2)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "denotation(op_imp(qq, t2!1))"
                                                                       "denotation(qq)"
                                                                       "denotation(op_imp(ww, t1!1))")
                                                                      (("2"
                                                                        (swap-rel
                                                                         -1)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "qq"
                                                                               "t2!1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3)
                                                                                (("2"
                                                                                  (name
                                                                                   "yy"
                                                                                   "intersection(denotation(op_imp(qq, t2!1)), denotation(qq))")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "denotation(op_imp(ww, t1!1))")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2"
                                  (case " union(denotation(qq), comp(denotation(qq))) = fullset[I[T]]")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (lemma "intersection_full[I[T]]")
                                        (("1"
                                          (inst -1 "intersection(ee)")
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -1 -2 -3 2)
                                    (("2" (expand "union")
                                      (("2"
                                        (expand "comp")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (variascosa "variascosa" 3640791521
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (name "qq" "op_imp(t1!1,t2!1)")
                  (("2" (replace -1)
                    (("2" (name "ww" "op_imp(t2!1,t1!1)")
                      (("2" (replace -1)
                        (("2"
                          (name "ee" "(denotation(op_imp(qq, t2!1)),
                           denotation(op_imp(ww, t1!1)))")
                          (("2" (replace -1)
                            (("2"
                              (case "intersection(ee) = intersection(intersection(ee),union(denotation(qq),comp(denotation(qq))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(ee)"
                                       "denotation(qq)"
                                       "comp(denotation(qq))")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (case
                                             "subset?(intersection(intersection(ee), denotation(qq)),denotation(t2!1))")
                                            (("1"
                                              (case
                                               "subset?(  intersection(intersection(ee), comp(denotation(qq))),denotation(t1!1))")
                                              (("1"
                                                (hide -3 -4 -5)
                                                (("1"
                                                  (name
                                                   "rr"
                                                   "intersection(intersection(ee), denotation(qq))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         " intersection(intersection(ee), comp(denotation(qq)))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (expand
                                                                   "union")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "denotation"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 2)
                                                (("2"
                                                  (case
                                                   "intersection(intersection(ee), comp(denotation(qq))) = intersection(intersection(intersection(ee), comp(denotation(qq))),union(denotation(op_imp(t2!1,t1!1)),comp(denotation(op_imp(t2!1,t1!1)))))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (lemma
                                                         "distribute_intersection_union[I[T]]")
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "intersection(intersection(ee),
                                        comp(denotation(qq)))"
                                                           "denotation(op_imp(t2!1, t1!1))"
                                                           " comp(denotation(op_imp(t2!1, t1!1)))
")
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (hide -1)
                                                              (("1"
                                                                (case
                                                                 "subset?(intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 denotation(op_imp(t2!1, t1!1))),denotation(t1!1))")
                                                                (("1"
                                                                  (case
                                                                   "subset?( intersection(intersection(intersection(ee),
                                              comp(denotation(qq))),
                                 comp(denotation(op_imp(t2!1, t1!1)))),emptyset[I[T]])")
                                                                  (("1"
                                                                    (name
                                                                     "aaa"
                                                                     "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           comp(denotation(op_imp(t2!1, t1!1))))")
                                                                    (("1"
                                                                      (replace
                                                                       -1)
                                                                      (("1"
                                                                        (hide
                                                                         -1)
                                                                        (("1"
                                                                          (name
                                                                           "sss"
                                                                           "intersection(intersection(intersection(ee),
                                        comp(denotation(qq))),
                           denotation(op_imp(t2!1, t1!1)))")
                                                                          (("1"
                                                                            (replace
                                                                             -1)
                                                                            (("1"
                                                                              (hide
                                                                               -1
                                                                               -4
                                                                               -5
                                                                               -6)
                                                                              (("1"
                                                                                (expand
                                                                                 "subset?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "union")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "member")
                                                                                    (("1"
                                                                                      (skosimp)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -1
                                                                                         "x!1")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -2
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (grind)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil)
                                                                   ("2"
                                                                    (hide
                                                                     -1
                                                                     2)
                                                                    (("2"
                                                                      (postpone)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (hide 2)
                                                                  (("2"
                                                                    (postpone)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case
                                                       " union(denotation(op_imp(t2!1, t1!1)),
                          comp(denotation(op_imp(t2!1, t1!1)))) = fullset[I[T]]")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (name
                                                             "ppp"
                                                             "  intersection(intersection(ee), comp(denotation(qq)))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (expand
                                                                   "intersection")
                                                                  (("1"
                                                                    (expand
                                                                     "fullset")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (apply-extensionality)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (name
                                                           "ooo"
                                                           "denotation(op_imp(t2!1,t1!1))")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (expand
                                                                 "comp")
                                                                (("2"
                                                                  (expand
                                                                   "union")
                                                                  (("2"
                                                                    (expand
                                                                     "fullset")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (apply-extensionality)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "denotation_imp_inc_2")
                                                (("2"
                                                  (expand "ee")
                                                  (("2"
                                                    (lemma
                                                     "intersection_commutative[I[T]]")
                                                    (("2"
                                                      (lemma
                                                       "intersection_associative[I[T]]")
                                                      (("2"
                                                        (copy -1)
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "denotation(op_imp(qq, t2!1))"
                                                           "denotation(op_imp(ww, t1!1))"
                                                           "denotation(qq)")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (inst
                                                                 -2
                                                                 "denotation(op_imp(ww, t1!1))"
                                                                 "denotation(qq)")
                                                                (("2"
                                                                  (replace -2)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "denotation(op_imp(qq, t2!1))"
                                                                       "denotation(qq)"
                                                                       "denotation(op_imp(ww, t1!1))")
                                                                      (("2"
                                                                        (swap-rel
                                                                         -1)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "qq"
                                                                               "t2!1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3)
                                                                                (("2"
                                                                                  (name
                                                                                   "yy"
                                                                                   "intersection(denotation(op_imp(qq, t2!1)), denotation(qq))")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "denotation(op_imp(ww, t1!1))")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2"
                                  (case " union(denotation(qq), comp(denotation(qq))) = fullset[I[T]]")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (lemma "intersection_full[I[T]]")
                                        (("1"
                                          (inst -1 "intersection(ee)")
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -1 -2 -3 2)
                                    (("2" (expand "union")
                                      (("2"
                                        (expand "comp")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (variascosas "variascosas" 3640791084
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (name "qq" "op_imp(t1!1,t2!1)")
                  (("2" (replace -1)
                    (("2" (name "ww" "op_imp(t2!1,t1!1)")
                      (("2" (replace -1)
                        (("2"
                          (name "ee" "(denotation(op_imp(qq, t2!1)),
                           denotation(op_imp(ww, t1!1)))")
                          (("2" (replace -1)
                            (("2"
                              (case "intersection(ee) = intersection(intersection(ee),union(denotation(qq),comp(denotation(qq))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(ee)"
                                       "denotation(qq)"
                                       "comp(denotation(qq))")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (case
                                             "subset?(intersection(intersection(ee), denotation(qq)),denotation(t2!1))")
                                            (("1"
                                              (case
                                               "subset?(  intersection(intersection(ee), comp(denotation(qq))),denotation(t1!1))")
                                              (("1"
                                                (hide -3 -4 -5)
                                                (("1"
                                                  (name
                                                   "rr"
                                                   "intersection(intersection(ee), denotation(qq))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         " intersection(intersection(ee), comp(denotation(qq)))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (expand
                                                                   "union")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "denotation"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 2)
                                                (("2"
                                                  (case
                                                   "intersection(intersection(ee), comp(denotation(qq))) = intersection(intersection(intersection(ee), comp(denotation(qq))),union(denotation(op_imp(t2!1,t1!1)),comp(denotation(op_imp(t2!1,t1!1)))))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (hide 2)
                                                    (("2"
                                                      (case
                                                       " union(denotation(op_imp(t2!1, t1!1)),
                          comp(denotation(op_imp(t2!1, t1!1)))) = fullset[I[T]]")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (name
                                                             "ppp"
                                                             "  intersection(intersection(ee), comp(denotation(qq)))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (expand
                                                                   "intersection")
                                                                  (("1"
                                                                    (expand
                                                                     "fullset")
                                                                    (("1"
                                                                      (expand
                                                                       "member")
                                                                      (("1"
                                                                        (apply-extensionality)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide 2)
                                                        (("2"
                                                          (name
                                                           "ooo"
                                                           "denotation(op_imp(t2!1,t1!1))")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (expand
                                                                 "comp")
                                                                (("2"
                                                                  (expand
                                                                   "union")
                                                                  (("2"
                                                                    (expand
                                                                     "fullset")
                                                                    (("2"
                                                                      (expand
                                                                       "member")
                                                                      (("2"
                                                                        (apply-extensionality)
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "denotation_imp_inc_2")
                                                (("2"
                                                  (expand "ee")
                                                  (("2"
                                                    (lemma
                                                     "intersection_commutative[I[T]]")
                                                    (("2"
                                                      (lemma
                                                       "intersection_associative[I[T]]")
                                                      (("2"
                                                        (copy -1)
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "denotation(op_imp(qq, t2!1))"
                                                           "denotation(op_imp(ww, t1!1))"
                                                           "denotation(qq)")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (inst
                                                                 -2
                                                                 "denotation(op_imp(ww, t1!1))"
                                                                 "denotation(qq)")
                                                                (("2"
                                                                  (replace -2)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "denotation(op_imp(qq, t2!1))"
                                                                       "denotation(qq)"
                                                                       "denotation(op_imp(ww, t1!1))")
                                                                      (("2"
                                                                        (swap-rel
                                                                         -1)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "qq"
                                                                               "t2!1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3)
                                                                                (("2"
                                                                                  (name
                                                                                   "yy"
                                                                                   "intersection(denotation(op_imp(qq, t2!1)), denotation(qq))")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "denotation(op_imp(ww, t1!1))")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2"
                                  (case " union(denotation(qq), comp(denotation(qq))) = fullset[I[T]]")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (lemma "intersection_full[I[T]]")
                                        (("1"
                                          (inst -1 "intersection(ee)")
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -1 -2 -3 2)
                                    (("2" (expand "union")
                                      (("2"
                                        (expand "comp")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (much "much" 3640790595
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (name "qq" "op_imp(t1!1,t2!1)")
                  (("2" (replace -1)
                    (("2" (name "ww" "op_imp(t2!1,t1!1)")
                      (("2" (replace -1)
                        (("2"
                          (name "ee" "(denotation(op_imp(qq, t2!1)),
                           denotation(op_imp(ww, t1!1)))")
                          (("2" (replace -1)
                            (("2"
                              (case "intersection(ee) = intersection(intersection(ee),union(denotation(qq),comp(denotation(qq))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(ee)"
                                       "denotation(qq)"
                                       "comp(denotation(qq))")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (case
                                             "subset?(intersection(intersection(ee), denotation(qq)),denotation(t2!1))")
                                            (("1"
                                              (case
                                               "subset?(  intersection(intersection(ee), comp(denotation(qq))),denotation(t1!1))")
                                              (("1"
                                                (hide -3 -4 -5)
                                                (("1"
                                                  (name
                                                   "rr"
                                                   "intersection(intersection(ee), denotation(qq))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         " intersection(intersection(ee), comp(denotation(qq)))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (expand
                                                                   "union")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "denotation"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 2)
                                                (("2" (postpone) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "denotation_imp_inc_2")
                                                (("2"
                                                  (expand "ee")
                                                  (("2"
                                                    (lemma
                                                     "intersection_commutative[I[T]]")
                                                    (("2"
                                                      (lemma
                                                       "intersection_associative[I[T]]")
                                                      (("2"
                                                        (copy -1)
                                                        (("2"
                                                          (inst
                                                           -1
                                                           "denotation(op_imp(qq, t2!1))"
                                                           "denotation(op_imp(ww, t1!1))"
                                                           "denotation(qq)")
                                                          (("2"
                                                            (replace -1)
                                                            (("2"
                                                              (hide -1)
                                                              (("2"
                                                                (inst
                                                                 -2
                                                                 "denotation(op_imp(ww, t1!1))"
                                                                 "denotation(qq)")
                                                                (("2"
                                                                  (replace -2)
                                                                  (("2"
                                                                    (hide -2)
                                                                    (("2"
                                                                      (inst
                                                                       -1
                                                                       "denotation(op_imp(qq, t2!1))"
                                                                       "denotation(qq)"
                                                                       "denotation(op_imp(ww, t1!1))")
                                                                      (("2"
                                                                        (swap-rel
                                                                         -1)
                                                                        (("2"
                                                                          (replace
                                                                           -1)
                                                                          (("2"
                                                                            (hide
                                                                             -1)
                                                                            (("2"
                                                                              (inst
                                                                               -1
                                                                               "qq"
                                                                               "t2!1"
                                                                               "i!1")
                                                                              (("2"
                                                                                (hide
                                                                                 -2
                                                                                 -3)
                                                                                (("2"
                                                                                  (name
                                                                                   "yy"
                                                                                   "intersection(denotation(op_imp(qq, t2!1)), denotation(qq))")
                                                                                  (("2"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("2"
                                                                                      (hide
                                                                                       -1)
                                                                                      (("2"
                                                                                        (name
                                                                                         "uuu"
                                                                                         "denotation(op_imp(ww, t1!1))")
                                                                                        (("2"
                                                                                          (replace
                                                                                           -1)
                                                                                          (("2"
                                                                                            (hide
                                                                                             -1)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "subset?")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "intersection")
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "member")
                                                                                                  (("2"
                                                                                                    (skosimp)
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -1
                                                                                                       "x!1")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2"
                                  (case " union(denotation(qq), comp(denotation(qq))) = fullset[I[T]]")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (lemma "intersection_full[I[T]]")
                                        (("1"
                                          (inst -1 "intersection(ee)")
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -1 -2 -3 2)
                                    (("2" (expand "union")
                                      (("2"
                                        (expand "comp")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (aunf "aunf" 3640789769
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (name "qq" "op_imp(t1!1,t2!1)")
                  (("2" (replace -1)
                    (("2" (name "ww" "op_imp(t2!1,t1!1)")
                      (("2" (replace -1)
                        (("2"
                          (name "ee" "(denotation(op_imp(qq, t2!1)),
                           denotation(op_imp(ww, t1!1)))")
                          (("2" (replace -1)
                            (("2"
                              (case "intersection(ee) = intersection(intersection(ee),union(denotation(qq),comp(denotation(qq))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (lemma
                                     "distribute_intersection_union[I[T]]")
                                    (("1"
                                      (inst
                                       -1
                                       "intersection(ee)"
                                       "denotation(qq)"
                                       "comp(denotation(qq))")
                                      (("1"
                                        (replace -1)
                                        (("1"
                                          (hide -1)
                                          (("1"
                                            (case
                                             "subset?(intersection(intersection(ee), denotation(qq)),denotation(t2!1))")
                                            (("1"
                                              (case
                                               "subset?(  intersection(intersection(ee), comp(denotation(qq))),denotation(t1!1))")
                                              (("1"
                                                (hide -3 -4 -5)
                                                (("1"
                                                  (name
                                                   "rr"
                                                   "intersection(intersection(ee), denotation(qq))")
                                                  (("1"
                                                    (replace -1)
                                                    (("1"
                                                      (hide -1)
                                                      (("1"
                                                        (name
                                                         "tt"
                                                         " intersection(intersection(ee), comp(denotation(qq)))")
                                                        (("1"
                                                          (replace -1)
                                                          (("1"
                                                            (hide -1)
                                                            (("1"
                                                              (expand
                                                               "subset?")
                                                              (("1"
                                                                (expand
                                                                 "member")
                                                                (("1"
                                                                  (expand
                                                                   "union")
                                                                  (("1"
                                                                    (expand
                                                                     "member")
                                                                    (("1"
                                                                      (expand
                                                                       "denotation"
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "union")
                                                                        (("1"
                                                                          (expand
                                                                           "member")
                                                                          (("1"
                                                                            (skosimp)
                                                                            (("1"
                                                                              (inst
                                                                               -1
                                                                               "x!1")
                                                                              (("1"
                                                                                (inst
                                                                                 -2
                                                                                 "x!1")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 2)
                                                (("2" (postpone) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "denotation_imp_inc_2")
                                                (("2"
                                                  (expand "ee")
                                                  (("2"
                                                    (lemma
                                                     "intersection_commutative[I[T]]")
                                                    (("2"
                                                      (lemma
                                                       "intersection_associative[I[T]]")
                                                      (("2"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 2)
                                (("2"
                                  (case " union(denotation(qq), comp(denotation(qq))) = fullset[I[T]]")
                                  (("1" (replace -1)
                                    (("1" (hide -1)
                                      (("1"
                                        (lemma "intersection_full[I[T]]")
                                        (("1"
                                          (inst -1 "intersection(ee)")
                                          (("1"
                                            (replace -1)
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (hide -1 -2 -3 2)
                                    (("2" (expand "union")
                                      (("2"
                                        (expand "comp")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (expand "fullset")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2" (flatten) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (mitad "mitad" 3640439865
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (inst -1 "t2!1" "t1!1" "i!1") nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (cercadelamit "cercadelamit" 3640348551
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2)
                                (("2" (lemma " denotation_imp_sub_l")
                                  (("2" (inst -1 "t1!1" "t2!1" "i!1") nil
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (lemma " denotation_imp_sub_l")
                              (("2" (postpone) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (cercadelamitad "cercadelamitad" 3640348207
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2)
                          (("2"
                            (case "subset?(denotation(t2!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                            (("1"
                              (case "subset?(denotation(t2!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (expand "subset?")
                                (("1" (expand "intersection")
                                  (("1" (expand "member")
                                    (("1" (skosimp)
                                      (("1"
                                        (inst -1 "x!1")
                                        (("1"
                                          (inst -2 "x!1")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -1 2) (("2" (postpone) nil nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t2!1" "i!1")
                                  (("2" (inst -1 "op_imp(t1!1, t2!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (dosdelamitad "dosdelamitad" 3640346744
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2)
                              (("2" (lemma "denotation_imp_sub_r")
                                (("2" (inst -1 "_" "t1!1" "i!1")
                                  (("2" (inst -1 "op_imp(t2!1, t1!1)") nil
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (tresdelamitad "tresdelamitad" 3640271298
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "subset?(denotation(t1!1),denotation(op_imp(op_imp(t1!1, t2!1), t2!1)))")
                          (("1"
                            (case "subset?(denotation(t1!1), denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                            (("1" (expand "intersection")
                              (("1" (expand "subset?")
                                (("1" (skosimp)
                                  (("1" (expand "member")
                                    (("1" (inst -1 "x!1")
                                      (("1"
                                        (inst -2 "x!1")
                                        (("1" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                            nil)
                           ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (empezando "empezando" 3640270950
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split)
                (("1"
                  (case " subset?(union(denotation(t1!1), denotation(t2!1)),
              intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                  (("1"
                    (name "qqq"
                          " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                    (("1" (replace -1)
                      (("1" (hide -1) (("1" (grind) nil nil)) nil)) nil))
                    nil)
                   ("2" (hide 2)
                    (("2"
                      (case "subset?(denotation(t1!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                      (("1"
                        (case "subset?(denotation(t2!1), intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1))))")
                        (("1" (lemma "subset_union[I[T]]")
                          (("1"
                            (inst -1 "denotation(t1!1)" "denotation(t2!1)"
                             "_")
                            (("1"
                              (inst -1
                               " intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                           denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil)
                         ("2" (hide -1 2) (("2" (postpone) nil nil)) nil))
                        nil)
                       ("2" (hide 2) (("2" (postpone) nil nil)) nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (planteamiento "planteamiento" 3640270323
   ("" (skosimp)
    (("" (lemma "subset_antisymmetric[I[T]]")
      (("" (inst -1 " denotation(op_or(t1!1, t2!1))" "_")
        ((""
          (inst -1
           "  intersection(denotation(op_imp(op_imp(t1!1, t2!1), t2!1)),
                    denotation(op_imp(op_imp(t2!1, t1!1), t1!1)))")
          (("" (assert)
            (("" (hide 2)
              (("" (split) (("1" (postpone) nil nil) ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (mala "no vale" 3638796101
   ("" (skeep)
    (("" (expand "denotation" 1 1)
      (("" (apply-extensionality)
        (("" (hide 2)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "union")
                  (("1" (split)
                    (("1" (expand "intersection")
                      (("1" (split)
                        (("1" (postpone) nil nil)
                         ("2" (lemma "denotation_imp_sub_r")
                          (("2" (inst -1 "op_imp(t2, t1)" "t1" "i")
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "intersection")
                      (("2" (split)
                        (("1" (lemma "denotation_imp_sub_r")
                          (("1" (inst -1 "op_imp(t1, t2)" "t2" "i")
                            (("1" (grind) nil nil)) nil))
                          nil)
                         ("2" (postpone) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_or-1 nil 3638188670
   ("" (skeep)
    (("" (expand "denotation" 1 1)
      (("" (apply-extensionality)
        (("" (hide 2)
          (("" (iff)
            (("" (split)
              (("1" (flatten)
                (("1" (expand "union")
                  (("1" (split)
                    (("1" (expand "intersection")
                      (("1" (split)
                        (("1" (postpone) nil nil)
                         ("2" (lemma "denotation_imp_sub_r")
                          (("2" (inst -1 "op_imp(t2, t1)" "t1" "i")
                            (("2" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "intersection")
                      (("2" (split)
                        (("1" (lemma "denotation_imp_sub_r")
                          (("1" (inst -1 "op_imp(t1, t2)" "t2" "i")
                            (("1" (grind) nil nil)) nil))
                          nil)
                         ("2" (postpone) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (denotation_not_charact 0
  (teo "fin" 3638533370
   ("" (lemma "denotation_imp")
    (("" (skosimp)
      (("" (inst -1 "s!1" "_" "_")
        (("" (inst -1 "bot" "_")
          (("" (apply-extensionality)
            (("" (hide 2)
              (("" (inst -1 "x!1")
                (("" (replace -1)
                  (("" (hide -1)
                    (("" (case " denotation(bot)=emptyset")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (lemma "union_empty[I[T]]")
                            (("1"
                              (inst -1
                               "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(s!1))))),
                  intersection(comp(denotation(s!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(emptyset)))))")
                              (("1" (replace -1)
                                (("1" (hide -1)
                                  (("1"
                                    (case "intersection(comp(denotation(s!1)),
                         bottom(extend[I[T], IC[T], bool, FALSE]
                                    (classic(emptyset))))=emptyset")
                                    (("1" (replace -1)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (lemma "union_empty[I[T]]")
                                          (("1"
                                            (inst
                                             -1
                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                       (classic(comp(denotation(s!1)))))")
                                            (("1"
                                              (replace -1)
                                              (("1" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide 2)
                                      (("2"
                                        (case "classic(emptyset)=emptyset")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (lemma
                                               "intersection_empty[I[T]]")
                                              (("1"
                                                (inst
                                                 -1
                                                 "comp(denotation(s!1))")
                                                (("1"
                                                  (case
                                                   " bottom(extend[I[T], IC[T], bool, FALSE](emptyset)) = emptyset")
                                                  (("1"
                                                    (replace -1)
                                                    (("1" (propax) nil nil))
                                                    nil)
                                                   ("2"
                                                    (hide -1 2)
                                                    (("2"
                                                      (apply-extensionality)
                                                      (("2"
                                                        (hide 2)
                                                        (("2"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide 2)
                                          (("2"
                                            (expand "classic")
                                            (("2"
                                              (apply-extensionality)
                                              (("2"
                                                (hide 2)
                                                (("2"
                                                  (expand "member")
                                                  (("2" (grind) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2) (("2" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bot? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (bot adt-constructor-decl "(bot?)" Sig_form_adt nil)
    (emptyset const-decl "set" sets nil)
    (intersection const-decl "set" sets nil) (union const-decl "set" sets nil)
    (intersection_empty formula-decl nil sets_lemmas nil)
    (finite_extend application-judgement "finite_set[T]" extend_set_props nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (R_ord2 const-decl "bool" Sig_prop nil)
    (member const-decl "bool" sets nil)
    (union_empty formula-decl nil sets_lemmas nil)
    (I nonempty-type-eq-decl nil Sig_prop nil) (set type-eq-decl nil sets nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (IC type-eq-decl nil Sig_prop nil) (FALSE const-decl "bool" booleans nil)
    (extend const-decl "R" extend nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (T formal-nonempty-type-decl nil Sig_denot nil)
    (denotation_imp formula-decl nil Sig_denot nil))
   shostak)
  (faltapoco "faltapoco" 3638533056
   ("" (lemma "denotation_imp")
    (("" (skosimp)
      (("" (inst -1 "s!1" "_" "_")
        (("" (inst -1 "bot" "_")
          (("" (apply-extensionality)
            (("" (hide 2)
              (("" (inst -1 "x!1")
                (("" (replace -1)
                  (("" (hide -1)
                    (("" (case " denotation(bot)=emptyset")
                      (("1" (replace -1)
                        (("1" (hide -1)
                          (("1" (lemma "union_empty[I[T]]")
                            (("1"
                              (inst -1
                               "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(s!1))))),
                  intersection(comp(denotation(s!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(emptyset)))))")
                              (("1" (replace -1)
                                (("1" (hide -1) (("1" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2) (("2" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Sig_form type-decl nil Sig_form_adt nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (comp const-decl "set[I]" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (IC type-eq-decl nil Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (op_imp adt-constructor-decl "[[Sig_form, Sig_form] -> (op_imp?)]"
     Sig_form_adt nil)
    (op_imp? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (R_ord2 const-decl "bool" Sig_prop nil)
    (bot adt-constructor-decl "(bot?)" Sig_form_adt nil)
    (bot? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil))
   shostak)
  (encamino "encamino" 3638532848
   ("" (lemma "denotation_imp")
    (("" (skosimp)
      (("" (inst -1 "s!1" "_" "_")
        (("" (inst -1 "bot" "_")
          (("" (apply-extensionality)
            (("" (hide 2)
              (("" (inst -1 "x!1")
                (("" (replace -1)
                  (("" (hide -1) (("" (postpone) nil nil)) nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_not_charact-1 nil 3638520269
   ("" (lemma "denotation_imp")
    (("" (skosimp)
      (("" (inst -1 "s!1" "_" "_")
        (("" (inst -1 "bot" "_") (("" (postpone) nil nil)) nil)) nil))
      nil))
    nil)
   nil shostak))
 (denotation_not 0
  (teo "fin" 3638535160
   ("" (lemma "classic_total")
    (("" (skosimp)
      (("" (inst -1 "_" "i!1")
        (("" (inst -1 "comp(denotation(s!1))")
          (("" (expand "member")
            (("" (name "rr" "comp(denotation(s!1))(RT(i!1))")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (split)
                    (("1" (flatten)
                      (("1" (hide -3)
                        (("1" (assert)
                          (("1" (hide 1) (("1" (grind) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (hide -2)
                        (("2" (assert)
                          (("2" (hide -1)
                            (("2" (lemma "sub_comp_denotation")
                              (("2" (inst -1 "s!1" "i!1")
                                (("2" (expand "subset?")
                                  (("2" (inst -1 "i!1")
                                    (("2" (lemma "denotation_imp")
                                      (("2"
                                        (inst -1 "s!1" "bot" "i!1")
                                        (("2"
                                          (replace -1)
                                          (("2"
                                            (hide -1)
                                            (("2"
                                              (case
                                               "denotation(bot) = emptyset")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (hide -1)
                                                  (("1"
                                                    (lemma
                                                     "union_empty[I[T]]")
                                                    (("1"
                                                      (inst
                                                       -1
                                                       "union(bottom(extend[I[T], IC[T], bool, FALSE]
                             (classic(comp(denotation(s!1))))),
                  intersection(comp(denotation(s!1)),
                               bottom(extend[I[T], IC[T], bool, FALSE]
                                      (classic(emptyset)))))")
                                                      (("1"
                                                        (replace -1)
                                                        (("1"
                                                          (hide -1)
                                                          (("1"
                                                            (name
                                                             "lll"
                                                             "bottom(extend[I[T], IC[T], bool, FALSE]
                 (classic(comp(denotation(s!1)))))")
                                                            (("1"
                                                              (replace -1)
                                                              (("1"
                                                                (hide -1)
                                                                (("1"
                                                                  (hide -1)
                                                                  (("1"
                                                                    (grind)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (hide -1 -2 2)
                                                (("2" (grind) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((set type-eq-decl nil sets nil) (comp const-decl "set[I]" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (denotation def-decl "set[I[T]]" Sig_denot nil)
    (RT const-decl "IC" Sig_prop nil) (IC type-eq-decl nil Sig_prop nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sub_comp_denotation formula-decl nil Sig_denot nil)
    (subset? const-decl "bool" sets nil)
    (denotation_imp formula-decl nil Sig_denot nil)
    (FALSE const-decl "bool" booleans nil)
    (union_empty formula-decl nil sets_lemmas nil)
    (bot? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (bot adt-constructor-decl "(bot?)" Sig_form_adt nil)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil) (union const-decl "set" sets nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (extend const-decl "R" extend nil) (R_ord2 const-decl "bool" Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (intersection const-decl "set" sets nil)
    (member const-decl "bool" sets nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (S3 type-eq-decl nil Sig_prop nil) (s3? const-decl "bool" Sig_prop nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (classic_total formula-decl nil Sig_prop nil)
    (T formal-nonempty-type-decl nil Sig_denot nil))
   shostak)
  (falta1 "falta1" 3638532245
   ("" (lemma "classic_total")
    (("" (skosimp)
      (("" (inst -1 "_" "i!1")
        (("" (inst -1 "comp(denotation(s!1))")
          (("" (expand "member")
            (("" (name "rr" "comp(denotation(s!1))(RT(i!1))")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (split)
                    (("1" (flatten)
                      (("1" (hide -3)
                        (("1" (assert)
                          (("1" (hide 1) (("1" (grind) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (hide -2)
                        (("2" (assert)
                          (("2" (hide -1) (("2" (postpone) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((classic_total formula-decl nil Sig_prop nil)
    (s3? const-decl "bool" Sig_prop nil) (S3 type-eq-decl nil Sig_prop nil)
    (I nonempty-type-eq-decl nil Sig_prop nil)
    (bottom const-decl "set[I]" Sig_prop nil)
    (R_ord2 const-decl "bool" Sig_prop nil)
    (classic const-decl "set[IC]" Sig_prop nil)
    (bot? adt-recognizer-decl "[Sig_form -> boolean]" Sig_form_adt nil)
    (bot adt-constructor-decl "(bot?)" Sig_form_adt nil)
    (IC type-eq-decl nil Sig_prop nil) (RT const-decl "IC" Sig_prop nil)
    (Sig_form type-decl nil Sig_form_adt nil)
    (comp const-decl "set[I]" Sig_prop nil))
   shostak)
  (cosas "cosas" 3638532226
   ("" (lemma "classic_total")
    (("" (skosimp)
      (("" (inst -1 "_" "i!1")
        (("" (inst -1 "comp(denotation(s!1))")
          (("" (expand "member")
            (("" (name "rr" "comp(denotation(s!1))(RT(i!1))")
              (("" (replace -1)
                (("" (hide -1)
                  (("" (split)
                    (("1" (flatten)
                      (("1" (hide -3)
                        (("1" (assert)
                          (("1" (hide 1) (("1" (postpone) nil nil)) nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (hide -2)
                        (("2" (assert)
                          (("2" (hide -1) (("2" (postpone) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (denotation_not-1 nil 3638520109
   ("" (lemma "classic_total")
    (("" (skosimp)
      (("" (inst -1 "_" "i!1")
        (("" (inst -1 "comp(denotation(s!1))")
          (("" (expand "member")
            (("" (assert)
              (("" (flatten)
                (("" (split)
                  (("1" (split)
                    (("1" (split)
                      (("1" (postpone) nil nil)
                       ("2" (assert) (("2" (postpone) nil nil)) nil))
                      nil)
                     ("2" (propax) nil nil))
                    nil)
                   ("2" (postpone) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)))

