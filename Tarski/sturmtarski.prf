(sturmtarski
 (constructed_sturm_sequence?_TCC1 0
  (constructed_sturm_sequence?_TCC1-2 "" 3790099104
   ("" (skeep) (("" (skeep) (("" (assert) nil nil)) nil)) nil) nil shostak
   (constructed_sturm_sequence? subtype "sturmtarski.i" "nat"))
  (constructed_sturm_sequence?_TCC1-1 nil 3589569590
   ("" (skeep)
    (("" (skeep)
      (("" (inst - "j1-2" "j1-1")
        (("1" (assert) nil nil) ("2" (assert) nil nil) ("3" (assert) nil nil))
        nil))
      nil))
    nil)
   ((real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   nil (constructed_sturm_sequence? subtype "sturmtarski.i" "nat")))
 (constructed_sturm_sequence?_TCC2 0
  (constructed_sturm_sequence?_TCC2-1 nil 3589569590
   ("" (subtype-tcc) nil nil) ((/= const-decl "boolean" notequal nil)) nil
   (constructed_sturm_sequence? subtype "sturmtarski.j" "nat")))
 (constructed_sturm_sequence?_TCC3 0
  (constructed_sturm_sequence?_TCC3-1 nil 3589569590
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (> const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil))
   nil
   (constructed_sturm_sequence? subtype
    "(number_fields.-)(sturmtarski.n(0), 1)" "nat")))
 (constructed_sturm_sequence?_TCC4 0
  (constructed_sturm_sequence?_TCC4-1 nil 3589569590
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (constructed_sturm_sequence? subtype "(number_fields.-)(sturmtarski.j, 1)"
    "nat")))
 (constructed_sturm_sequence?_TCC5 0
  (constructed_sturm_sequence?_TCC5-1 nil 3619446702
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (constructed_sturm_sequence? subtype
    "sturmtarski.n((number_fields.-)(sturmtarski.j, 1))"
    "{m | sturmtarski.p((number_fields.-)(sturmtarski.j, 1))(polynomial_division.m) /= 0}")))
 (constructed_sturm_sequence?_TCC6 0
  (constructed_sturm_sequence?_TCC6-1 nil 3619446702
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (/= const-decl "boolean" notequal nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (constructed_sturm_sequence? subtype "(number_fields.-)(sturmtarski.j, 2)"
    "nat")))
 (constructed_sturm_seq_repeated_root 0
  (constructed_sturm_seq_repeated_root-1 nil 3589570933
   ("" (skeep)
    ((""
      (case "FORALL (i:nat): i-1>=0 AND i+1<=m AND polynomial(p(i),n(i))(x)=0 IMPLIES (polynomial(p(i-1),n(i-1))(x)=0 IFF polynomial(p(i+1),n(i+1))(x)=0)")
      (("1" (skeep)
        (("1"
          (case "FORALL (j:nat): i-j>=0 IMPLIES FORALL (k:nat): k<=j IMPLIES polynomial(p(i-k), n(i-k))(x) = 0")
          (("1"
            (case "FORALL (j:nat): i+j<=m IMPLIES FORALL (k:nat): k<=j IMPLIES  polynomial(p(i+k), n(i+k))(x) = 0")
            (("1" (skeep)
              (("1" (case "j>=i")
                (("1" (inst - "j-i")
                  (("1" (assert)
                    (("1" (inst - "j-i") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil)
                 ("2" (inst -2 "i-j")
                  (("1" (assert)
                    (("1" (inst -2 "i-j") (("1" (assert) nil nil)) nil)) nil)
                   ("2" (assert) nil nil))
                  nil))
                nil))
              nil)
             ("2" (hide (-1 2))
              (("2" (induct "j")
                (("1" (assert) (("1" (skeep) (("1" (assert) nil nil)) nil))
                  nil)
                 ("2" (assert)
                  (("2" (skosimp*)
                    (("2" (assert)
                      (("2" (case "k!1=0 OR k!1=1")
                        (("1" (ground) nil nil)
                         ("2" (flatten)
                          (("2" (inst-cp - "k!1-1")
                            (("2" (inst - "k!1-2")
                              (("1" (assert)
                                (("1" (assert)
                                  (("1" (inst - "i-1+k!1")
                                    (("1" (assert) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide 2)
            (("2" (induct "j")
              (("1" (assert) (("1" (skosimp*) (("1" (assert) nil nil)) nil))
                nil)
               ("2" (skosimp*)
                (("2" (assert)
                  (("2" (case "k!1=0")
                    (("1" (assert) nil nil)
                     ("2" (assert)
                      (("2" (inst-cp - "k!1-1")
                        (("2" (case "k!1=1")
                          (("1" (hide -2)
                            (("1" (assert)
                              (("1" (inst - "i") (("1" (assert) nil nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst - "k!1-2")
                            (("1" (assert)
                              (("1" (inst - "i-k!1+1")
                                (("1" (assert) nil nil)) nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("3" (skosimp*) (("3" (assert) nil nil)) nil)
               ("4" (assert) (("4" (skosimp*) (("4" (assert) nil nil)) nil))
                nil)
               ("5" (skosimp*) (("5" (assert) nil nil)) nil)
               ("6" (skosimp*) (("6" (assert) nil nil)) nil)
               ("7" (skosimp*) (("7" (assert) nil nil)) nil))
              nil))
            nil)
           ("3" (skosimp*) (("3" (assert) nil nil)) nil))
          nil))
        nil)
       ("2" (hide 2)
        (("2" (skeep)
          (("2" (assert)
            (("2" (expand "constructed_sturm_sequence?")
              (("2" (flatten)
                (("2" (inst -11 "1+i")
                  (("2" (assert)
                    (("2" (skeep)
                      (("2"
                        (name "pd"
                              "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                        (("2" (lemma "poly_divide_def")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2" (replace -2)
                                (("2" (assert)
                                  (("2" (inst - "i")
                                    (("2" (assert)
                                      (("2"
                                        (inst - "i-1" "i")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (inst - "x")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (replace -5)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "polynomial(pd`rem, pd`rdeg)(x) = 0 IFF polynomial(-c*pd`rem, pd`rdeg)(x) = 0")
                                                      (("1"
                                                        (replace -1 +)
                                                        (("1"
                                                          (replace
                                                           -14
                                                           +
                                                           :dir
                                                           rl)
                                                          (("1"
                                                            (ground)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (hide-all-but 1)
                                                        (("2"
                                                          (rewrite
                                                           "scal_polynomial2")
                                                          (("2"
                                                            (ground)
                                                            (("2"
                                                              (mult-by 1 "c")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (case "NOT i = 1")
                                            (("1" (assert) nil nil)
                                             ("2"
                                              (replace -1)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (replace -13)
                                                  (("2"
                                                    (case
                                                     "polynomial(pd`rem, pd`rdeg)(x) = 0 IFF polynomial(-c*pd`rem, pd`rdeg)(x) = 0")
                                                    (("1"
                                                      (replace -1 :dir rl)
                                                      (("1"
                                                        (inst - "x")
                                                        (("1"
                                                          (ground)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide-all-but 1)
                                                      (("2"
                                                        (rewrite
                                                         "scal_polynomial2")
                                                        (("2"
                                                          (ground)
                                                          (("2"
                                                            (mult-by 1 "c")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((IFF const-decl "[bool, bool -> bool]" booleans nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (<= const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (k!1 skolem-const-decl "nat" sturmtarski nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (j skolem-const-decl "upto(m)" sturmtarski nil)
    (i skolem-const-decl "nat" sturmtarski nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (k!1 skolem-const-decl "nat" sturmtarski nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (poly_divide_def formula-decl nil polynomial_division Sturm)
    (real_times_real_is_real application-judgement "real" reals nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (odd_plus_odd_is_even application-judgement "even_int" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (both_sides_times1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (subrange type-eq-decl nil integers nil)
    (i skolem-const-decl "nat" sturmtarski nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (poly_divide def-decl "DivType" polynomial_division Sturm)
    (/= const-decl "boolean" notequal nil)
    (DivType type-eq-decl nil polynomial_division Sturm)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil))
 (default_root_degree?_TCC1 0
  (default_root_degree?_TCC1-1 nil 3617013590 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (default_root_degree? subtype "(number_fields.-)(sturmtarski.i, 1)"
    "nat")))
 (default_root_degree?_TCC2 0
  (default_root_degree?_TCC2-1 nil 3617610964 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (default_root_degree? subtype "(number_fields.-)(sturmtarski.m, 1)"
    "nat")))
 (constructed_sturm_seq_root_degrees_TCC1 0
  (constructed_sturm_seq_root_degrees_TCC1-1 nil 3617013872
   ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (default_root_degree? const-decl "bool" sturmtarski nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil
   (constructed_sturm_seq_root_degrees subtype
    "real_defs.max((number_fields.-)(more_polynomial_props.root_degree(sturmtarski.p(0), sturmtarski.n(0))(sturmtarski.y), 1), 0)"
    "nat")))
 (constructed_sturm_seq_root_degrees 0
  (constructed_sturm_seq_root_degrees-3 "" 3790099118
   ("" (skeep)
    (("" (label "css" -1)
      (("" (case "g(k)=0")
        (("1" (expand "constructed_sturm_sequence?") (("1" (ground) nil nil))
          nil)
         ("2"
          (name "dd"
                "IF polynomial(g,k)(y)=0 THEN root_degree(p(0),n(0))(y) ELSE max(root_degree(p(0), n(0))(y) - 1, 0) ENDIF")
          (("2"
            (case "FORALL (k,i:nat): i<=k AND k+1<m IMPLIES ((root_degree(p(i),n(i))(y)=dd OR root_degree(p(i+1),n(i+1))(y)=dd) AND (root_degree(p(i),n(i))(y)>=dd AND root_degree(p(i+1),n(i+1))(y)>=dd))")
            (("1" (case "root_degree(p(m-1),n(m-1))(y)=dd")
              (("1" (label "igz" -1)
                (("1" (hide "igz")
                  (("1" (assert)
                    (("1" (inst - "m-2" _)
                      (("1" (assert)
                        (("1" (lift-if)
                          (("1" (split -)
                            (("1" (flatten)
                              (("1" (lemma "root_degree_pos")
                                (("1" (inst?)
                                  (("1" (assert)
                                    (("1" (hide 3)
                                      (("1"
                                        (expand "default_root_degree?")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (invoke (case "NOT (%1)") (! 2 1))
                                            (("1"
                                              (hide 3)
                                              (("1"
                                                (copy -5)
                                                (("1"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -4 +)
                                                        (("1"
                                                          (lemma
                                                           "root_degree_mult")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst - "y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split -1)
                                                                    (("1"
                                                                      (replace
                                                                       -6)
                                                                      (("1"
                                                                        (replaces
                                                                         -1)
                                                                        (("1"
                                                                          (rewrite
                                                                           "root_degree_deriv")
                                                                          (("1"
                                                                            (ground)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (lemma
                                                                             "root_degree_pos")
                                                                            (("3"
                                                                              (inst?)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "0")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -
                                                                       "1")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (replace
                                                                           -5)
                                                                          (("2"
                                                                            (replace
                                                                             -4
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (expand
                                                                                 "polynomial_prod"
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "max"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "sigma"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "sigma"
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -1)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (replace -5)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst-cp - "i-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (inst-cp - "i")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (reveal "igz")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2" (assert)
                                (("2" (hide 3)
                                  (("2" (replace -1)
                                    (("2" (expand "default_root_degree?")
                                      (("2"
                                        (invoke (case "NOT (%1)") (! 3 1))
                                        (("1"
                                          (hide 4)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case
                                                   "polynomial(p(0),n(0))(y)/=0")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "root_degree_pos")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (copy -4)
                                                              (("1"
                                                                (split -)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "constructed_sturm_sequence?")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "root_degree_pos")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "root_degree_pos")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "p(0)"
                                                                 "n(0)"
                                                                 "y")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -1)
                                                                    (("1"
                                                                      (expand
                                                                       "max"
                                                                       -2)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             -4)
                                                                            (("1"
                                                                              (expand
                                                                               "constructed_sturm_sequence?"
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -4)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "root_degree_mult")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "root_degree_deriv")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             -
                                                                                             "0")
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "0")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "poly_deriv"
                                                                                             1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                (("2"
                                                                                                  (mult-by
                                                                                                   1
                                                                                                   "n(0)")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (inst
                                                                           -5
                                                                           "0")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -1)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split +)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst - "i-1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst - "i")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (reveal "igz")
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "constructed_sturm_sequence?")
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide (3 4))
                (("2" (inst - "m-2" "m-2")
                  (("1" (assert)
                    (("1" (flatten)
                      (("1" (hide -2)
                        (("1" (hide -3)
                          (("1" (expand "constructed_sturm_sequence?")
                            (("1" (flatten)
                              (("1" (inst -10 "m")
                                (("1" (assert)
                                  (("1" (skeep)
                                    (("1"
                                      (name
                                       "pd"
                                       "poly_divide(p(m - 2), n(m - 2))(p(m - 1), n(m - 1))
                              (0)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma "poly_divide_def")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (inst-cp - "m-1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (name
                                                     "pr"
                                                     "polynomial_prod(pd`quot,pd`qdeg,p(m-1),n(m-1))")
                                                    (("1"
                                                      (case
                                                       "NOT polynomial(pd`rem, pd`rdeg) = (LAMBDA (xyz:real): 0)")
                                                      (("1"
                                                        (decompose-equality 1)
                                                        (("1"
                                                          (mult-by 1 "-c")
                                                          (("1"
                                                            (lemma
                                                             "scal_polynomial2")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (inst - "x!1")
                                                                (("1"
                                                                  (replaces
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (replace
                                                                     -14
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (expand
                                                                       "polynomial"
                                                                       +
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "sigma"
                                                                         +
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "sigma"
                                                                           +
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (name
                                                             "rd"
                                                             "root_degree(p(m - 1), n(m - 1))(y)")
                                                            (("2"
                                                              (typepred "rd")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide -3)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (case
                                                                         "EXISTS (kk:nat): kk<=pd`qdeg AND pd`quot(kk)/=0 AND polynomial(pd`quot, pd`qdeg) = polynomial(pd`quot,kk)")
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (replace
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (name
                                                                                 "newprod"
                                                                                 "polynomial_prod(b,n(m-1)-rd,pd`quot,kk)")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "root_degree_lower_bound")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "p(m-2)"
                                                                                     "rd"
                                                                                     "n(m-2)"
                                                                                     "y"
                                                                                     "n(m-1)-rd+kk")
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst
                                                                                         -
                                                                                         "m-2")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "m-2")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "m-2")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (inst
                                                                                         +
                                                                                         "newprod")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          (("3"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "newprod"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "polynomial_prod"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "max"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -9
                                                                                                 "x")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -9)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -5
                                                                                                     "x")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -5)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "newprod"
                                                                                                         +)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "polynomial_prod")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "polynomial_prod_def"
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "EXISTS (kk:nat): kk<=pd`qdeg AND pd`quot(kk)/=0")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              1))
                                                                            (("1"
                                                                              (case
                                                                               "EXISTS (kk:nat): kk<=pd`qdeg AND pd`quot(kk)/=0 AND FORALL (ii:nat): ii>kk AND ii<=pd`qdeg IMPLIES pd`quot(ii)=0")
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "kk")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "FORALL (jj:nat): kk+jj<=pd`qdeg IMPLIES  polynomial(pd`quot, kk+jj) = polynomial(pd`quot, kk)")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "pd`qdeg-kk")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (induct
                                                                                           "jj")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (decompose-equality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "polynomial_rec"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "1+j+kk")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (skeep
                                                                                   -1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (name
                                                                                       "IZ"
                                                                                       "{kk:posnat | kk<=pd`qdeg AND pd`quot(kk)/=0}")
                                                                                      (("2"
                                                                                        (name
                                                                                         "M"
                                                                                         "max(IZ)")
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "M")
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "M")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (copy
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "IZ"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "ii!1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "IZ"
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "NOT nonempty?[posnat](IZ)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nonempty?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "empty?")
                                                                                                (("1"
                                                                                                  (inst-cp
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (label
                                                                                                       "IG5"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         "IG5")
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           "IG5")
                                                                                                          (("1"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "kk")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "IZ"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (reveal
                                                                                                               "IG5")
                                                                                                              (("2"
                                                                                                                (delabel
                                                                                                                 "IG5")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "ii!1")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "IZ"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "pd`qdeg+1")
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "y!1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "IZ"
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (lemma
                                                                               "poly_eq_0_le_degree")
                                                                              (("2"
                                                                                (inst-cp
                                                                                 -
                                                                                 "pd`quot"
                                                                                 "pd`qdeg")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (hide
                                                                                     -3)
                                                                                    (("2"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "p(m-2)"
                                                                                         "n(m-2)")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "n(m-2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "m-2")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "m-2")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "m-2")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "m-2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -7
                                                                                                   "x")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           +
                                                                                           "ii!1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert)
                    (("2" (expand "constructed_sturm_sequence?")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide (3 4))
              (("2" (induct "k")
                (("1" (assert)
                  (("1" (skeep)
                    (("1" (assert)
                      (("1" (case "NOT i = 0")
                        (("1" (assert) nil nil)
                         ("2" (replaces -1)
                          (("2" (assert)
                            (("2" (lift-if)
                              (("2" (split -3)
                                (("1" (ground)
                                  (("1" (lemma "root_degree_pos")
                                    (("1" (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (copy -6)
                                          (("1"
                                            (expand
                                             "constructed_sturm_sequence?"
                                             -1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (replace -3)
                                                (("1"
                                                  (replace -4)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite
                                                       "root_degree_mult")
                                                      (("1"
                                                        (rewrite
                                                         "root_degree_deriv")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (inst - "0")
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (lemma
                                                           "root_degree_pos")
                                                          (("3"
                                                            (inst
                                                             -
                                                             "p(0)"
                                                             "n(0)"
                                                             "y")
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (inst - "0")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst - "0")
                                                        (("2"
                                                          (expand
                                                           "poly_deriv"
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (ground)
                                                              (("2"
                                                                (mult-by
                                                                 1
                                                                 "n(0)")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (flatten)
                                    (("2" (assert)
                                      (("2"
                                        (expand "max")
                                        (("2"
                                          (lift-if)
                                          (("2"
                                            (split -1)
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma "root_degree_pos")
                                                  (("2"
                                                    (inst - "g" "k" "y")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "constructed_sturm_sequence?")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (replace -7)
                                                            (("2"
                                                              (replace -6)
                                                              (("2"
                                                                (rewrite
                                                                 "root_degree_mult"
                                                                 +)
                                                                (("1"
                                                                  (rewrite
                                                                   "root_degree_deriv")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     -
                                                                     "0")
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "root_degree_pos")
                                                                    (("3"
                                                                      (inst?)
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst - "0")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (expand
                                                                       "poly_deriv"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skolem 1 "K")
                  (("2" (flatten)
                    (("2" (assert)
                      (("2" (skeep)
                        (("2" (case "NOT i =1+K")
                          (("1" (inst - "i") (("1" (assert) nil nil)) nil)
                           ("2" (case "NOT K = i-1")
                            (("1" (assert) nil nil)
                             ("2" (replace -1)
                              (("2" (assert)
                                (("2" (hide -2)
                                  (("2" (inst-cp - "i-1")
                                    (("2" (assert)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (copy -9)
                                          (("2"
                                            (expand
                                             "constructed_sturm_sequence?"
                                             -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (hide (-1 -2 -3 -4 -5 -6 -7))
                                                (("2"
                                                  (inst - "i+1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (name
                                                         "pd"
                                                         "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "root_degree_eq")
                                                              (("2"
                                                                (lemma
                                                                 "poly_divide_def")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       -3)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (lemma
                                                                           "root_degree_division")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "y"
                                                                             "p(i-1)"
                                                                             "p(i)"
                                                                             "pd`quot"
                                                                             "(1/(-c))*p(1+i)"
                                                                             "n(i-1)"
                                                                             "n(i)"
                                                                             "pd`qdeg"
                                                                             "n(1+i)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       -9)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "root_degree(p(i), n(i))(y) = dd")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "min")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "root_degree_scal")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (copy
                                                                                                     "css")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "constructed_sturm_sequence?"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i+1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "root_degree_scal")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (copy
                                                                                                   "css")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "constructed_sturm_sequence?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+i")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "root_degree_scal")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "min")
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (copy
                                                                                             "css")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "1+i")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "x")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (decompose-equality
                                                                                             -4)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "scal_polynomial2")
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "scal_polynomial2")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("3"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (expand
                                                                                       "*"
                                                                                       1)
                                                                                      (("3"
                                                                                        (flatten)
                                                                                        (("3"
                                                                                          (inst
                                                                                           -
                                                                                           "1+i")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("4"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("4"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("4"
                                                                                      (flatten)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -
                                                                                         "i-1")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("5"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("5"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("5"
                                                                                      (flatten)
                                                                                      (("5"
                                                                                        (inst
                                                                                         -
                                                                                         "i")
                                                                                        (("5"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (copy
                                                                           "css")
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (constructed_sturm_seq_root_degrees-2 nil 3617123921
   ("" (skeep)
    (("" (label "css" -1)
      (("" (case "g(k)=0")
        (("1" (expand "constructed_sturm_sequence?") (("1" (ground) nil nil))
          nil)
         ("2"
          (name "dd"
                "IF polynomial(g,k)(y)=0 THEN root_degree(p(0),n(0))(y) ELSE max(root_degree(p(0), n(0))(y) - 1, 0) ENDIF")
          (("2"
            (case "FORALL (k,i:nat): i<=k AND k+1<m IMPLIES ((root_degree(p(i),n(i))(y)=dd OR root_degree(p(i+1),n(i+1))(y)=dd) AND (root_degree(p(i),n(i))(y)>=dd AND root_degree(p(i+1),n(i+1))(y)>=dd))")
            (("1" (case "root_degree(p(m-1),n(m-1))(y)=dd")
              (("1" (label "igz" -1)
                (("1" (hide "igz")
                  (("1" (assert)
                    (("1" (inst - "m-2" _)
                      (("1" (assert)
                        (("1" (lift-if)
                          (("1" (split -)
                            (("1" (flatten)
                              (("1" (lemma "root_degree_pos")
                                (("1" (inst?)
                                  (("1" (assert)
                                    (("1" (hide 3)
                                      (("1"
                                        (expand "default_root_degree?")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (invoke (case "NOT (%1)") (! 2 1))
                                            (("1"
                                              (hide 3)
                                              (("1"
                                                (copy -5)
                                                (("1"
                                                  (expand
                                                   "constructed_sturm_sequence?"
                                                   -1)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -4 +)
                                                        (("1"
                                                          (lemma
                                                           "root_degree_mult")
                                                          (("1"
                                                            (inst?)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (inst - "y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (split -1)
                                                                    (("1"
                                                                      (replace
                                                                       -6)
                                                                      (("1"
                                                                        (replaces
                                                                         -1)
                                                                        (("1"
                                                                          (rewrite
                                                                           "root_degree_deriv")
                                                                          (("1"
                                                                            (ground)
                                                                            nil
                                                                            nil)
                                                                           ("2"
                                                                            (inst
                                                                             -
                                                                             "0")
                                                                            nil
                                                                            nil)
                                                                           ("3"
                                                                            (lemma
                                                                             "root_degree_pos")
                                                                            (("3"
                                                                              (inst?)
                                                                              (("3"
                                                                                (assert)
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "0")
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (inst
                                                                       -
                                                                       "1")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (replace
                                                                           -5)
                                                                          (("2"
                                                                            (replace
                                                                             -4
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (expand
                                                                                 "polynomial_prod"
                                                                                 1)
                                                                                (("2"
                                                                                  (expand
                                                                                   "max"
                                                                                   1)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "sigma"
                                                                                     1)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "sigma"
                                                                                       1)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (replace -1)
                                              (("2"
                                                (split +)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (replace -5)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst-cp - "i-1")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (flatten)
                                                            (("1"
                                                              (inst-cp - "i")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (reveal "igz")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2" (assert)
                                (("2" (hide 3)
                                  (("2" (replace -1)
                                    (("2" (expand "default_root_degree?")
                                      (("2"
                                        (invoke (case "NOT (%1)") (! 3 1))
                                        (("1"
                                          (hide 4)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case
                                                   "polynomial(p(0),n(0))(y)/=0")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (lemma
                                                         "root_degree_pos")
                                                        (("1"
                                                          (inst?)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (copy -4)
                                                              (("1"
                                                                (split -)
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (expand
                                                                   "constructed_sturm_sequence?")
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "0")
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (hide 2)
                                                      (("2"
                                                        (lemma
                                                         "root_degree_pos")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "root_degree_pos")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "p(0)"
                                                                 "n(0)"
                                                                 "y")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (split -1)
                                                                    (("1"
                                                                      (expand
                                                                       "max"
                                                                       -2)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (copy
                                                                             -4)
                                                                            (("1"
                                                                              (expand
                                                                               "constructed_sturm_sequence?"
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     -4)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -3)
                                                                                      (("1"
                                                                                        (rewrite
                                                                                         "root_degree_mult")
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "root_degree_deriv")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (inst
                                                                                             -
                                                                                             "0")
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "0")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "poly_deriv"
                                                                                             1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                (("2"
                                                                                                  (mult-by
                                                                                                   1
                                                                                                   "n(0)")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil)
                                                                     ("2"
                                                                      (expand
                                                                       "constructed_sturm_sequence?")
                                                                      (("2"
                                                                        (flatten)
                                                                        (("2"
                                                                          (inst
                                                                           -5
                                                                           "0")
                                                                          (("2"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (replace -1)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (split +)
                                              (("1"
                                                (hide -1)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (split +)
                                                      (("1"
                                                        (flatten)
                                                        (("1"
                                                          (inst - "i-1")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (flatten)
                                                        (("2"
                                                          (inst - "i")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (reveal "igz")
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (expand "constructed_sturm_sequence?")
                        (("2" (assert) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide (3 4))
                (("2" (inst - "m-2" "m-2")
                  (("1" (assert)
                    (("1" (flatten)
                      (("1" (hide -2)
                        (("1" (hide -3)
                          (("1" (expand "constructed_sturm_sequence?")
                            (("1" (flatten)
                              (("1" (inst -10 "m")
                                (("1" (assert)
                                  (("1" (skeep)
                                    (("1"
                                      (name
                                       "pd"
                                       "poly_divide(p(m - 2), n(m - 2))(p(m - 1), n(m - 1))
                              (0)")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lemma "poly_divide_def")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (inst-cp - "m-1")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (replace -2)
                                                  (("1"
                                                    (name
                                                     "pr"
                                                     "polynomial_prod(pd`quot,pd`qdeg,p(m-1),n(m-1))")
                                                    (("1"
                                                      (case
                                                       "NOT polynomial(pd`rem, pd`rdeg) = (LAMBDA (xyz:real): 0)")
                                                      (("1"
                                                        (decompose-equality 1)
                                                        (("1"
                                                          (mult-by 1 "-c")
                                                          (("1"
                                                            (lemma
                                                             "scal_polynomial2")
                                                            (("1"
                                                              (inst?)
                                                              (("1"
                                                                (inst - "x!1")
                                                                (("1"
                                                                  (replaces
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (replace
                                                                     -14
                                                                     :dir
                                                                     rl)
                                                                    (("1"
                                                                      (expand
                                                                       "polynomial"
                                                                       +
                                                                       1)
                                                                      (("1"
                                                                        (expand
                                                                         "sigma"
                                                                         +
                                                                         1)
                                                                        (("1"
                                                                          (expand
                                                                           "sigma"
                                                                           +
                                                                           1)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (replace -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (name
                                                             "rd"
                                                             "root_degree(p(m - 1), n(m - 1))(y)")
                                                            (("2"
                                                              (typepred "rd")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (hide -3)
                                                                    (("2"
                                                                      (skeep)
                                                                      (("2"
                                                                        (case
                                                                         "EXISTS (kk:nat): kk<=pd`qdeg AND pd`quot(kk)/=0 AND polynomial(pd`quot, pd`qdeg) = polynomial(pd`quot,kk)")
                                                                        (("1"
                                                                          (skeep)
                                                                          (("1"
                                                                            (replace
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (name
                                                                                 "newprod"
                                                                                 "polynomial_prod(b,n(m-1)-rd,pd`quot,kk)")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "root_degree_lower_bound")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "p(m-2)"
                                                                                     "rd"
                                                                                     "n(m-2)"
                                                                                     "y"
                                                                                     "n(m-1)-rd+kk")
                                                                                    (("1"
                                                                                      (split
                                                                                       -1)
                                                                                      (("1"
                                                                                        (flatten)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst
                                                                                         -
                                                                                         "m-2")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "m-2")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "m-2")
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("3"
                                                                                        (inst
                                                                                         +
                                                                                         "newprod")
                                                                                        (("3"
                                                                                          (assert)
                                                                                          (("3"
                                                                                            (split
                                                                                             +)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "newprod"
                                                                                               1)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "polynomial_prod"
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "max"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "sigma"
                                                                                                     -1)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "sigma"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -9
                                                                                                 "x")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -9)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -5
                                                                                                     "x")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -5)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "newprod"
                                                                                                         +)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "polynomial_prod")
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "polynomial_prod_def"
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (case
                                                                           "EXISTS (kk:nat): kk<=pd`qdeg AND pd`quot(kk)/=0")
                                                                          (("1"
                                                                            (hide-all-but
                                                                             (-1
                                                                              1))
                                                                            (("1"
                                                                              (case
                                                                               "EXISTS (kk:nat): kk<=pd`qdeg AND pd`quot(kk)/=0 AND FORALL (ii:nat): ii>kk AND ii<=pd`qdeg IMPLIES pd`quot(ii)=0")
                                                                              (("1"
                                                                                (hide
                                                                                 -2)
                                                                                (("1"
                                                                                  (skeep)
                                                                                  (("1"
                                                                                    (inst
                                                                                     +
                                                                                     "kk")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "FORALL (jj:nat): kk+jj<=pd`qdeg IMPLIES  polynomial(pd`quot, kk+jj) = polynomial(pd`quot, kk)")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "pd`qdeg-kk")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (induct
                                                                                           "jj")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil)
                                                                                           ("2"
                                                                                            (skeep)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (decompose-equality
                                                                                                 1)
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "polynomial_rec"
                                                                                                   1)
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "1+j+kk")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (hide
                                                                                 2)
                                                                                (("2"
                                                                                  (skeep
                                                                                   -1)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (name
                                                                                       "IZ"
                                                                                       "{kk:posnat | kk<=pd`qdeg AND pd`quot(kk)/=0}")
                                                                                      (("2"
                                                                                        (name
                                                                                         "M"
                                                                                         "max(IZ)")
                                                                                        (("1"
                                                                                          (typepred
                                                                                           "M")
                                                                                          (("1"
                                                                                            (inst
                                                                                             +
                                                                                             "M")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (copy
                                                                                                 -2)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "IZ"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "ii!1")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "IZ"
                                                                                                               +)
                                                                                                              (("1"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (case
                                                                                           "NOT nonempty?[posnat](IZ)")
                                                                                          (("1"
                                                                                            (hide
                                                                                             2)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "nonempty?")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "empty?")
                                                                                                (("1"
                                                                                                  (inst-cp
                                                                                                   +
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (label
                                                                                                       "IG5"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (copy
                                                                                                         "IG5")
                                                                                                        (("1"
                                                                                                          (hide
                                                                                                           "IG5")
                                                                                                          (("1"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "kk")
                                                                                                            (("1"
                                                                                                              (expand
                                                                                                               "member"
                                                                                                               1)
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "IZ"
                                                                                                                 1)
                                                                                                                (("1"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil)
                                                                                                             ("2"
                                                                                                              (reveal
                                                                                                               "IG5")
                                                                                                              (("2"
                                                                                                                (delabel
                                                                                                                 "IG5")
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (skosimp*)
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "ii!1")
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "member"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (expand
                                                                                                                           "IZ"
                                                                                                                           1)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            nil
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("2"
                                                                                              (inst
                                                                                               +
                                                                                               "pd`qdeg+1")
                                                                                              (("2"
                                                                                                (skosimp*)
                                                                                                (("2"
                                                                                                  (typepred
                                                                                                   "y!1")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "IZ"
                                                                                                     -2)
                                                                                                    (("2"
                                                                                                      (ground)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             2)
                                                                            (("2"
                                                                              (lemma
                                                                               "poly_eq_0_le_degree")
                                                                              (("2"
                                                                                (inst-cp
                                                                                 -
                                                                                 "pd`quot"
                                                                                 "pd`qdeg")
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (hide
                                                                                     -3)
                                                                                    (("2"
                                                                                      (split
                                                                                       -)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "p(m-2)"
                                                                                         "n(m-2)")
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (hide
                                                                                             -2)
                                                                                            (("1"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "n(m-2)")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "m-2")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "m-2")
                                                                                                      (("1"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "m-2")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "m-2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -7
                                                                                                   "x")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "x")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (inst
                                                                                           +
                                                                                           "ii!1")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (assert)
                    (("2" (expand "constructed_sturm_sequence?")
                      (("2" (propax) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide (3 4))
              (("2" (induct "k")
                (("1" (assert)
                  (("1" (skeep)
                    (("1" (assert)
                      (("1" (case "NOT i = 0")
                        (("1" (assert) nil nil)
                         ("2" (replaces -1)
                          (("2" (assert)
                            (("2" (lift-if)
                              (("2" (split -3)
                                (("1" (ground)
                                  (("1" (lemma "root_degree_pos")
                                    (("1" (inst?)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (copy -6)
                                          (("1"
                                            (expand
                                             "constructed_sturm_sequence?"
                                             -1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (replace -3)
                                                (("1"
                                                  (replace -4)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite
                                                       "root_degree_mult")
                                                      (("1"
                                                        (rewrite
                                                         "root_degree_deriv")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (inst - "0")
                                                          nil
                                                          nil)
                                                         ("3"
                                                          (lemma
                                                           "root_degree_pos")
                                                          (("3"
                                                            (inst
                                                             -
                                                             "p(0)"
                                                             "n(0)"
                                                             "y")
                                                            (("3"
                                                              (assert)
                                                              (("3"
                                                                (inst - "0")
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (inst - "0")
                                                        (("2"
                                                          (expand
                                                           "poly_deriv"
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (ground)
                                                              (("2"
                                                                (mult-by
                                                                 1
                                                                 "n(0)")
                                                                (("2"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert)
                                  (("2" (flatten)
                                    (("2" (assert)
                                      (("2"
                                        (expand "max")
                                        (("2"
                                          (lift-if)
                                          (("2"
                                            (split -1)
                                            (("1"
                                              (flatten)
                                              (("1" (assert) nil nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (lemma "root_degree_pos")
                                                  (("2"
                                                    (inst - "g" "k" "y")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (expand
                                                         "constructed_sturm_sequence?")
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (replace -7)
                                                            (("2"
                                                              (replace -6)
                                                              (("2"
                                                                (rewrite
                                                                 "root_degree_mult"
                                                                 +)
                                                                (("1"
                                                                  (rewrite
                                                                   "root_degree_deriv")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     -
                                                                     "0")
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "root_degree_pos")
                                                                    (("3"
                                                                      (inst?)
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst - "0")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (expand
                                                                       "poly_deriv"
                                                                       1)
                                                                      (("2"
                                                                        (assert)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (skolem 1 "K")
                  (("2" (flatten)
                    (("2" (assert)
                      (("2" (skeep)
                        (("2" (case "NOT i =1+K")
                          (("1" (inst - "i") (("1" (assert) nil nil)) nil)
                           ("2" (case "NOT K = i-1")
                            (("1" (assert) nil nil)
                             ("2" (replace -1)
                              (("2" (assert)
                                (("2" (hide -2)
                                  (("2" (inst-cp - "i-1")
                                    (("2" (assert)
                                      (("2"
                                        (flatten)
                                        (("2"
                                          (copy -9)
                                          (("2"
                                            (expand
                                             "constructed_sturm_sequence?"
                                             -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (hide (-1 -2 -3 -4 -5 -6 -7))
                                                (("2"
                                                  (inst - "i+1")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep)
                                                      (("2"
                                                        (name
                                                         "pd"
                                                         "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "root_degree_eq")
                                                              (("2"
                                                                (lemma
                                                                 "poly_divide_def")
                                                                (("2"
                                                                  (inst?)
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (replace
                                                                       -3)
                                                                      (("2"
                                                                        (split
                                                                         -1)
                                                                        (("1"
                                                                          (lemma
                                                                           "root_degree_division")
                                                                          (("1"
                                                                            (inst
                                                                             -
                                                                             "y"
                                                                             "p(i-1)"
                                                                             "p(i)"
                                                                             "pd`quot"
                                                                             "(1/(-c))*p(1+i)"
                                                                             "n(i-1)"
                                                                             "n(i)"
                                                                             "pd`qdeg"
                                                                             "n(1+i)")
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (split
                                                                                 -1)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (split
                                                                                       -9)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "root_degree(p(i), n(i))(y) = dd")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (expand
                                                                                               "min")
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "root_degree_scal")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (copy
                                                                                                     "css")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "constructed_sturm_sequence?"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "i+1")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (rewrite
                                                                                                 "root_degree_scal")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (copy
                                                                                                   "css")
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "constructed_sturm_sequence?"
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "1+i")
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "root_degree_scal")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "min")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lift-if)
                                                                                                (("1"
                                                                                                  (ground)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (copy
                                                                                             "css")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "1+i")
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (hide
                                                                                   2)
                                                                                  (("2"
                                                                                    (skeep)
                                                                                    (("2"
                                                                                      (inst
                                                                                       -
                                                                                       "x")
                                                                                      (("2"
                                                                                        (replace
                                                                                         -1)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (decompose-equality
                                                                                             -4)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "x")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "scal_polynomial2")
                                                                                                    (("2"
                                                                                                      (rewrite
                                                                                                       "scal_polynomial2")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("3"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("3"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("3"
                                                                                      (expand
                                                                                       "*"
                                                                                       1)
                                                                                      (("3"
                                                                                        (flatten)
                                                                                        (("3"
                                                                                          (inst
                                                                                           -
                                                                                           "1+i")
                                                                                          (("3"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("4"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("4"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("4"
                                                                                      (flatten)
                                                                                      (("4"
                                                                                        (inst
                                                                                         -
                                                                                         "i-1")
                                                                                        (("4"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("5"
                                                                                  (copy
                                                                                   "css")
                                                                                  (("5"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("5"
                                                                                      (flatten)
                                                                                      (("5"
                                                                                        (inst
                                                                                         -
                                                                                         "i")
                                                                                        (("5"
                                                                                          (assert)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (copy
                                                                           "css")
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "i")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals)
    (poly_deriv const-decl "real" polynomials reals)
    (> const-decl "bool" reals nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (^ const-decl "real" exponentiation nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (root_degree_eq formula-decl nil more_polynomial_props reals)
    (root_degree_division formula-decl nil more_polynomial_props reals)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (root_degree_scal formula-decl nil more_polynomial_props reals)
    (nat_min application-judgement "{k: nat | k <= i AND k <= j}" real_defs
     nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (i skolem-const-decl "nat" sturmtarski nil)
    (max_npreal_0 formula-decl nil min_max reals)
    (both_sides_times1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (root_degree_mult formula-decl nil more_polynomial_props reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sigma def-decl "real" sigma reals)
    (polynomial_prod const-decl "real" polynomials reals)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (root_degree_deriv formula-decl nil more_polynomial_props reals)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (TRUE const-decl "bool" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (default_root_degree? const-decl "bool" sturmtarski nil)
    (root_degree_pos formula-decl nil more_polynomial_props reals)
    (DivType type-eq-decl nil polynomial_division Sturm)
    (poly_divide def-decl "DivType" polynomial_division Sturm)
    (poly_divide_def formula-decl nil polynomial_division Sturm)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (polynomial_rec formula-decl nil polynomials reals)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (ii!1 skolem-const-decl "nat" sturmtarski nil)
    (member const-decl "bool" sets nil)
    (kk skolem-const-decl "nat" sturmtarski nil)
    (empty? const-decl "bool" sets nil)
    (IZ skolem-const-decl "[posnat -> boolean]" sturmtarski nil)
    (ii!1 skolem-const-decl "nat" sturmtarski nil)
    (max const-decl "{a: posnat | S(a) AND (FORALL x: S(x) IMPLIES x <= a)}"
         max_bounded_posnat ints)
    (nonempty? const-decl "bool" sets nil) (set type-eq-decl nil sets nil)
    (poly_eq_0_le_degree formula-decl nil polynomials reals)
    (root_degree_lower_bound formula-decl nil more_polynomial_props reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (polynomial_prod_def formula-decl nil polynomials reals)
    (newprod skolem-const-decl "[nat -> real]" sturmtarski nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (< const-decl "bool" reals nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil))
   nil)
  (constructed_sturm_seq_root_degrees-1 nil 3617013924
   ("" (skeep)
    (("" (case "g(k)=0")
      (("1" (expand "constructed_sturm_sequence?") (("1" (ground) nil nil))
        nil)
       ("2"
        (name "dd"
              "IF polynomial(g,k)(y)=0 THEN root_degree(p(0),n(0))(y) ELSE max(root_degree(p(0), n(0))(y) - 1, 0) ENDIF")
        (("2"
          (case "FORALL (k,i:nat): i<=k AND k+1<m IMPLIES ((root_degree(p(i),n(i))(y)=dd OR root_degree(p(i+1),n(i+1))(y)=dd) AND (root_degree(p(i),n(i))(y)>=dd AND root_degree(p(i+1),n(i+1))(y)>=dd))")
          (("1" (assert)
            (("1" (inst - "m-2" _)
              (("1" (assert)
                (("1" (lift-if)
                  (("1" (split -)
                    (("1" (flatten)
                      (("1" (lemma "root_degree_pos")
                        (("1" (inst?)
                          (("1" (assert)
                            (("1" (hide 3)
                              (("1" (expand "default_root_degree?")
                                (("1" (assert)
                                  (("1" (invoke (case "NOT (%1)") (! 2 1))
                                    (("1" (hide 3)
                                      (("1"
                                        (copy -5)
                                        (("1"
                                          (expand
                                           "constructed_sturm_sequence?"
                                           -1)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (replace -4 +)
                                                (("1"
                                                  (lemma "root_degree_mult")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (inst - "y")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (split -1)
                                                            (("1"
                                                              (replace -6)
                                                              (("1"
                                                                (replaces -1)
                                                                (("1"
                                                                  (rewrite
                                                                   "root_degree_deriv")
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil)
                                                                   ("2"
                                                                    (inst
                                                                     -
                                                                     "0")
                                                                    nil
                                                                    nil)
                                                                   ("3"
                                                                    (lemma
                                                                     "root_degree_pos")
                                                                    (("3"
                                                                      (inst?)
                                                                      (("3"
                                                                        (assert)
                                                                        (("3"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst - "1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace -5)
                                                                  (("2"
                                                                    (replace
                                                                     -4
                                                                     -1)
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (expand
                                                                         "polynomial_prod"
                                                                         1)
                                                                        (("2"
                                                                          (expand
                                                                           "max"
                                                                           1)
                                                                          (("2"
                                                                            (expand
                                                                             "sigma"
                                                                             1)
                                                                            (("2"
                                                                              (expand
                                                                               "sigma"
                                                                               1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (replace -1)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (replace -4)
                                          (("2"
                                            (assert)
                                            (("2"
                                              (inst-cp - "i-1")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (inst-cp - "i")
                                                    (("2"
                                                      (assert)
                                                      (("2" (ground) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (flatten)
                      (("2" (assert)
                        (("2" (hide 3)
                          (("2" (replace -1)
                            (("2" (expand "default_root_degree?")
                              (("2" (invoke (case "NOT (%1)") (! 3 1))
                                (("1" (hide 4)
                                  (("1" (assert)
                                    (("1" (flatten)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (case "polynomial(p(0),n(0))(y)/=0")
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lemma "root_degree_pos")
                                                (("1"
                                                  (inst?)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (copy -4)
                                                      (("1"
                                                        (split -)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "constructed_sturm_sequence?")
                                                          (("2"
                                                            (flatten)
                                                            (("2"
                                                              (inst - "0")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (hide 2)
                                              (("2"
                                                (lemma "root_degree_pos")
                                                (("2"
                                                  (inst?)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (lemma
                                                       "root_degree_pos")
                                                      (("2"
                                                        (inst
                                                         -
                                                         "p(0)"
                                                         "n(0)"
                                                         "y")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (split -1)
                                                            (("1"
                                                              (expand
                                                               "max"
                                                               -2)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (copy -4)
                                                                    (("1"
                                                                      (expand
                                                                       "constructed_sturm_sequence?"
                                                                       -1)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (replace
                                                                             -4)
                                                                            (("1"
                                                                              (replace
                                                                               -3)
                                                                              (("1"
                                                                                (rewrite
                                                                                 "root_degree_mult")
                                                                                (("1"
                                                                                  (rewrite
                                                                                   "root_degree_deriv")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil)
                                                                                   ("2"
                                                                                    (inst
                                                                                     -
                                                                                     "0")
                                                                                    nil
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (inst
                                                                                   -
                                                                                   "0")
                                                                                  (("2"
                                                                                    (expand
                                                                                     "poly_deriv"
                                                                                     1)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("2"
                                                                                          (mult-by
                                                                                           1
                                                                                           "n(0)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (expand
                                                               "constructed_sturm_sequence?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst
                                                                   -5
                                                                   "0")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (replace -1)
                                  (("2" (assert)
                                    (("2" (hide -1)
                                      (("2"
                                        (skeep)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (split +)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (inst - "i-1")
                                                (("1" (assert) nil nil)
                                                 ("2" (assert) nil nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (flatten)
                                              (("2"
                                                (inst - "i")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (expand "constructed_sturm_sequence?")
                (("2" (assert) nil nil)) nil))
              nil))
            nil)
           ("2" (hide (3 4))
            (("2" (induct "k")
              (("1" (assert)
                (("1" (skeep)
                  (("1" (assert)
                    (("1" (case "NOT i = 0")
                      (("1" (assert) nil nil)
                       ("2" (replaces -1)
                        (("2" (assert)
                          (("2" (lift-if)
                            (("2" (split -3)
                              (("1" (ground)
                                (("1" (lemma "root_degree_pos")
                                  (("1" (inst?)
                                    (("1" (assert)
                                      (("1"
                                        (copy -6)
                                        (("1"
                                          (expand
                                           "constructed_sturm_sequence?"
                                           -1)
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (replace -3)
                                              (("1"
                                                (replace -4)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (rewrite
                                                     "root_degree_mult")
                                                    (("1"
                                                      (rewrite
                                                       "root_degree_deriv")
                                                      (("1" (assert) nil nil)
                                                       ("2"
                                                        (inst - "0")
                                                        nil
                                                        nil)
                                                       ("3"
                                                        (lemma
                                                         "root_degree_pos")
                                                        (("3"
                                                          (inst
                                                           -
                                                           "p(0)"
                                                           "n(0)"
                                                           "y")
                                                          (("3"
                                                            (assert)
                                                            (("3"
                                                              (inst - "0")
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "0")
                                                      (("2"
                                                        (expand
                                                         "poly_deriv"
                                                         1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (ground)
                                                            (("2"
                                                              (mult-by
                                                               1
                                                               "n(0)")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert)
                                (("2" (flatten)
                                  (("2" (assert)
                                    (("2" (expand "max")
                                      (("2"
                                        (lift-if)
                                        (("2"
                                          (split -1)
                                          (("1"
                                            (flatten)
                                            (("1" (assert) nil nil))
                                            nil)
                                           ("2"
                                            (flatten)
                                            (("2"
                                              (assert)
                                              (("2"
                                                (lemma "root_degree_pos")
                                                (("2"
                                                  (inst - "g" "k" "y")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "constructed_sturm_sequence?")
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (replace -7)
                                                          (("2"
                                                            (replace -6)
                                                            (("2"
                                                              (rewrite
                                                               "root_degree_mult"
                                                               +)
                                                              (("1"
                                                                (rewrite
                                                                 "root_degree_deriv")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil)
                                                                 ("2"
                                                                  (inst - "0")
                                                                  nil
                                                                  nil)
                                                                 ("3"
                                                                  (lemma
                                                                   "root_degree_pos")
                                                                  (("3"
                                                                    (inst?)
                                                                    (("3"
                                                                      (assert)
                                                                      (("3"
                                                                        (inst
                                                                         -
                                                                         "0")
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (inst - "0")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (expand
                                                                     "poly_deriv"
                                                                     1)
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skolem 1 "K")
                (("2" (flatten)
                  (("2" (assert)
                    (("2" (skeep)
                      (("2" (case "NOT i =1+K")
                        (("1" (inst - "i") (("1" (assert) nil nil)) nil)
                         ("2" (case "NOT K = i-1")
                          (("1" (assert) nil nil)
                           ("2" (replace -1)
                            (("2" (assert)
                              (("2" (hide -2)
                                (("2" (inst-cp - "i-1")
                                  (("2" (assert)
                                    (("2" (flatten)
                                      (("2"
                                        (copy -9)
                                        (("2"
                                          (expand
                                           "constructed_sturm_sequence?"
                                           -1)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (hide (-1 -2 -3 -4 -5 -6 -7))
                                              (("2"
                                                (inst - "i+1")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (skeep)
                                                    (("2"
                                                      (name
                                                       "pd"
                                                       "poly_divide(p(i - 1), n(i - 1))(p(i), n(i))(0)")
                                                      (("2"
                                                        (replace -1)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (lemma
                                                             "root_degree_eq")
                                                            (("2"
                                                              (lemma
                                                               "poly_divide_def")
                                                              (("2"
                                                                (inst?)
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (replace
                                                                     -3)
                                                                    (("2"
                                                                      (split
                                                                       -1)
                                                                      (("1"
                                                                        (lemma
                                                                         "root_degree_division")
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "y"
                                                                           "p(i-1)"
                                                                           "p(i)"
                                                                           "pd`quot"
                                                                           "(1/(-c))*p(1+i)"
                                                                           "n(i-1)"
                                                                           "n(i)"
                                                                           "pd`qdeg"
                                                                           "n(1+i)")
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (split
                                                                               -1)
                                                                              (("1"
                                                                                (flatten)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (split
                                                                                     -9)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (case
                                                                                         "root_degree(p(i), n(i))(y) = dd")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "min")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "root_degree_scal")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (postpone)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (postpone)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (postpone)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (postpone)
                                                                                nil
                                                                                nil)
                                                                               ("3"
                                                                                (postpone)
                                                                                nil
                                                                                nil)
                                                                               ("4"
                                                                                (postpone)
                                                                                nil
                                                                                nil)
                                                                               ("5"
                                                                                (postpone)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (default_root_deg_TCC1 0
  (default_root_deg_TCC1-1 nil 3617953557 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil))
   nil
   (default_root_deg subtype
    "real_defs.max((number_fields.-)(more_polynomial_props.root_degree(sturmtarski.p(0), sturmtarski.n(0))(sturmtarski.y), 1), 0)"
    "nat")))
 (default_root_deg_def 0
  (default_root_deg_def-1 nil 3617953558
   ("" (skeep)
    (("" (lemma "constructed_sturm_seq_root_degrees")
      (("" (inst?)
        (("" (assert)
          (("" (expand "default_root_deg") (("" (ground) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((constructed_sturm_seq_root_degrees formula-decl nil sturmtarski nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (default_root_deg const-decl "nat" sturmtarski nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil))
   shostak))
 (constructed_sturm_seq_root_degree_lower_bound 0
  (constructed_sturm_seq_root_degree_lower_bound-1 nil 3618047247
   (""
    (case "FORALL (g: [nat -> real], k: nat, m: posnat, n: [nat -> nat],
              p: [nat -> [nat -> real]], y: real,dd:nat):
        constructed_sturm_sequence?(p, n, g, k, m) AND dd<m IMPLIES
         (FORALL (i):
            i <= dd IMPLIES
             root_degree(p(i), n(i))(y) >=
              default_root_deg(p, n, g, k, m)(y))")
    (("1" (skeep)
      (("1" (inst?)
        (("1" (inst - "m-1")
          (("1" (assert)
            (("1" (skeep) (("1" (inst - "i") (("1" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "dd")
        (("1" (skeep)
          (("1" (skeep)
            (("1" (case "NOT i = 0")
              (("1" (assert) nil nil)
               ("2" (replace -1)
                (("2" (assert)
                  (("2" (expand "default_root_deg" 1)
                    (("2" (expand "max")
                      (("2" (lift-if) (("2" (ground) nil nil)) nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skeep)
          (("2" (skeep)
            (("2" (skeep)
              (("2" (case "NOT i = j+1")
                (("1" (inst - "g" "k" "m" "n" "p" "y")
                  (("1" (assert)
                    (("1" (inst - "i") (("1" (assert) nil nil)) nil)) nil))
                  nil)
                 ("2" (hide -5)
                  (("2" (replace -1)
                    (("2" (assert)
                      (("2" (case "j = 0")
                        (("1" (replace -1)
                          (("1" (assert)
                            (("1" (expand "default_root_deg" 1)
                              (("1" (copy -4)
                                (("1" (expand "max")
                                  (("1" (lift-if)
                                    (("1" (ground)
                                      (("1"
                                        (expand
                                         "constructed_sturm_sequence?"
                                         -2)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (replace -4)
                                            (("1"
                                              (replace -5)
                                              (("1"
                                                (rewrite "root_degree_mult")
                                                (("1"
                                                  (rewrite
                                                   "root_degree_deriv")
                                                  (("1"
                                                    (lemma "root_degree_pos")
                                                    (("1"
                                                      (inst?)
                                                      (("1" (assert) nil nil))
                                                      nil))
                                                    nil)
                                                   ("2" (inst - "0") nil nil)
                                                   ("3"
                                                    (lemma "root_degree_pos")
                                                    (("3"
                                                      (inst
                                                       -
                                                       "p(0)"
                                                       "n(0)"
                                                       "y")
                                                      (("3"
                                                        (assert)
                                                        (("3"
                                                          (inst - "0")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (expand "poly_deriv" 1)
                                                  (("2"
                                                    (inst - "0")
                                                    (("2"
                                                      (assert)
                                                      (("2"
                                                        (ground)
                                                        (("2"
                                                          (mult-by 2 "n(0)")
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand
                                         "constructed_sturm_sequence?"
                                         -1)
                                        (("2"
                                          (flatten)
                                          (("2"
                                            (inst-cp - "0")
                                            (("2"
                                              (inst - "1")
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (replace -2 2)
                                                    (("2"
                                                      (replace -3 2)
                                                      (("2"
                                                        (rewrite
                                                         "root_degree_mult")
                                                        (("1"
                                                          (rewrite
                                                           "root_degree_deriv")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil)
                                                           ("2"
                                                            (lemma
                                                             "root_degree_pos")
                                                            (("2"
                                                              (inst
                                                               -
                                                               "p(0)"
                                                               "n(0)"
                                                               "y")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (expand
                                                           "poly_deriv"
                                                           1)
                                                          (("2"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (copy -3)
                          (("2" (label "igz" -1)
                            (("2"
                              (case "NOT (p(1+j)(n(1+j))/=0 AND p(j)(n(j))/=0 AND p(j-1)(n(j-1))/=0)")
                              (("1" (expand "constructed_sturm_sequence?" -1)
                                (("1" (flatten)
                                  (("1" (inst-cp - "1+j")
                                    (("1" (inst-cp - "j")
                                      (("1"
                                        (inst - "j-1")
                                        (("1" (assert) nil nil)
                                         ("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (flatten)
                                (("2" (assert)
                                  (("2"
                                    (expand "constructed_sturm_sequence?" -1)
                                    (("2" (flatten)
                                      (("2"
                                        (copy -8)
                                        (("2"
                                          (hide "igz")
                                          (("2"
                                            (inst - "j+1")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (skeep)
                                                (("2"
                                                  (name
                                                   "pd"
                                                   "poly_divide(p(j - 1), n(j - 1))(p(j), n(j))(0)")
                                                  (("2"
                                                    (replace -1)
                                                    (("2"
                                                      (case
                                                       "NOT polynomial((-1/c)*p(1 + j), n(1 + j)) = polynomial(pd`rem, pd`rdeg)")
                                                      (("1"
                                                        (decompose-equality 1)
                                                        (("1"
                                                          (rewrite
                                                           "scal_polynomial2")
                                                          (("1"
                                                            (decompose-equality
                                                             -2)
                                                            (("1"
                                                              (inst - "x!1")
                                                              (("1"
                                                                (rewrite
                                                                 "scal_polynomial2")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (lemma
                                                         "poly_divide_def")
                                                        (("2"
                                                          (inst?)
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (replace -3)
                                                              (("2"
                                                                (replace
                                                                 -2
                                                                 :dir
                                                                 rl)
                                                                (("2"
                                                                  (lemma
                                                                   "root_degree_division")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "y"
                                                                     "p(j - 1)"
                                                                     "p(j)"
                                                                     "pd`quot"
                                                                     "(-1/c)*p(1+j)"
                                                                     "n(j-1)"
                                                                     "n(j)"
                                                                     "pd`qdeg"
                                                                     "n(1+j)")
                                                                    (("2"
                                                                      (assert)
                                                                      (("2"
                                                                        (replace
                                                                         -2)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (inst?
                                                                               -8)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (copy
                                                                                   -8)
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "j-1")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "j")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "min")
                                                                                          (("1"
                                                                                            (lift-if)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -3)
                                                                                              (("1"
                                                                                                (split
                                                                                                 -)
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "root_degree_scal")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (rewrite
                                                                                                     "root_degree_scal")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (expand
                                                                             "*"
                                                                             1)
                                                                            (("2"
                                                                              (assert)
                                                                              nil
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("3" (ground) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((j skolem-const-decl "nat" sturmtarski nil)
    (DivType type-eq-decl nil polynomial_division Sturm)
    (poly_divide def-decl "DivType" polynomial_division Sturm)
    (npreal_div_posreal_is_npreal application-judgement "npreal" real_types
     nil)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (root_degree_division formula-decl nil more_polynomial_props reals)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (root_degree_scal formula-decl nil more_polynomial_props reals)
    (nat_min application-judgement "{k: nat | k <= i AND k <= j}" real_defs
     nil)
    (poly_divide_def formula-decl nil polynomial_division Sturm)
    (real_times_real_is_real application-judgement "real" reals nil)
    (both_sides_times1 formula-decl nil real_props nil)
    (nonzero_real nonempty-type-eq-decl nil reals nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (root_degree_deriv formula-decl nil more_polynomial_props reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (root_degree_pos formula-decl nil more_polynomial_props reals)
    (below type-eq-decl nil naturalnumbers nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (root_degree_mult formula-decl nil more_polynomial_props reals)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (< const-decl "bool" reals nil) (<= const-decl "bool" reals nil)
    (sequence type-eq-decl nil sequences nil)
    (/= const-decl "boolean" notequal nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (^ const-decl "real" exponentiation nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (poly_deriv const-decl "real" polynomials reals)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals)
    (default_root_deg const-decl "nat" sturmtarski nil))
   shostak))
 (sturm_tarski_basic_1 0
  (sturm_tarski_basic_1-5 nil 3617696203
   ("" (skeep)
    (("" (label "css" -1)
      (("" (label "igz" -2)
        ((""
          (case "FORALL (xy,xr:real): x<=xy AND xy<=xr AND xr<=y IMPLIES sign_ext(polynomial(g,k)(xy)) = sign_ext(polynomial(g,k)(xr))")
          (("1" (inst-cp - "x" "z")
            (("1" (inst - "z" "y")
              (("1" (assert)
                (("1" (case "x<=z AND z<=y")
                  (("1" (flatten)
                    (("1" (assert)
                      (("1" (hide (-1 -2))
                        (("1" (case "m>=2")
                          (("1" (inst-cp - "0")
                            (("1" (inst - "1")
                              (("1" (assert)
                                (("1" (expand "only_root_between?")
                                  (("1" (flatten)
                                    (("1" (hide (-5 -6))
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst-cp - "x")
                                          (("1"
                                            (inst - "y")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (inst-cp - "x")
                                                (("1"
                                                  (inst - "y")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand
                                                         "number_sign_changes")
                                                        (("1"
                                                          (expand
                                                           "number_sign_changes")
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (case
                                                                           "sign_ext(polynomial(poly_deriv(p(0)), n(0)-1)(x)) =
                                                                                                       -sign_ext(polynomial(p(0), n(0))(x))")
                                                                          (("1"
                                                                            (case
                                                                             "sign_ext(polynomial(p(0),n(0))(x)) = -sign_ext(polynomial(g,k)(x))*sign_ext(polynomial(p(1),n(1))(x))")
                                                                            (("1"
                                                                              (hide
                                                                               -2)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (lemma
                                                                                   "root_degree_pos")
                                                                                  (("1"
                                                                                    (lemma
                                                                                     "root_degree_pos")
                                                                                    (("1"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "p(0)"
                                                                                       "n(0)"
                                                                                       "z")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "g"
                                                                                           "k"
                                                                                           "z")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (case
                                                                                               "NOT (p(0)(n(0))/=0 AND g(k)/=0)")
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "constructed_sturm_sequence?")
                                                                                                (("1"
                                                                                                  (flatten)
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (name
                                                                                                     "dd"
                                                                                                     "root_degree(p(0),n(0))(z)")
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "root_degree(p(1),n(1))(z) = dd-1")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "even_or_odd")
                                                                                                            (("1"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "dd")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "dd-1")
                                                                                                                (("1"
                                                                                                                  (lemma
                                                                                                                   "odd_iff_even_succ")
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "dd-1")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      (("1"
                                                                                                                        (lemma
                                                                                                                         "root_degree_even")
                                                                                                                        (("1"
                                                                                                                          (inst-cp
                                                                                                                           -
                                                                                                                           "p(0)"
                                                                                                                           "n(0)"
                                                                                                                           "x"
                                                                                                                           "y"
                                                                                                                           "z")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "p(1)"
                                                                                                                               "n(1)"
                                                                                                                               "x"
                                                                                                                               "y"
                                                                                                                               "z")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "p(1)(n(1))=0")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "constructed_sturm_sequence?")
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "1")
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (ground)
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "sign_ext")
                                                                                                                                        (("1"
                                                                                                                                          (lift-if)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lift-if)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("1"
                                                                                                                                                    (assert)
                                                                                                                                                    (("1"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (expand
                                                                                                                                         "sign_ext")
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (lift-if)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("3"
                                                                                                                                        (expand
                                                                                                                                         "sign_ext")
                                                                                                                                        (("3"
                                                                                                                                          (lift-if)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (lift-if)
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                (("3"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("4"
                                                                                                                                        (expand
                                                                                                                                         "sign_ext")
                                                                                                                                        (("4"
                                                                                                                                          (lift-if)
                                                                                                                                          (("4"
                                                                                                                                            (assert)
                                                                                                                                            (("4"
                                                                                                                                              (lift-if)
                                                                                                                                              (("4"
                                                                                                                                                (assert)
                                                                                                                                                (("4"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("4"
                                                                                                                                                    (assert)
                                                                                                                                                    (("4"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("5"
                                                                                                                                        (expand
                                                                                                                                         "sign_ext")
                                                                                                                                        (("5"
                                                                                                                                          (lift-if)
                                                                                                                                          (("5"
                                                                                                                                            (assert)
                                                                                                                                            (("5"
                                                                                                                                              (lift-if)
                                                                                                                                              (("5"
                                                                                                                                                (assert)
                                                                                                                                                (("5"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("5"
                                                                                                                                                    (assert)
                                                                                                                                                    (("5"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("6"
                                                                                                                                        (expand
                                                                                                                                         "sign_ext")
                                                                                                                                        (("6"
                                                                                                                                          (lift-if)
                                                                                                                                          (("6"
                                                                                                                                            (assert)
                                                                                                                                            (("6"
                                                                                                                                              (lift-if)
                                                                                                                                              (("6"
                                                                                                                                                (assert)
                                                                                                                                                (("6"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("6"
                                                                                                                                                    (assert)
                                                                                                                                                    (("6"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (copy
                                                                                                           -8)
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "constructed_sturm_sequence?"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -4
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -5
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "root_degree_mult")
                                                                                                                      (("1"
                                                                                                                        (rewrite
                                                                                                                         "root_degree_deriv")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (expand
                                                                                                                         "poly_deriv"
                                                                                                                         1)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (hide
                                                                               7)
                                                                              (("2"
                                                                                (copy
                                                                                 -5)
                                                                                (("2"
                                                                                  (expand
                                                                                   "constructed_sturm_sequence?"
                                                                                   -1)
                                                                                  (("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -4
                                                                                       2)
                                                                                      (("2"
                                                                                        (replace
                                                                                         -5
                                                                                         2)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "polynomial_prod_def"
                                                                                             :dir
                                                                                             rl)
                                                                                            (("2"
                                                                                              (rewrite
                                                                                               "sign_ext_mult")
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "sign_ext"
                                                                                                 +
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "sign_ext"
                                                                                                   +
                                                                                                   2)
                                                                                                  (("2"
                                                                                                    (lift-if)
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -4
                                                                                                           6)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -5)
                                                                                                            (("2"
                                                                                                              (rewrite
                                                                                                               "polynomial_prod_def"
                                                                                                               :dir
                                                                                                               rl)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (assert)
                                                                            (("2"
                                                                              (hide
                                                                               7)
                                                                              (("2"
                                                                                (case
                                                                                 "polynomial(poly_deriv(p(0)), n(0) - 1)(x)=0")
                                                                                (("1"
                                                                                  (copy
                                                                                   -5)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "constructed_sturm_sequence?"
                                                                                     -1)
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -4)
                                                                                          (("1"
                                                                                            (replace
                                                                                             -5)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "polynomial_prod_def"
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "polynomial_prod_def"
                                                                                                 :dir
                                                                                                 rl)
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "sign_ext"
                                                                                   +)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (lift-if)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (ground)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "poly_decreasing")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "p(0)"
                                                                                                     "n(0)"
                                                                                                     "x"
                                                                                                     "z")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (case
                                                                                                         "n(0)>0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (skosimp*)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "poly_intermediate_value_inc")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "poly_deriv(p(0))"
                                                                                                                 "0"
                                                                                                                 "n(0)-1"
                                                                                                                 "x"
                                                                                                                 "c!1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skosimp*)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       "igz")
                                                                                                                      (("1"
                                                                                                                        (copy
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           "igz")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "cc!1")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (copy
                                                                                                                                   "css")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "constructed_sturm_sequence?"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -3
                                                                                                                                         2)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -4
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "polynomial_prod_def"
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (copy
                                                                                                             "css")
                                                                                                            (("2"
                                                                                                              (expand
                                                                                                               "constructed_sturm_sequence?"
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (propax)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil)
                                                                                                 ("2"
                                                                                                  (lemma
                                                                                                   "poly_increasing")
                                                                                                  (("2"
                                                                                                    (inst
                                                                                                     -
                                                                                                     "p(0)"
                                                                                                     "n(0)"
                                                                                                     "x"
                                                                                                     "z")
                                                                                                    (("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "n(0)>0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (skeep)
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "poly_intermediate_value_dec")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "poly_deriv(p(0))"
                                                                                                                 "0"
                                                                                                                 "n(0)-1"
                                                                                                                 "x"
                                                                                                                 "c")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (skeep
                                                                                                                     -1)
                                                                                                                    (("1"
                                                                                                                      (reveal
                                                                                                                       "igz")
                                                                                                                      (("1"
                                                                                                                        (copy
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (hide
                                                                                                                           "igz")
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "cc")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (flatten)
                                                                                                                                (("1"
                                                                                                                                  (copy
                                                                                                                                   "css")
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "constructed_sturm_sequence?"
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (flatten)
                                                                                                                                      (("1"
                                                                                                                                        (replace
                                                                                                                                         -3
                                                                                                                                         2)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -4
                                                                                                                                           2)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "polynomial_prod_def"
                                                                                                                                             :dir
                                                                                                                                             rl)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (expand
                                                                                                           "constructed_sturm_sequence?")
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("3"
                                                                              (flatten)
                                                                              (("3"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil)
                           ("2" (expand "constructed_sturm_sequence?")
                            (("2" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst - "0")
                    (("2" (expand "only_root_between?")
                      (("2" (ground) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (skeep)
            (("2"
              (case "FORALL (rr:real): x<=rr AND rr<=y IMPLIES polynomial(g,k)(rr)/=0")
              (("1" (inst-cp - "xy")
                (("1" (inst-cp - "xr")
                  (("1" (assert)
                    (("1" (flatten)
                      (("1" (expand "sign_ext" 3)
                        (("1" (lift-if)
                          (("1" (assert)
                            (("1" (lift-if)
                              (("1" (assert)
                                (("1" (lift-if)
                                  (("1" (assert)
                                    (("1" (ground)
                                      (("1"
                                        (lemma "poly_intermediate_value_inc")
                                        (("1"
                                          (inst - "g" "0" "k" "xy" "xr")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (skosimp*)
                                              (("1"
                                                (inst - "cc!1")
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (lemma "poly_intermediate_value_dec")
                                        (("2"
                                          (inst - "g" "0" "k" "xy" "xr")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (skeep -)
                                              (("2"
                                                (inst - "cc")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (skeep)
                (("2" (inst - "1")
                  (("1" (expand "only_root_between?")
                    (("1" (flatten)
                      (("1" (assert)
                        (("1" (inst - "rr")
                          (("1" (assert)
                            (("1" (flatten)
                              (("1" (copy "css")
                                (("1"
                                  (expand "constructed_sturm_sequence?" -1)
                                  (("1" (flatten)
                                    (("1" (replace -4 3)
                                      (("1"
                                        (replace -5 3)
                                        (("1"
                                          (rewrite
                                           "polynomial_prod_def"
                                           :dir
                                           rl)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (expand "constructed_sturm_sequence?")
                    (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (only_root_between? const-decl "bool" more_polynomial_props reals)
    (minus_real_is_real application-judgement "real" reals nil)
    (poly_deriv const-decl "real" polynomials reals)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sign_ext_mult formula-decl nil sign reals)
    (polynomial_prod_def formula-decl nil polynomials reals)
    (root_degree_pos formula-decl nil more_polynomial_props reals)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (root_degree_mult formula-decl nil more_polynomial_props reals)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (root_degree_deriv formula-decl nil more_polynomial_props reals)
    (odd_iff_even_succ formula-decl nil naturalnumbers nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (root_degree_even formula-decl nil more_polynomial_props reals)
    (even_or_odd formula-decl nil naturalnumbers nil)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals)
    (^ const-decl "real" exponentiation nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (poly_increasing formula-decl nil polynomials reals)
    (poly_intermediate_value_dec formula-decl nil polynomials reals)
    (poly_decreasing formula-decl nil polynomials reals)
    (poly_intermediate_value_inc formula-decl nil polynomials reals)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil))
   nil)
  (sturm_tarski_basic_1-4 nil 3617696022
   ("" (skeep)
    (("" (label "igz" -2)
      ((""
        (case "FORALL (xy,xr:real): x<=xy AND xy<=xr AND xr<=y IMPLIES sign_ext(polynomial(g,k)(xy)) = sign_ext(polynomial(g,k)(xr))")
        (("1" (inst-cp - "x" "z")
          (("1" (inst - "z" "y")
            (("1" (assert)
              (("1" (case "x<=z AND z<=y")
                (("1" (flatten)
                  (("1" (assert)
                    (("1" (hide (-1 -2))
                      (("1" (case "m>=2")
                        (("1" (inst-cp - "0")
                          (("1" (inst - "1")
                            (("1" (assert)
                              (("1" (expand "only_root_between?")
                                (("1" (flatten)
                                  (("1" (hide (-5 -6))
                                    (("1" (assert)
                                      (("1"
                                        (inst-cp - "x")
                                        (("1"
                                          (inst - "y")
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst-cp - "x")
                                              (("1"
                                                (inst - "y")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (expand
                                                       "number_sign_changes")
                                                      (("1"
                                                        (expand
                                                         "number_sign_changes")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (case
                                                                         "sign_ext(polynomial(poly_deriv(p(0)), n(0)-1)(x)) =
                                                                                        -sign_ext(polynomial(p(0), n(0))(x))")
                                                                        (("1"
                                                                          (case
                                                                           "sign_ext(polynomial(p(0),n(0))(x)) = -sign_ext(polynomial(g,k)(x))*sign_ext(polynomial(p(1),n(1))(x))")
                                                                          (("1"
                                                                            (hide
                                                                             -2)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (lemma
                                                                                 "root_degree_pos")
                                                                                (("1"
                                                                                  (lemma
                                                                                   "root_degree_pos")
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "p(0)"
                                                                                     "n(0)"
                                                                                     "z")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "g"
                                                                                         "k"
                                                                                         "z")
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (case
                                                                                             "NOT (p(0)(n(0))/=0 AND g(k)/=0)")
                                                                                            (("1"
                                                                                              (expand
                                                                                               "constructed_sturm_sequence?")
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "0")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (assert)
                                                                                                (("2"
                                                                                                  (name
                                                                                                   "dd"
                                                                                                   "root_degree(p(0),n(0))(z)")
                                                                                                  (("2"
                                                                                                    (replace
                                                                                                     -1)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "root_degree(p(1),n(1))(z) = dd-1")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "even_or_odd")
                                                                                                          (("1"
                                                                                                            (inst-cp
                                                                                                             -
                                                                                                             "dd")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "dd-1")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "odd_iff_even_succ")
                                                                                                                (("1"
                                                                                                                  (inst
                                                                                                                   -
                                                                                                                   "dd-1")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (lemma
                                                                                                                       "root_degree_even")
                                                                                                                      (("1"
                                                                                                                        (inst-cp
                                                                                                                         -
                                                                                                                         "p(0)"
                                                                                                                         "n(0)"
                                                                                                                         "x"
                                                                                                                         "y"
                                                                                                                         "z")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (inst
                                                                                                                             -
                                                                                                                             "p(1)"
                                                                                                                             "n(1)"
                                                                                                                             "x"
                                                                                                                             "y"
                                                                                                                             "z")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "p(1)(n(1))=0")
                                                                                                                                (("1"
                                                                                                                                  (expand
                                                                                                                                   "constructed_sturm_sequence?")
                                                                                                                                  (("1"
                                                                                                                                    (flatten)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "1")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (ground)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lift-if)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (lift-if)
                                                                                                                                                (("1"
                                                                                                                                                  (assert)
                                                                                                                                                  (("1"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lift-if)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("3"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("3"
                                                                                                                                        (lift-if)
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          (("3"
                                                                                                                                            (lift-if)
                                                                                                                                            (("3"
                                                                                                                                              (assert)
                                                                                                                                              (("3"
                                                                                                                                                (lift-if)
                                                                                                                                                (("3"
                                                                                                                                                  (assert)
                                                                                                                                                  (("3"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("4"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("4"
                                                                                                                                        (lift-if)
                                                                                                                                        (("4"
                                                                                                                                          (assert)
                                                                                                                                          (("4"
                                                                                                                                            (lift-if)
                                                                                                                                            (("4"
                                                                                                                                              (assert)
                                                                                                                                              (("4"
                                                                                                                                                (lift-if)
                                                                                                                                                (("4"
                                                                                                                                                  (assert)
                                                                                                                                                  (("4"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("5"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("5"
                                                                                                                                        (lift-if)
                                                                                                                                        (("5"
                                                                                                                                          (assert)
                                                                                                                                          (("5"
                                                                                                                                            (lift-if)
                                                                                                                                            (("5"
                                                                                                                                              (assert)
                                                                                                                                              (("5"
                                                                                                                                                (lift-if)
                                                                                                                                                (("5"
                                                                                                                                                  (assert)
                                                                                                                                                  (("5"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("6"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("6"
                                                                                                                                        (lift-if)
                                                                                                                                        (("6"
                                                                                                                                          (assert)
                                                                                                                                          (("6"
                                                                                                                                            (lift-if)
                                                                                                                                            (("6"
                                                                                                                                              (assert)
                                                                                                                                              (("6"
                                                                                                                                                (lift-if)
                                                                                                                                                (("6"
                                                                                                                                                  (assert)
                                                                                                                                                  (("6"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (copy
                                                                                                         -8)
                                                                                                        (("2"
                                                                                                          (expand
                                                                                                           "constructed_sturm_sequence?"
                                                                                                           -1)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -4
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (replace
                                                                                                                 -5
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "root_degree_mult")
                                                                                                                    (("1"
                                                                                                                      (rewrite
                                                                                                                       "root_degree_deriv")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "poly_deriv"
                                                                                                                       1)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (hide
                                                                             7)
                                                                            (("2"
                                                                              (copy
                                                                               -5)
                                                                              (("2"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -4
                                                                                     2)
                                                                                    (("2"
                                                                                      (replace
                                                                                       -5
                                                                                       2)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "polynomial_prod_def"
                                                                                           :dir
                                                                                           rl)
                                                                                          (("2"
                                                                                            (rewrite
                                                                                             "sign_ext_mult")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "sign_ext"
                                                                                               +
                                                                                               2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "sign_ext"
                                                                                                 +
                                                                                                 2)
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (ground)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -4
                                                                                                         6)
                                                                                                        (("2"
                                                                                                          (replace
                                                                                                           -5)
                                                                                                          (("2"
                                                                                                            (rewrite
                                                                                                             "polynomial_prod_def"
                                                                                                             :dir
                                                                                                             rl)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (hide
                                                                             7)
                                                                            (("2"
                                                                              (case
                                                                               "polynomial(poly_deriv(p(0)), n(0) - 1)(x)=0")
                                                                              (("1"
                                                                                (copy
                                                                                 -5)
                                                                                (("1"
                                                                                  (expand
                                                                                   "constructed_sturm_sequence?"
                                                                                   -1)
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -4)
                                                                                        (("1"
                                                                                          (replace
                                                                                           -5)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "polynomial_prod_def"
                                                                                             :dir
                                                                                             rl)
                                                                                            (("1"
                                                                                              (rewrite
                                                                                               "polynomial_prod_def"
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "sign_ext"
                                                                                 +)
                                                                                (("2"
                                                                                  (lift-if)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (lift-if)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (ground)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "poly_decreasing")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "p(0)"
                                                                                                   "n(0)"
                                                                                                   "x"
                                                                                                   "z")
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (case
                                                                                                       "n(0)>0")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (skosimp*)
                                                                                                          (("1"
                                                                                                            (lemma
                                                                                                             "poly_intermediate_value_inc")
                                                                                                            (("1"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "poly_deriv(p(0))"
                                                                                                               "0"
                                                                                                               "n(0)-1"
                                                                                                               "x"
                                                                                                               "c!1")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                (("1"
                                                                                                                  (skosimp*)
                                                                                                                  (("1"
                                                                                                                    (reveal
                                                                                                                     "igz")
                                                                                                                    (("1"
                                                                                                                      (copy
                                                                                                                       -2)
                                                                                                                      (("1"
                                                                                                                        (hide
                                                                                                                         "igz")
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "cc!1")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (flatten)
                                                                                                                              (("1"
                                                                                                                                (copy
                                                                                                                                 -12)
                                                                                                                                (("1"
                                                                                                                                  (postpone)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (postpone)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (postpone)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (postpone)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (postpone) nil nil))
                            nil))
                          nil)
                         ("2" (postpone) nil nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (postpone) nil nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (postpone) nil nil))
        nil))
      nil))
    nil)
   nil nil)
  (sturm_tarski_basic_1-3 nil 3617644038
   ("" (skeep)
    ((""
      (case "FORALL (xy,xr:real): x<=xy AND xy<=xr AND xr<=y IMPLIES sign_ext(polynomial(g,k)(xy)) = sign_ext(polynomial(g,k)(xr))")
      (("1" (inst-cp - "x" "z")
        (("1" (inst - "z" "y")
          (("1" (assert)
            (("1" (case "x<=z AND z<=y")
              (("1" (flatten)
                (("1" (assert)
                  (("1" (hide (-1 -2))
                    (("1" (case "m>=2")
                      (("1" (inst-cp - "0")
                        (("1" (inst - "1")
                          (("1" (assert)
                            (("1" (expand "only_root_between?")
                              (("1" (flatten)
                                (("1" (hide (-5 -6))
                                  (("1" (assert)
                                    (("1" (inst-cp - "x")
                                      (("1"
                                        (inst - "y")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (inst-cp - "x")
                                            (("1"
                                              (inst - "y")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "number_sign_changes")
                                                    (("1"
                                                      (expand
                                                       "number_sign_changes")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "sign_ext(polynomial(poly_deriv(p(0)), n(0)-1)(x)) =
                                                                         -sign_ext(polynomial(p(0), n(0))(x))")
                                                                      (("1"
                                                                        (case
                                                                         "sign_ext(polynomial(p(0),n(0))(x)) = -sign_ext(polynomial(g,k)(x))*sign_ext(polynomial(p(1),n(1))(x))")
                                                                        (("1"
                                                                          (hide
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "root_degree_pos")
                                                                              (("1"
                                                                                (lemma
                                                                                 "root_degree_pos")
                                                                                (("1"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "p(0)"
                                                                                   "n(0)"
                                                                                   "z")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "g"
                                                                                       "k"
                                                                                       "z")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT (p(0)(n(0))/=0 AND g(k)/=0)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "constructed_sturm_sequence?")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "dd"
                                                                                                 "root_degree(p(0),n(0))(z)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "root_degree(p(1),n(1))(z) = dd-1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "even_or_odd")
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "dd")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "dd-1")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "odd_iff_even_succ")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "dd-1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "root_degree_even")
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -
                                                                                                                       "p(0)"
                                                                                                                       "n(0)"
                                                                                                                       "x"
                                                                                                                       "y"
                                                                                                                       "z")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "p(1)"
                                                                                                                           "n(1)"
                                                                                                                           "x"
                                                                                                                           "y"
                                                                                                                           "z")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "p(1)(n(1))=0")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "constructed_sturm_sequence?")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (ground)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (lift-if)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lift-if)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("2"
                                                                                                                                      (lift-if)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (lift-if)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("3"
                                                                                                                                      (lift-if)
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        (("3"
                                                                                                                                          (lift-if)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (lift-if)
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                (("3"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("4"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("4"
                                                                                                                                      (lift-if)
                                                                                                                                      (("4"
                                                                                                                                        (assert)
                                                                                                                                        (("4"
                                                                                                                                          (lift-if)
                                                                                                                                          (("4"
                                                                                                                                            (assert)
                                                                                                                                            (("4"
                                                                                                                                              (lift-if)
                                                                                                                                              (("4"
                                                                                                                                                (assert)
                                                                                                                                                (("4"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("5"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("5"
                                                                                                                                      (lift-if)
                                                                                                                                      (("5"
                                                                                                                                        (assert)
                                                                                                                                        (("5"
                                                                                                                                          (lift-if)
                                                                                                                                          (("5"
                                                                                                                                            (assert)
                                                                                                                                            (("5"
                                                                                                                                              (lift-if)
                                                                                                                                              (("5"
                                                                                                                                                (assert)
                                                                                                                                                (("5"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("6"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("6"
                                                                                                                                      (lift-if)
                                                                                                                                      (("6"
                                                                                                                                        (assert)
                                                                                                                                        (("6"
                                                                                                                                          (lift-if)
                                                                                                                                          (("6"
                                                                                                                                            (assert)
                                                                                                                                            (("6"
                                                                                                                                              (lift-if)
                                                                                                                                              (("6"
                                                                                                                                                (assert)
                                                                                                                                                (("6"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (copy
                                                                                                       -8)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "constructed_sturm_sequence?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -4
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -5
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "root_degree_mult")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "root_degree_deriv")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "poly_deriv"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           7)
                                                                          (("2"
                                                                            (copy
                                                                             -5)
                                                                            (("2"
                                                                              (expand
                                                                               "constructed_sturm_sequence?"
                                                                               -1)
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -4
                                                                                   2)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -5
                                                                                     2)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "polynomial_prod_def"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "sign_ext_mult")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "sign_ext"
                                                                                             +
                                                                                             2)
                                                                                            (("2"
                                                                                              (expand
                                                                                               "sign_ext"
                                                                                               +
                                                                                               2)
                                                                                              (("2"
                                                                                                (lift-if)
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    (("2"
                                                                                                      (replace
                                                                                                       -4
                                                                                                       6)
                                                                                                      (("2"
                                                                                                        (replace
                                                                                                         -5)
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "polynomial_prod_def"
                                                                                                           :dir
                                                                                                           rl)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (hide
                                                                           7)
                                                                          (("2"
                                                                            (case
                                                                             "polynomial(poly_deriv(p(0)), n(0) - 1)(x)=0")
                                                                            (("1"
                                                                              (copy
                                                                               -5)
                                                                              (("1"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?"
                                                                                 -1)
                                                                                (("1"
                                                                                  (flatten)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("1"
                                                                                        (replace
                                                                                         -5)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "polynomial_prod_def"
                                                                                           :dir
                                                                                           rl)
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "polynomial_prod_def"
                                                                                             :dir
                                                                                             rl)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "sign_ext"
                                                                               +)
                                                                              (("2"
                                                                                (lift-if)
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lift-if)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (lift-if)
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (ground)
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "poly_decreasing")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "p(0)"
                                                                                                 "n(0)"
                                                                                                 "x"
                                                                                                 "z")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "n(0)>0")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (skosimp*)
                                                                                                        (("1"
                                                                                                          (lemma
                                                                                                           "poly_intermediate_value_inc")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "poly_deriv(p(0))"
                                                                                                             "0"
                                                                                                             "n(0)-1"
                                                                                                             "x"
                                                                                                             "c!1")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (skosimp*)
                                                                                                                (("1"
                                                                                                                  (postpone)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (postpone)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (postpone)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("3"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (postpone) nil nil))
                          nil))
                        nil)
                       ("2" (postpone) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (postpone) nil nil))
      nil))
    nil)
   nil nil)
  (sturm_tarski_basic_1-2 nil 3617643010
   ("" (skeep)
    ((""
      (case "FORALL (xy,xr:real): x<=xy AND xy<=xr AND xr<=y IMPLIES sign_ext(polynomial(g,k)(xy)) = sign_ext(polynomial(g,k)(xr))")
      (("1" (inst-cp - "x" "z")
        (("1" (inst - "z" "y")
          (("1" (assert)
            (("1" (case "x<=z AND z<=y")
              (("1" (flatten)
                (("1" (assert)
                  (("1" (hide (-1 -2))
                    (("1" (case "m>=2")
                      (("1" (inst-cp - "0")
                        (("1" (inst - "1")
                          (("1" (assert)
                            (("1" (expand "only_root_between?")
                              (("1" (flatten)
                                (("1" (hide (-5 -6))
                                  (("1" (assert)
                                    (("1" (inst-cp - "x")
                                      (("1"
                                        (inst - "y")
                                        (("1"
                                          (assert)
                                          (("1"
                                            (inst-cp - "x")
                                            (("1"
                                              (inst - "y")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (flatten)
                                                  (("1"
                                                    (expand
                                                     "number_sign_changes")
                                                    (("1"
                                                      (expand
                                                       "number_sign_changes")
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (case
                                                                       "sign_ext(polynomial(poly_deriv(p(0)), n(0)-1)(x)) =
                                                          sign_ext(polynomial(p(0), n(0))(x))")
                                                                      (("1"
                                                                        (case
                                                                         "sign_ext(polynomial(p(0),n(0))(x)) = -sign_ext(polynomial(g,k)(x))*sign_ext(polynomial(p(1),n(1))(x))")
                                                                        (("1"
                                                                          (hide
                                                                           -2)
                                                                          (("1"
                                                                            (assert)
                                                                            (("1"
                                                                              (lemma
                                                                               "root_degree_pos")
                                                                              (("1"
                                                                                (lemma
                                                                                 "root_degree_pos")
                                                                                (("1"
                                                                                  (inst-cp
                                                                                   -
                                                                                   "p(0)"
                                                                                   "n(0)"
                                                                                   "z")
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "g"
                                                                                       "k"
                                                                                       "z")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (case
                                                                                           "NOT (p(0)(n(0))/=0 AND g(k)/=0)")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "constructed_sturm_sequence?")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "0")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "dd"
                                                                                                 "root_degree(p(0),n(0))(z)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "root_degree(p(1),n(1))(z) = dd-1")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "even_or_odd")
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "dd")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "dd-1")
                                                                                                            (("1"
                                                                                                              (lemma
                                                                                                               "odd_iff_even_succ")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "dd-1")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  (("1"
                                                                                                                    (lemma
                                                                                                                     "root_degree_even")
                                                                                                                    (("1"
                                                                                                                      (inst-cp
                                                                                                                       -
                                                                                                                       "p(0)"
                                                                                                                       "n(0)"
                                                                                                                       "x"
                                                                                                                       "y"
                                                                                                                       "z")
                                                                                                                      (("1"
                                                                                                                        (assert)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "p(1)"
                                                                                                                           "n(1)"
                                                                                                                           "x"
                                                                                                                           "y"
                                                                                                                           "z")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (case
                                                                                                                               "p(1)(n(1))=0")
                                                                                                                              (("1"
                                                                                                                                (expand
                                                                                                                                 "constructed_sturm_sequence?")
                                                                                                                                (("1"
                                                                                                                                  (flatten)
                                                                                                                                  (("1"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "1")
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (assert)
                                                                                                                                (("2"
                                                                                                                                  (ground)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (lift-if)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lift-if)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("2"
                                                                                                                                      (lift-if)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (lift-if)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("3"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("3"
                                                                                                                                      (lift-if)
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        (("3"
                                                                                                                                          (lift-if)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (lift-if)
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                (("3"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("4"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("4"
                                                                                                                                      (lift-if)
                                                                                                                                      (("4"
                                                                                                                                        (assert)
                                                                                                                                        (("4"
                                                                                                                                          (lift-if)
                                                                                                                                          (("4"
                                                                                                                                            (assert)
                                                                                                                                            (("4"
                                                                                                                                              (lift-if)
                                                                                                                                              (("4"
                                                                                                                                                (assert)
                                                                                                                                                (("4"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("5"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("5"
                                                                                                                                      (lift-if)
                                                                                                                                      (("5"
                                                                                                                                        (assert)
                                                                                                                                        (("5"
                                                                                                                                          (lift-if)
                                                                                                                                          (("5"
                                                                                                                                            (assert)
                                                                                                                                            (("5"
                                                                                                                                              (lift-if)
                                                                                                                                              (("5"
                                                                                                                                                (assert)
                                                                                                                                                (("5"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("6"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("6"
                                                                                                                                      (lift-if)
                                                                                                                                      (("6"
                                                                                                                                        (assert)
                                                                                                                                        (("6"
                                                                                                                                          (lift-if)
                                                                                                                                          (("6"
                                                                                                                                            (assert)
                                                                                                                                            (("6"
                                                                                                                                              (lift-if)
                                                                                                                                              (("6"
                                                                                                                                                (assert)
                                                                                                                                                (("6"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (copy
                                                                                                       -8)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "constructed_sturm_sequence?"
                                                                                                         -1)
                                                                                                        (("2"
                                                                                                          (flatten)
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -4
                                                                                                             1)
                                                                                                            (("2"
                                                                                                              (replace
                                                                                                               -5
                                                                                                               1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "root_degree_mult")
                                                                                                                  (("1"
                                                                                                                    (rewrite
                                                                                                                     "root_degree_deriv")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (expand
                                                                                                                     "poly_deriv"
                                                                                                                     1)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           7)
                                                                          (("2"
                                                                            (copy
                                                                             -5)
                                                                            (("2"
                                                                              (expand
                                                                               "constructed_sturm_sequence?"
                                                                               -1)
                                                                              (("2"
                                                                                (flatten)
                                                                                (("2"
                                                                                  (replace
                                                                                   -4
                                                                                   2)
                                                                                  (("2"
                                                                                    (replace
                                                                                     -5
                                                                                     2)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (rewrite
                                                                                         "polynomial_prod_def"
                                                                                         :dir
                                                                                         rl)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "sign_ext_mult")
                                                                                          (("2"
                                                                                            (postpone)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (postpone)
                                                                        nil
                                                                        nil)
                                                                       ("3"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (postpone) nil nil))
                          nil))
                        nil)
                       ("2" (postpone) nil nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (postpone) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (postpone) nil nil))
      nil))
    nil)
   nil nil)
  (sturm_tarski_basic_1-1 nil 3617639286
   ("" (skeep)
    (("" (case "m>=2")
      (("1" (inst-cp - "0")
        (("1" (inst - "1")
          (("1" (assert)
            (("1" (expand "only_root_between?")
              (("1" (flatten)
                (("1" (hide (-3 -4))
                  (("1" (assert)
                    (("1" (inst-cp - "x")
                      (("1" (inst - "y")
                        (("1" (assert)
                          (("1" (inst-cp - "x")
                            (("1" (inst - "y")
                              (("1" (assert)
                                (("1" (flatten)
                                  (("1" (expand "number_sign_changes")
                                    (("1" (expand "number_sign_changes")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (case
                                                       "sign_ext(polynomial(poly_deriv(p(0)), n(0)-1)(x)) =
                                    sign_ext(polynomial(p(0), n(0))(x))")
                                                      (("1"
                                                        (case
                                                         "sign_ext(polynomial(p(0),n(0))(x)) = -sign_ext(polynomial(g,k)(x))*sign_ext(polynomial(p(1),n(1))(x))")
                                                        (("1"
                                                          (hide -2)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lemma
                                                               "root_degree_pos")
                                                              (("1"
                                                                (lemma
                                                                 "root_degree_pos")
                                                                (("1"
                                                                  (inst-cp
                                                                   -
                                                                   "p(0)"
                                                                   "n(0)"
                                                                   "z")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "g"
                                                                       "k"
                                                                       "z")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (case
                                                                           "NOT (p(0)(n(0))/=0 AND g(k)/=0)")
                                                                          (("1"
                                                                            (expand
                                                                             "constructed_sturm_sequence?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "0")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (assert)
                                                                              (("2"
                                                                                (name
                                                                                 "dd"
                                                                                 "root_degree(p(0),n(0))(z)")
                                                                                (("2"
                                                                                  (replace
                                                                                   -1)
                                                                                  (("2"
                                                                                    (case
                                                                                     "root_degree(p(1),n(1))(z) = dd-1")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lemma
                                                                                         "even_or_odd")
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "dd")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -
                                                                                             "dd-1")
                                                                                            (("1"
                                                                                              (lemma
                                                                                               "odd_iff_even_succ")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "dd-1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (lemma
                                                                                                     "root_degree_even")
                                                                                                    (("1"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "p(0)"
                                                                                                       "n(0)"
                                                                                                       "x"
                                                                                                       "y"
                                                                                                       "z")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "p(1)"
                                                                                                           "n(1)"
                                                                                                           "x"
                                                                                                           "y"
                                                                                                           "z")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "p(1)(n(1))=0")
                                                                                                              (("1"
                                                                                                                (expand
                                                                                                                 "constructed_sturm_sequence?")
                                                                                                                (("1"
                                                                                                                  (flatten)
                                                                                                                  (("1"
                                                                                                                    (inst
                                                                                                                     -
                                                                                                                     "1")
                                                                                                                    (("1"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (label
                                                                                                                   "tens"
                                                                                                                   -10)
                                                                                                                  (("2"
                                                                                                                    (ground)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sign_ext")
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (lift-if)
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (ground)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (expand
                                                                                                                       "sign_ext")
                                                                                                                      (("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (lift-if)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (ground)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (ground)
                                                                                                                                        (("1"
                                                                                                                                          (postpone)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (postpone)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("3"
                                                                                                                      (postpone)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("4"
                                                                                                                      (postpone)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("5"
                                                                                                                      (postpone)
                                                                                                                      nil
                                                                                                                      nil)
                                                                                                                     ("6"
                                                                                                                      (postpone)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (postpone)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (postpone)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (postpone)
                                                        nil
                                                        nil)
                                                       ("3"
                                                        (postpone)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (postpone) nil nil))
          nil))
        nil)
       ("2" (postpone) nil nil))
      nil))
    nil)
   nil shostak))
 (sturm_tarski_basic_2 0
  (sturm_tarski_basic_2-3 nil 3617987960
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (case "NOT (p(0)(n(0))/=0 AND p(1)(n(1))/=0)")
          (("1" (expand "constructed_sturm_sequence?" -2)
            (("1" (flatten)
              (("1" (inst-cp - "0")
                (("1" (inst - "1")
                  (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (lemma "even_or_odd")
              (("2" (name "dd" "root_degree(p(0),n(0))(z)")
                (("2" (replace -1)
                  (("2" (assert)
                    (("2" (inst - "dd")
                      (("2" (case "even?(dd)")
                        (("1" (assert)
                          (("1" (lemma "root_degree_even")
                            (("1" (inst-cp - "p(0)" "n(0)" "x" "y" "z")
                              (("1" (inst - "p(1)" "n(1)" "x" "y" "z")
                                (("1" (assert)
                                  (("1" (inst-cp - "0")
                                    (("1" (inst - "1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (copy -2)
                                          (("1"
                                            (copy -2)
                                            (("1"
                                              (expand "sign_ext" (-1 -2))
                                              (("1"
                                                (expand "number_sign_changes")
                                                (("1"
                                                  (expand
                                                   "number_sign_changes")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "sign_ext")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lift-if)
                                                            (("2"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (lift-if)
                                                            (("3"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (lift-if)
                                                            (("4"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (lift-if)
                                                            (("5"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("6"
                                                            (lift-if)
                                                            (("6"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("7"
                                                            (lift-if)
                                                            (("7"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("8"
                                                            (lift-if)
                                                            (("8"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("9"
                                                            (lift-if)
                                                            (("9"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("10"
                                                            (lift-if)
                                                            (("10"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("11"
                                                            (lift-if)
                                                            (("11"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "constructed_sturm_sequence?")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (lemma "root_degree_odd")
                          (("2" (inst-cp - "p(0)" "n(0)" "x" "y" "z")
                            (("2" (inst - "p(1)" "n(1)" "x" "y" "z")
                              (("2" (assert)
                                (("2" (inst-cp - "0")
                                  (("2" (inst - "1")
                                    (("1" (assert)
                                      (("1"
                                        (expand "sign_ext" (-1 -2))
                                        (("1"
                                          (expand "number_sign_changes")
                                          (("1"
                                            (expand "number_sign_changes")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "sign_ext")
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (ground)
                                                    (("1"
                                                      (lift-if)
                                                      (("1" (ground) nil nil))
                                                      nil)
                                                     ("2"
                                                      (lift-if)
                                                      (("2" (ground) nil nil))
                                                      nil)
                                                     ("3"
                                                      (lift-if)
                                                      (("3" (ground) nil nil))
                                                      nil)
                                                     ("4"
                                                      (lift-if)
                                                      (("4" (ground) nil nil))
                                                      nil)
                                                     ("5"
                                                      (lift-if)
                                                      (("5" (ground) nil nil))
                                                      nil)
                                                     ("6"
                                                      (lift-if)
                                                      (("6" (ground) nil nil))
                                                      nil)
                                                     ("7"
                                                      (lift-if)
                                                      (("7" (ground) nil nil))
                                                      nil)
                                                     ("8"
                                                      (lift-if)
                                                      (("8" (ground) nil nil))
                                                      nil)
                                                     ("9"
                                                      (lift-if)
                                                      (("9" (ground) nil nil))
                                                      nil)
                                                     ("10"
                                                      (lift-if)
                                                      (("10"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("11"
                                                      (lift-if)
                                                      (("11"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (< const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (even_or_odd formula-decl nil naturalnumbers nil)
    (root_degree_odd formula-decl nil more_polynomial_props reals)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (root_degree_even formula-decl nil more_polynomial_props reals)
    (even? const-decl "bool" integers nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sequence type-eq-decl nil sequences nil) (<= const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (^ const-decl "real" exponentiation nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (poly_deriv const-decl "real" polynomials reals)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals))
   nil)
  (sturm_tarski_basic_2-2 nil 3617706906
   ("" (skeep)
    (("" (case "NOT (p(0)(n(0))/=0 AND p(1)(n(1))/=0)")
      (("1" (expand "constructed_sturm_sequence?" -2)
        (("1" (flatten)
          (("1" (inst-cp - "0")
            (("1" (inst - "1") (("1" (assert) nil nil) ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (label "css" -2)
          (("2" (label "hyp" -3)
            (("2" (case "polynomial(g,k1)(z)=0")
              (("1" (hide -5)
                (("1" (copy -4)
                  (("1" (copy -4)
                    (("1" (copy -4)
                      (("1" (hide (-5 -6 -7))
                        (("1" (label "css" -2)
                          (("1" (label "hyp" -3)
                            (("1" (skoletin 3)
                              (("1"
                                (case "NOT root_degree(p(1),n(1))(z) >= root_degree(p(0),n(0))(z)")
                                (("1"
                                  (lemma "constructed_sturm_seq_root_degrees")
                                  (("1" (inst?)
                                    (("1" (inst - "z")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide 2)
                                          (("1"
                                            (expand "default_root_degree?")
                                            (("1" (propax) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (assert)
                                  (("2"
                                    (case "root_degree(p(1), n(1))(z) = root_degree(p(0), n(0))(z)")
                                    (("1" (hide -2)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (hide 2)
                                            (("1"
                                              (lemma "even_or_odd")
                                              (("1"
                                                (name
                                                 "dd"
                                                 "root_degree(p(0),n(0))(z)")
                                                (("1"
                                                  (replace -1)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (inst - "dd")
                                                      (("1"
                                                        (case "even?(dd)")
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lemma
                                                             "root_degree_even")
                                                            (("1"
                                                              (inst-cp
                                                               -
                                                               "p(0)"
                                                               "n(0)"
                                                               "x"
                                                               "y"
                                                               "z")
                                                              (("1"
                                                                (inst
                                                                 -
                                                                 "p(1)"
                                                                 "n(1)"
                                                                 "x"
                                                                 "y"
                                                                 "z")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (copy
                                                                     "hyp")
                                                                    (("1"
                                                                      (inst-cp
                                                                       -
                                                                       "0")
                                                                      (("1"
                                                                        (inst
                                                                         -
                                                                         "1")
                                                                        (("1"
                                                                          (expand
                                                                           "only_root_between?"
                                                                           (-1
                                                                            -2))
                                                                          (("1"
                                                                            (flatten)
                                                                            (("1"
                                                                              (assert)
                                                                              (("1"
                                                                                (inst-cp
                                                                                 -
                                                                                 "x")
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "y")
                                                                                  (("1"
                                                                                    (inst-cp
                                                                                     -
                                                                                     "x")
                                                                                    (("1"
                                                                                      (inst
                                                                                       -
                                                                                       "y")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (inst-cp
                                                                                               -
                                                                                               "0")
                                                                                              (("1"
                                                                                                (inst
                                                                                                 -
                                                                                                 "1")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  (("1"
                                                                                                    (expand
                                                                                                     "nsc"
                                                                                                     +)
                                                                                                    (("1"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("1"
                                                                                                        (expand
                                                                                                         "number_sign_changes"
                                                                                                         +)
                                                                                                        (("1"
                                                                                                          (lift-if)
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            nil
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (assert)
                                                          (("2"
                                                            (lemma
                                                             "root_degree_even")
                                                            (("2"
                                                              (inst-cp
                                                               -
                                                               "p(0)"
                                                               "n(0)"
                                                               "x"
                                                               "y"
                                                               "z")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "p(1)"
                                                                 "n(1)"
                                                                 "x"
                                                                 "y"
                                                                 "z")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (copy
                                                                     "hyp")
                                                                    (("2"
                                                                      (inst-cp
                                                                       -
                                                                       "0")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "1")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (expand
                                                                             "only_root_between?"
                                                                             (-1
                                                                              -2))
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (assert)
                                                                                (("2"
                                                                                  (inst-cp
                                                                                   "hyp"
                                                                                   "0")
                                                                                  (("2"
                                                                                    (inst-cp
                                                                                     "hyp"
                                                                                     "1")
                                                                                    (("2"
                                                                                      (inst-cp
                                                                                       -
                                                                                       "x")
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "y")
                                                                                        (("2"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "x")
                                                                                          (("2"
                                                                                            (inst
                                                                                             -
                                                                                             "y")
                                                                                            (("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (expand
                                                                                                   "nsc"
                                                                                                   +)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "number_sign_changes"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "number_sign_changes"
                                                                                                       +)
                                                                                                      (("2"
                                                                                                        (lift-if)
                                                                                                        (("2"
                                                                                                          (lift-if)
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (lift-if)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "sign_ext")
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (ground)
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (ground)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("2"
                                                                                                                        (lift-if)
                                                                                                                        (("2"
                                                                                                                          (ground)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("3"
                                                                                                                        (lift-if)
                                                                                                                        (("3"
                                                                                                                          (ground)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil)
                                                                                                                       ("4"
                                                                                                                        (lift-if)
                                                                                                                        (("4"
                                                                                                                          (ground)
                                                                                                                          nil
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert)
                                      (("2"
                                        (case
                                         "NOT root_degree(p(2), n(2))(z) = root_degree(p(0), n(0))(z)")
                                        (("1"
                                          (lemma
                                           "constructed_sturm_seq_root_degrees")
                                          (("1"
                                            (inst?)
                                            (("1"
                                              (inst - "z")
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (expand
                                                   "default_root_degree?")
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (inst - "1")
                                                      (("1" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (assert)
                                          (("2"
                                            (copy "hyp")
                                            (("2"
                                              (inst-cp - "0")
                                              (("2"
                                                (inst-cp - "1")
                                                (("2"
                                                  (inst - "2")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (expand
                                                       "only_root_between?"
                                                       (-1 -2 -3))
                                                      (("2"
                                                        (flatten)
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst-cp - "x")
                                                            (("2"
                                                              (inst - "y")
                                                              (("2"
                                                                (inst-cp
                                                                 -
                                                                 "x")
                                                                (("2"
                                                                  (inst - "y")
                                                                  (("2"
                                                                    (inst-cp
                                                                     -
                                                                     "x")
                                                                    (("2"
                                                                      (inst
                                                                       -
                                                                       "y")
                                                                      (("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (flatten)
                                                                          (("2"
                                                                            (copy
                                                                             "css")
                                                                            (("2"
                                                                              (label
                                                                               "igz"
                                                                               -1)
                                                                              (("2"
                                                                                (expand
                                                                                 "constructed_sturm_sequence?"
                                                                                 -1)
                                                                                (("2"
                                                                                  (flatten)
                                                                                  (("2"
                                                                                    (assert)
                                                                                    (("2"
                                                                                      (copy
                                                                                       -8)
                                                                                      (("2"
                                                                                        (hide
                                                                                         "igz")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "2")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (skeep)
                                                                                              (("2"
                                                                                                (name
                                                                                                 "pd"
                                                                                                 "poly_divide(p(0), n(0))(p(1), n(1))(0)")
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "poly_divide_def")
                                                                                                    (("2"
                                                                                                      (inst?)
                                                                                                      (("2"
                                                                                                        (case
                                                                                                         "p(1)(n(1))/=0")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (flatten)
                                                                                                            (("1"
                                                                                                              (replace
                                                                                                               -2)
                                                                                                              (("1"
                                                                                                                (case
                                                                                                                 "NOT (-1/c)*polynomial(p(2), n(2)) = polynomial(pd`rem, pd`rdeg)")
                                                                                                                (("1"
                                                                                                                  (decompose-equality
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (decompose-equality
                                                                                                                     -3)
                                                                                                                    (("1"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "x!1")
                                                                                                                      (("1"
                                                                                                                        (expand
                                                                                                                         "*"
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (replace
                                                                                                                           -1
                                                                                                                           +)
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "scal_polynomial2")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (replace
                                                                                                                   -1
                                                                                                                   -2
                                                                                                                   :dir
                                                                                                                   rl)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "signs_swap_division")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "x"
                                                                                                                       "y"
                                                                                                                       "z"
                                                                                                                       "p(0)"
                                                                                                                       "p(1)"
                                                                                                                       "pd`quot"
                                                                                                                       "(-1/c)*p(2)"
                                                                                                                       "n(0)"
                                                                                                                       "n(1)"
                                                                                                                       "pd`qdeg"
                                                                                                                       "n(2)")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (split
                                                                                                                           -)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "scal_polynomial2")
                                                                                                                              (("1"
                                                                                                                                (rewrite
                                                                                                                                 "scal_polynomial2")
                                                                                                                                (("1"
                                                                                                                                  (rewrite
                                                                                                                                   "sign_ext_mult"
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (rewrite
                                                                                                                                     "sign_ext_mult"
                                                                                                                                     -2)
                                                                                                                                    (("1"
                                                                                                                                      (case
                                                                                                                                       "NOT sign_ext(-1/c)=-1")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "sign_ext"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lift-if)
                                                                                                                                            (("1"
                                                                                                                                              (split
                                                                                                                                               1)
                                                                                                                                              (("1"
                                                                                                                                                (propax)
                                                                                                                                                nil
                                                                                                                                                nil)
                                                                                                                                               ("2"
                                                                                                                                                (flatten)
                                                                                                                                                (("2"
                                                                                                                                                  (cross-mult
                                                                                                                                                   1)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil)
                                                                                                                                       ("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "nsc"
                                                                                                                                             +)
                                                                                                                                            (("2"
                                                                                                                                              (expand
                                                                                                                                               "number_sign_changes"
                                                                                                                                               +)
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "number_sign_changes"
                                                                                                                                                 +)
                                                                                                                                                (("2"
                                                                                                                                                  (expand
                                                                                                                                                   "number_sign_changes"
                                                                                                                                                   +)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (ground)
                                                                                                                                                          (("1"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("1"
                                                                                                                                                              (assert)
                                                                                                                                                              (("1"
                                                                                                                                                                (expand
                                                                                                                                                                 "sign_ext")
                                                                                                                                                                (("1"
                                                                                                                                                                  (lift-if)
                                                                                                                                                                  (("1"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (ground)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("2"
                                                                                                                                                            (expand
                                                                                                                                                             "sign_ext")
                                                                                                                                                            (("2"
                                                                                                                                                              (lift-if)
                                                                                                                                                              (("2"
                                                                                                                                                                (assert)
                                                                                                                                                                (("2"
                                                                                                                                                                  (lift-if)
                                                                                                                                                                  (("2"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("3"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("3"
                                                                                                                                                              (expand
                                                                                                                                                               "sign_ext")
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (lift-if)
                                                                                                                                                                  (("3"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("3"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("3"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("3"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("3"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("3"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("3"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("3"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("3"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("3"
                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                      (("3"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("3"
                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                          (("3"
                                                                                                                                                                                            (assert)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (ground)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil)
                                                                                                                                                           ("4"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("4"
                                                                                                                                                              (assert)
                                                                                                                                                              (("4"
                                                                                                                                                                (expand
                                                                                                                                                                 "sign_ext")
                                                                                                                                                                (("4"
                                                                                                                                                                  (lift-if)
                                                                                                                                                                  (("4"
                                                                                                                                                                    (assert)
                                                                                                                                                                    (("4"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("4"
                                                                                                                                                                        (assert)
                                                                                                                                                                        (("4"
                                                                                                                                                                          (lift-if)
                                                                                                                                                                          (("4"
                                                                                                                                                                            (assert)
                                                                                                                                                                            (("4"
                                                                                                                                                                              (lift-if)
                                                                                                                                                                              (("4"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("4"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("4"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("4"
                                                                                                                                                                                      (ground)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (skeep
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (inst-cp
                                                                                                                               -
                                                                                                                               "p(0)"
                                                                                                                               "n(0)")
                                                                                                                              (("2"
                                                                                                                                (inst-cp
                                                                                                                                 -
                                                                                                                                 "p(1)"
                                                                                                                                 "n(1)")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "(-1/c)*p(2)"
                                                                                                                                   "n(2)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (typepred
                                                                                                                                       "sig")
                                                                                                                                      (("2"
                                                                                                                                        (expand
                                                                                                                                         "nsc"
                                                                                                                                         +)
                                                                                                                                        (("2"
                                                                                                                                          (hide
                                                                                                                                           -1)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (rewrite
                                                                                                                                               "scal_polynomial2")
                                                                                                                                              (("2"
                                                                                                                                                (rewrite
                                                                                                                                                 "scal_polynomial2")
                                                                                                                                                (("2"
                                                                                                                                                  (rewrite
                                                                                                                                                   "sign_ext_mult")
                                                                                                                                                  (("2"
                                                                                                                                                    (rewrite
                                                                                                                                                     "sign_ext_mult")
                                                                                                                                                    (("2"
                                                                                                                                                      (case
                                                                                                                                                       "NOT sign_ext(-1/c)=-1")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "sign_ext"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (lift-if)
                                                                                                                                                          (("1"
                                                                                                                                                            (split
                                                                                                                                                             1)
                                                                                                                                                            (("1"
                                                                                                                                                              (propax)
                                                                                                                                                              nil
                                                                                                                                                              nil)
                                                                                                                                                             ("2"
                                                                                                                                                              (flatten)
                                                                                                                                                              (("2"
                                                                                                                                                                (cross-mult
                                                                                                                                                                 1)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replaces
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "number_sign_changes"
                                                                                                                                                             +)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "number_sign_changes"
                                                                                                                                                               +)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "number_sign_changes"
                                                                                                                                                                 +)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sign_ext")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lift-if)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (ground)
                                                                                                                                                                                nil
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("3"
                                                                                                                            (copy
                                                                                                                             "hyp")
                                                                                                                            (("3"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "2")
                                                                                                                              (("3"
                                                                                                                                (expand
                                                                                                                                 "only_root_between?")
                                                                                                                                (("3"
                                                                                                                                  (skeep)
                                                                                                                                  (("3"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "r")
                                                                                                                                    (("3"
                                                                                                                                      (assert)
                                                                                                                                      (("3"
                                                                                                                                        (rewrite
                                                                                                                                         "scal_polynomial2")
                                                                                                                                        (("3"
                                                                                                                                          (assert)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("4"
                                                                                                                            (skeep)
                                                                                                                            (("4"
                                                                                                                              (inst
                                                                                                                               -
                                                                                                                               "r")
                                                                                                                              (("4"
                                                                                                                                (assert)
                                                                                                                                (("4"
                                                                                                                                  (replace
                                                                                                                                   -2)
                                                                                                                                  (("4"
                                                                                                                                    (rewrite
                                                                                                                                     "scal_polynomial2"
                                                                                                                                     1)
                                                                                                                                    (("4"
                                                                                                                                      (assert)
                                                                                                                                      (("4"
                                                                                                                                        (expand
                                                                                                                                         "*"
                                                                                                                                         1)
                                                                                                                                        (("4"
                                                                                                                                          (propax)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("5"
                                                                                                                            (expand
                                                                                                                             "*"
                                                                                                                             1)
                                                                                                                            (("5"
                                                                                                                              (copy
                                                                                                                               "css")
                                                                                                                              (("5"
                                                                                                                                (expand
                                                                                                                                 "constructed_sturm_sequence?"
                                                                                                                                 -1)
                                                                                                                                (("5"
                                                                                                                                  (flatten)
                                                                                                                                  (("5"
                                                                                                                                    (inst
                                                                                                                                     -
                                                                                                                                     "2")
                                                                                                                                    (("5"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("6"
                                                                                                                            (rewrite
                                                                                                                             "root_degree_scal")
                                                                                                                            (("1"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil)
                                                                                                                             ("2"
                                                                                                                              (copy
                                                                                                                               "css")
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "constructed_sturm_sequence?"
                                                                                                                                 -1)
                                                                                                                                (("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (inst?)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("7"
                                                                                                                            (assert)
                                                                                                                            (("7"
                                                                                                                              (rewrite
                                                                                                                               "root_degree_scal")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (copy
                                                                                                                                 "css")
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "constructed_sturm_sequence?"
                                                                                                                                   -1)
                                                                                                                                  (("2"
                                                                                                                                    (flatten)
                                                                                                                                    (("2"
                                                                                                                                      (inst?)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (copy
                                                                                                           "css")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "constructed_sturm_sequence?"
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (flatten)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (assert)
                (("2" (flatten)
                  (("2" (inst-cp - "0")
                    (("2" (inst-cp - "1")
                      (("2" (inst-cp - "2")
                        (("2" (label "izy" -3)
                          (("2" (hide "izy")
                            (("2" (expand "only_root_between?")
                              (("2" (flatten)
                                (("2" (hide (-3 -4 -6 -7))
                                  (("2" (inst-cp - "x")
                                    (("2" (inst - "y")
                                      (("2"
                                        (assert)
                                        (("2"
                                          (inst-cp - "x")
                                          (("2"
                                            (inst - "y")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (inst-cp - "x")
                                                (("2"
                                                  (inst - "y")
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (lemma
                                                         "root_degree_pos")
                                                        (("2"
                                                          (inst
                                                           -
                                                           "p(0)"
                                                           "n(0)"
                                                           "z")
                                                          (("2"
                                                            (assert)
                                                            (("2"
                                                              (lemma
                                                               "root_degree_pos")
                                                              (("2"
                                                                (case
                                                                 "g(k1)=0")
                                                                (("1"
                                                                  (expand
                                                                   "constructed_sturm_sequence?")
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   -
                                                                   "g"
                                                                   "k1"
                                                                   "z")
                                                                  (("2"
                                                                    (assert)
                                                                    (("2"
                                                                      (case
                                                                       "root_degree(p(1),n(1))(z)=0")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (lemma
                                                                           "root_degree_even")
                                                                          (("1"
                                                                            (inst-cp
                                                                             -
                                                                             "p(0)"
                                                                             "n(0)"
                                                                             "x"
                                                                             "y"
                                                                             "z")
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "p(1)"
                                                                               "n(1)"
                                                                               "x"
                                                                               "y"
                                                                               "z")
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (hide
                                                                                   15)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "number_sign_changes")
                                                                                    (("1"
                                                                                      (expand
                                                                                       "number_sign_changes")
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (assert)
                                                                                          (("1"
                                                                                            (expand
                                                                                             "only_root_between?")
                                                                                            (("1"
                                                                                              (lift-if)
                                                                                              (("1"
                                                                                                (ground)
                                                                                                nil
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (assert)
                                                                        (("2"
                                                                          (hide
                                                                           15)
                                                                          (("2"
                                                                            (lemma
                                                                             "constructed_sturm_seq_root_degrees")
                                                                            (("2"
                                                                              (inst?)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "z")
                                                                                (("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "default_root_degree?")
                                                                                    (("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (inst
                                                                                         -
                                                                                         "1")
                                                                                        (("2"
                                                                                          (assert)
                                                                                          (("2"
                                                                                            (copy
                                                                                             "css")
                                                                                            (("2"
                                                                                              (label
                                                                                               "igz"
                                                                                               -1)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "constructed_sturm_sequence?"
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (flatten)
                                                                                                  (("2"
                                                                                                    (assert)
                                                                                                    (("2"
                                                                                                      (copy
                                                                                                       -8)
                                                                                                      (("2"
                                                                                                        (hide
                                                                                                         "igz")
                                                                                                        (("2"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "2")
                                                                                                          (("2"
                                                                                                            (assert)
                                                                                                            (("2"
                                                                                                              (skeep)
                                                                                                              (("2"
                                                                                                                (name
                                                                                                                 "pd"
                                                                                                                 "poly_divide(p(0), n(0))(p(1), n(1))(0)")
                                                                                                                (("2"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "poly_divide_def")
                                                                                                                    (("2"
                                                                                                                      (inst?)
                                                                                                                      (("2"
                                                                                                                        (case
                                                                                                                         "p(1)(n(1))/=0")
                                                                                                                        (("1"
                                                                                                                          (assert)
                                                                                                                          (("1"
                                                                                                                            (flatten)
                                                                                                                            (("1"
                                                                                                                              (replace
                                                                                                                               -2)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "NOT (-1/c)*polynomial(p(2), n(2)) = polynomial(pd`rem, pd`rdeg)")
                                                                                                                                (("1"
                                                                                                                                  (decompose-equality
                                                                                                                                   1)
                                                                                                                                  (("1"
                                                                                                                                    (decompose-equality
                                                                                                                                     -3)
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "x!1")
                                                                                                                                      (("1"
                                                                                                                                        (expand
                                                                                                                                         "*"
                                                                                                                                         1)
                                                                                                                                        (("1"
                                                                                                                                          (replace
                                                                                                                                           -1
                                                                                                                                           +)
                                                                                                                                          (("1"
                                                                                                                                            (rewrite
                                                                                                                                             "scal_polynomial2")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (replace
                                                                                                                                   -1
                                                                                                                                   -2
                                                                                                                                   :dir
                                                                                                                                   rl)
                                                                                                                                  (("2"
                                                                                                                                    (lemma
                                                                                                                                     "signs_swap_division")
                                                                                                                                    (("2"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "x"
                                                                                                                                       "y"
                                                                                                                                       "z"
                                                                                                                                       "p(0)"
                                                                                                                                       "p(1)"
                                                                                                                                       "pd`quot"
                                                                                                                                       "(-1/c)*p(2)"
                                                                                                                                       "n(0)"
                                                                                                                                       "n(1)"
                                                                                                                                       "pd`qdeg"
                                                                                                                                       "n(2)")
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (split
                                                                                                                                           -)
                                                                                                                                          (("1"
                                                                                                                                            (flatten)
                                                                                                                                            (("1"
                                                                                                                                              (rewrite
                                                                                                                                               "scal_polynomial2")
                                                                                                                                              (("1"
                                                                                                                                                (rewrite
                                                                                                                                                 "scal_polynomial2")
                                                                                                                                                (("1"
                                                                                                                                                  (rewrite
                                                                                                                                                   "sign_ext_mult"
                                                                                                                                                   -1)
                                                                                                                                                  (("1"
                                                                                                                                                    (rewrite
                                                                                                                                                     "sign_ext_mult"
                                                                                                                                                     -2)
                                                                                                                                                    (("1"
                                                                                                                                                      (case
                                                                                                                                                       "NOT sign_ext(-1/c)=-1")
                                                                                                                                                      (("1"
                                                                                                                                                        (expand
                                                                                                                                                         "sign_ext"
                                                                                                                                                         1)
                                                                                                                                                        (("1"
                                                                                                                                                          (assert)
                                                                                                                                                          (("1"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("1"
                                                                                                                                                              (split
                                                                                                                                                               1)
                                                                                                                                                              (("1"
                                                                                                                                                                (propax)
                                                                                                                                                                nil
                                                                                                                                                                nil)
                                                                                                                                                               ("2"
                                                                                                                                                                (flatten)
                                                                                                                                                                (("2"
                                                                                                                                                                  (cross-mult
                                                                                                                                                                   1)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (replace
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (assert)
                                                                                                                                                          (("2"
                                                                                                                                                            (expand
                                                                                                                                                             "number_sign_changes"
                                                                                                                                                             +)
                                                                                                                                                            (("2"
                                                                                                                                                              (expand
                                                                                                                                                               "number_sign_changes"
                                                                                                                                                               +)
                                                                                                                                                              (("2"
                                                                                                                                                                (expand
                                                                                                                                                                 "number_sign_changes"
                                                                                                                                                                 +)
                                                                                                                                                                (("2"
                                                                                                                                                                  (expand
                                                                                                                                                                   "sign_ext")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (lift-if)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (lift-if)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (assert)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (lift-if)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (assert)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (assert)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (ground)
                                                                                                                                                                                          (("1"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("1"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("1"
                                                                                                                                                                                                (ground)
                                                                                                                                                                                                (("1"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("2"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (ground)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    nil
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("3"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("3"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("4"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("4"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("5"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("5"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil)
                                                                                                                                                                                           ("6"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("6"
                                                                                                                                                                                              (assert)
                                                                                                                                                                                              nil
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("2"
                                                                                                                                            (skeep
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (inst-cp
                                                                                                                                               -
                                                                                                                                               "p(0)"
                                                                                                                                               "n(0)")
                                                                                                                                              (("2"
                                                                                                                                                (inst-cp
                                                                                                                                                 -
                                                                                                                                                 "p(1)"
                                                                                                                                                 "n(1)")
                                                                                                                                                (("2"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "(-1/c)*p(2)"
                                                                                                                                                   "n(2)")
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (typepred
                                                                                                                                                       "sig")
                                                                                                                                                      (("2"
                                                                                                                                                        (hide
                                                                                                                                                         -1)
                                                                                                                                                        (("2"
                                                                                                                                                          (rewrite
                                                                                                                                                           "scal_polynomial2")
                                                                                                                                                          (("2"
                                                                                                                                                            (rewrite
                                                                                                                                                             "scal_polynomial2")
                                                                                                                                                            (("2"
                                                                                                                                                              (rewrite
                                                                                                                                                               "sign_ext_mult")
                                                                                                                                                              (("2"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "sign_ext_mult")
                                                                                                                                                                (("2"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT sign_ext(-1/c)=-1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (expand
                                                                                                                                                                     "sign_ext"
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (lift-if)
                                                                                                                                                                      (("1"
                                                                                                                                                                        (split
                                                                                                                                                                         1)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (propax)
                                                                                                                                                                          nil
                                                                                                                                                                          nil)
                                                                                                                                                                         ("2"
                                                                                                                                                                          (flatten)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (cross-mult
                                                                                                                                                                             1)
                                                                                                                                                                            nil
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "number_sign_changes"
                                                                                                                                                                         +)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "number_sign_changes"
                                                                                                                                                                           +)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (expand
                                                                                                                                                                             "number_sign_changes"
                                                                                                                                                                             +)
                                                                                                                                                                            (("2"
                                                                                                                                                                              (expand
                                                                                                                                                                               "sign_ext")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (lift-if)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (assert)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      nil
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("3"
                                                                                                                                            (reveal
                                                                                                                                             "izy")
                                                                                                                                            (("3"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "0")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("4"
                                                                                                                                            (reveal
                                                                                                                                             "izy")
                                                                                                                                            (("4"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "1")
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("5"
                                                                                                                                            (reveal
                                                                                                                                             "izy")
                                                                                                                                            (("5"
                                                                                                                                              (inst
                                                                                                                                               -
                                                                                                                                               "2")
                                                                                                                                              (("5"
                                                                                                                                                (expand
                                                                                                                                                 "only_root_between?")
                                                                                                                                                (("5"
                                                                                                                                                  (skeep)
                                                                                                                                                  (("5"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "r")
                                                                                                                                                    (("5"
                                                                                                                                                      (assert)
                                                                                                                                                      (("5"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("5"
                                                                                                                                                          (rewrite
                                                                                                                                                           "scal_polynomial2")
                                                                                                                                                          (("5"
                                                                                                                                                            (assert)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("6"
                                                                                                                                            (skeep)
                                                                                                                                            (("6"
                                                                                                                                              (rewrite
                                                                                                                                               "scal_polynomial2")
                                                                                                                                              (("6"
                                                                                                                                                (expand
                                                                                                                                                 "*")
                                                                                                                                                (("6"
                                                                                                                                                  (inst
                                                                                                                                                   -
                                                                                                                                                   "r")
                                                                                                                                                  (("6"
                                                                                                                                                    (assert)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("7"
                                                                                                                                            (expand
                                                                                                                                             "*")
                                                                                                                                            (("7"
                                                                                                                                              (copy
                                                                                                                                               "css")
                                                                                                                                              (("7"
                                                                                                                                                (expand
                                                                                                                                                 "constructed_sturm_sequence?")
                                                                                                                                                (("7"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("7"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "2")
                                                                                                                                                    (("7"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("8"
                                                                                                                                            (rewrite
                                                                                                                                             "root_degree_scal")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (copy
                                                                                                                                               "css")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "constructed_sturm_sequence?")
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "2")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil)
                                                                                                                                           ("9"
                                                                                                                                            (rewrite
                                                                                                                                             "root_degree_scal")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil)
                                                                                                                                             ("2"
                                                                                                                                              (copy
                                                                                                                                               "css")
                                                                                                                                              (("2"
                                                                                                                                                (expand
                                                                                                                                                 "constructed_sturm_sequence?")
                                                                                                                                                (("2"
                                                                                                                                                  (flatten)
                                                                                                                                                  (("2"
                                                                                                                                                    (inst
                                                                                                                                                     -
                                                                                                                                                     "2")
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil)
                                                                                                                         ("2"
                                                                                                                          (copy
                                                                                                                           "css")
                                                                                                                          (("2"
                                                                                                                            (expand
                                                                                                                             "constructed_sturm_sequence?")
                                                                                                                            (("2"
                                                                                                                              (flatten)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals)
    (poly_deriv const-decl "real" polynomials reals)
    (sign_ext_mult formula-decl nil sign reals)
    (Sign type-eq-decl nil sign reals)
    (root_degree_scal formula-decl nil more_polynomial_props reals)
    (signs_swap_division formula-decl nil more_polynomial_props reals)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (poly_divide_def formula-decl nil polynomial_division Sturm)
    (poly_divide def-decl "DivType" polynomial_division Sturm)
    (DivType type-eq-decl nil polynomial_division Sturm)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (only_root_between? const-decl "bool" more_polynomial_props reals)
    (root_degree_even formula-decl nil more_polynomial_props reals)
    (max_nnreal_0 formula-decl nil min_max reals)
    (max_npreal_0 formula-decl nil min_max reals)
    (root_degree_pos formula-decl nil more_polynomial_props reals))
   nil)
  (sturm_tarski_basic_2-1 nil 3617703869
   ("" (skeep)
    (("" (skoletin 1)
      (("" (case "NOT root_degree(p(1),n(1))(z) >= root_degree(p(0),n(0))(z)")
        (("1" (lemma "constructed_sturm_seq_root_degrees")
          (("1" (inst?)
            (("1" (inst - "z")
              (("1" (assert)
                (("1" (hide 2)
                  (("1" (expand "default_root_degree?")
                    (("1" (propax) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (assert)
          (("2"
            (case "root_degree(p(1), n(1))(z) = root_degree(p(0), n(0))(z)")
            (("1" (hide -2)
              (("1" (assert)
                (("1" (flatten)
                  (("1" (lemma "even_or_odd")
                    (("1" (name "dd" "root_degree(p(0),n(0))(z)")
                      (("1" (replace -1)
                        (("1" (assert)
                          (("1" (inst - "dd")
                            (("1" (case "even?(dd)")
                              (("1" (assert)
                                (("1" (lemma "root_degree_even")
                                  (("1" (inst-cp - "p(0)" "n(0)" "x" "y" "z")
                                    (("1" (inst - "p(1)" "n(1)" "x" "y" "z")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst-cp - "0")
                                          (("1"
                                            (inst - "1")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (copy -8)
                                                (("1"
                                                  (copy -10)
                                                  (("1"
                                                    (expand
                                                     "only_root_between?"
                                                     (-1 -2))
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (inst-cp - "x")
                                                          (("1"
                                                            (inst - "y")
                                                            (("1"
                                                              (inst-cp - "x")
                                                              (("1"
                                                                (inst - "y")
                                                                (("1"
                                                                  (assert)
                                                                  (("1"
                                                                    (flatten)
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (postpone)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (postpone) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (postpone) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (postpone) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (sturm_tarski_basic_3 0
  (sturm_tarski_basic_3-4 "" 3790099144
   ("" (skeep)
    (("" (case "NOT (p(0)(n(0))/=0 AND p(1)(n(1))/=0 AND p(2)(n(2))/=0)")
      (("1" (expand "constructed_sturm_sequence?" -2)
        (("1" (flatten)
          (("1" (inst-cp - "0")
            (("1" (inst-cp - "1")
              (("1" (inst - "2")
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (label "css" -2)
          (("2" (label "hyp" -3)
            (("2" (skoletin 4)
              (("2" (flatten)
                (("2" (copy "hyp")
                  (("2" (inst-cp - "0")
                    (("2" (inst-cp - "1")
                      (("1" (inst - "2")
                        (("1" (assert)
                          (("1" (expand "only_root_between?" (-1 -2 -3))
                            (("1" (flatten)
                              (("1" (assert)
                                (("1" (inst-cp - "x")
                                  (("1" (inst - "y")
                                    (("1" (inst-cp - "x")
                                      (("1"
                                        (inst - "y")
                                        (("1"
                                          (inst-cp - "x")
                                          (("1"
                                            (inst - "y")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (hide (-1 -2 -3 -4))
                                                  (("1"
                                                    (copy "css")
                                                    (("1"
                                                      (label "igz" -1)
                                                      (("1"
                                                        (expand
                                                         "constructed_sturm_sequence?"
                                                         -1)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (copy -8)
                                                              (("1"
                                                                (hide "igz")
                                                                (("1"
                                                                  (inst - "2")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (name
                                                                         "pd"
                                                                         "poly_divide(p(0), n(0))(p(1), n(1))(0)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "poly_divide_def")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT (-1/c)*polynomial(p(2), n(2)) = polynomial(pd`rem, pd`rdeg)")
                                                                                    (("1"
                                                                                      (decompose-equality
                                                                                       1)
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -3)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "*"
                                                                                             1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "scal_polynomial2")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -1
                                                                                       -2
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "signs_swap_division")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x"
                                                                                           "y"
                                                                                           "z"
                                                                                           "p(0)"
                                                                                           "p(1)"
                                                                                           "pd`quot"
                                                                                           "(-1/c)*p(2)"
                                                                                           "n(0)"
                                                                                           "n(1)"
                                                                                           "pd`qdeg"
                                                                                           "n(2)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "scal_polynomial2")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "scal_polynomial2")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "sign_ext_mult"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "sign_ext_mult"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "NOT sign_ext(-1/c)=-1")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "sign_ext"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "nsc"
                                                                                                                 +)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "number_sign_changes"
                                                                                                                   +)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     +)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "number_sign_changes"
                                                                                                                       +)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (ground)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (lift-if)
                                                                                                                                        (("1"
                                                                                                                                          (assert)
                                                                                                                                          (("1"
                                                                                                                                            (lift-if)
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              (("1"
                                                                                                                                                (ground)
                                                                                                                                                nil
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "sign_ext")
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lift-if)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("2"
                                                                                                                                                      (assert)
                                                                                                                                                      (("2"
                                                                                                                                                        (ground)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (lift-if)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("3"
                                                                                                                                    (lift-if)
                                                                                                                                    (("3"
                                                                                                                                      (lift-if)
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        (("3"
                                                                                                                                          (lift-if)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (lift-if)
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                (("3"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        (("3"
                                                                                                                                                          (lift-if)
                                                                                                                                                          (("3"
                                                                                                                                                            (assert)
                                                                                                                                                            (("3"
                                                                                                                                                              (ground)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("4"
                                                                                                                                (lift-if)
                                                                                                                                (("4"
                                                                                                                                  (assert)
                                                                                                                                  (("4"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("4"
                                                                                                                                      (lift-if)
                                                                                                                                      (("4"
                                                                                                                                        (lift-if)
                                                                                                                                        (("4"
                                                                                                                                          (assert)
                                                                                                                                          (("4"
                                                                                                                                            (lift-if)
                                                                                                                                            (("4"
                                                                                                                                              (assert)
                                                                                                                                              (("4"
                                                                                                                                                (lift-if)
                                                                                                                                                (("4"
                                                                                                                                                  (assert)
                                                                                                                                                  (("4"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("4"
                                                                                                                                                      (assert)
                                                                                                                                                      (("4"
                                                                                                                                                        (ground)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("5"
                                                                                                                                (lift-if)
                                                                                                                                (("5"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("5"
                                                                                                                                    (lift-if)
                                                                                                                                    (("5"
                                                                                                                                      (lift-if)
                                                                                                                                      (("5"
                                                                                                                                        (assert)
                                                                                                                                        (("5"
                                                                                                                                          (lift-if)
                                                                                                                                          (("5"
                                                                                                                                            (assert)
                                                                                                                                            (("5"
                                                                                                                                              (lift-if)
                                                                                                                                              (("5"
                                                                                                                                                (assert)
                                                                                                                                                (("5"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("5"
                                                                                                                                                    (assert)
                                                                                                                                                    (("5"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("5"
                                                                                                                                                        (assert)
                                                                                                                                                        (("5"
                                                                                                                                                          (ground)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("6"
                                                                                                                                (lift-if)
                                                                                                                                (("6"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("6"
                                                                                                                                    (lift-if)
                                                                                                                                    (("6"
                                                                                                                                      (lift-if)
                                                                                                                                      (("6"
                                                                                                                                        (assert)
                                                                                                                                        (("6"
                                                                                                                                          (lift-if)
                                                                                                                                          (("6"
                                                                                                                                            (assert)
                                                                                                                                            (("6"
                                                                                                                                              (lift-if)
                                                                                                                                              (("6"
                                                                                                                                                (assert)
                                                                                                                                                (("6"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("6"
                                                                                                                                                    (assert)
                                                                                                                                                    (("6"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("6"
                                                                                                                                                        (assert)
                                                                                                                                                        (("6"
                                                                                                                                                          (lift-if)
                                                                                                                                                          (("6"
                                                                                                                                                            (assert)
                                                                                                                                                            (("6"
                                                                                                                                                              (ground)
                                                                                                                                                              nil
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("7"
                                                                                                                                (lift-if)
                                                                                                                                (("7"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("7"
                                                                                                                                    (lift-if)
                                                                                                                                    (("7"
                                                                                                                                      (lift-if)
                                                                                                                                      (("7"
                                                                                                                                        (assert)
                                                                                                                                        (("7"
                                                                                                                                          (lift-if)
                                                                                                                                          (("7"
                                                                                                                                            (assert)
                                                                                                                                            (("7"
                                                                                                                                              (lift-if)
                                                                                                                                              (("7"
                                                                                                                                                (assert)
                                                                                                                                                (("7"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("7"
                                                                                                                                                    (assert)
                                                                                                                                                    (("7"
                                                                                                                                                      (ground)
                                                                                                                                                      nil
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("8"
                                                                                                                                (lift-if)
                                                                                                                                (("8"
                                                                                                                                  (assert)
                                                                                                                                  (("8"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("8"
                                                                                                                                      (lift-if)
                                                                                                                                      (("8"
                                                                                                                                        (lift-if)
                                                                                                                                        (("8"
                                                                                                                                          (assert)
                                                                                                                                          (("8"
                                                                                                                                            (lift-if)
                                                                                                                                            (("8"
                                                                                                                                              (assert)
                                                                                                                                              (("8"
                                                                                                                                                (lift-if)
                                                                                                                                                (("8"
                                                                                                                                                  (assert)
                                                                                                                                                  (("8"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("8"
                                                                                                                                                      (assert)
                                                                                                                                                      (("8"
                                                                                                                                                        (ground)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "p(0)"
                                                                                                   "n(0)")
                                                                                                  (("2"
                                                                                                    (inst-cp
                                                                                                     -
                                                                                                     "p(1)"
                                                                                                     "n(1)")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "(-1/c)*p(2)"
                                                                                                       "n(2)")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "sig")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "nsc"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "scal_polynomial2")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "scal_polynomial2")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "sign_ext_mult")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "sign_ext_mult")
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT sign_ext(-1/c)=-1")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "sign_ext"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (propax)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 +)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   +)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "number_sign_changes"
                                                                                                                                     +)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lift-if)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (copy
                                                                                                 "hyp")
                                                                                                (("3"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "2")
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "only_root_between?")
                                                                                                    (("3"
                                                                                                      (skeep)
                                                                                                      (("3"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "r")
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (rewrite
                                                                                                             "scal_polynomial2")
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("4"
                                                                                                (skeep)
                                                                                                (("4"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "r")
                                                                                                  (("4"
                                                                                                    (assert)
                                                                                                    (("4"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("4"
                                                                                                        (rewrite
                                                                                                         "scal_polynomial2"
                                                                                                         1)
                                                                                                        (("4"
                                                                                                          (assert)
                                                                                                          (("4"
                                                                                                            (expand
                                                                                                             "*"
                                                                                                             1)
                                                                                                            (("4"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("5"
                                                                                                (expand
                                                                                                 "*"
                                                                                                 1)
                                                                                                (("5"
                                                                                                  (copy
                                                                                                   "css")
                                                                                                  (("5"
                                                                                                    (expand
                                                                                                     "constructed_sturm_sequence?"
                                                                                                     -1)
                                                                                                    (("5"
                                                                                                      (flatten)
                                                                                                      (("5"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "2")
                                                                                                        (("5"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("6"
                                                                                                (rewrite
                                                                                                 "root_degree_scal")
                                                                                                (("6"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("7"
                                                                                                (rewrite
                                                                                                 "root_degree_scal")
                                                                                                (("7"
                                                                                                  (copy
                                                                                                   "css")
                                                                                                  (("7"
                                                                                                    (lemma
                                                                                                     "constructed_sturm_sequence?")
                                                                                                    (("7"
                                                                                                      (replaces
                                                                                                       -1
                                                                                                       -2)
                                                                                                      (("7"
                                                                                                        (case
                                                                                                         "NOT (p(1) = polynomial_prod(g, k1, poly_deriv(p(0)), n(0) - 1)
                           AND n(1) = k1 + n(0) - 1)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           -2)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "polynomial(g,k1)(z)=0")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "root_degree_pos")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -3
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -4
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "root_degree_mult")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "root_degree_deriv")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "root_degree_pos")
                                                                                                                                (("2"
                                                                                                                                  (inst?)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "poly_deriv"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "root_degree_pos")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "p(0)"
                                                                                                                       "n(0)"
                                                                                                                       "z")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_tarski_basic_3-3 nil 3617988007
   ("" (skeep)
    (("" (case "NOT (p(0)(n(0))/=0 AND p(1)(n(1))/=0 AND p(2)(n(2))/=0)")
      (("1" (expand "constructed_sturm_sequence?" -2)
        (("1" (flatten)
          (("1" (inst-cp - "0")
            (("1" (inst-cp - "1")
              (("1" (inst - "2")
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil)
               ("2" (assert) nil nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (flatten)
        (("2" (label "css" -2)
          (("2" (label "hyp" -3)
            (("2" (skoletin 4)
              (("2" (flatten)
                (("2" (copy "hyp")
                  (("2" (inst-cp - "0")
                    (("2" (inst-cp - "1")
                      (("1" (inst - "2")
                        (("1" (assert)
                          (("1" (expand "only_root_between?" (-1 -2 -3))
                            (("1" (flatten)
                              (("1" (assert)
                                (("1" (inst-cp - "x")
                                  (("1" (inst - "y")
                                    (("1" (inst-cp - "x")
                                      (("1"
                                        (inst - "y")
                                        (("1"
                                          (inst-cp - "x")
                                          (("1"
                                            (inst - "y")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (hide (-1 -2 -3 -4))
                                                  (("1"
                                                    (copy "css")
                                                    (("1"
                                                      (label "igz" -1)
                                                      (("1"
                                                        (expand
                                                         "constructed_sturm_sequence?"
                                                         -1)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (copy -8)
                                                              (("1"
                                                                (hide "igz")
                                                                (("1"
                                                                  (inst - "2")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (skeep)
                                                                      (("1"
                                                                        (name
                                                                         "pd"
                                                                         "poly_divide(p(0), n(0))(p(1), n(1))(0)")
                                                                        (("1"
                                                                          (replace
                                                                           -1)
                                                                          (("1"
                                                                            (lemma
                                                                             "poly_divide_def")
                                                                            (("1"
                                                                              (inst?)
                                                                              (("1"
                                                                                (assert)
                                                                                (("1"
                                                                                  (replace
                                                                                   -2)
                                                                                  (("1"
                                                                                    (case
                                                                                     "NOT (-1/c)*polynomial(p(2), n(2)) = polynomial(pd`rem, pd`rdeg)")
                                                                                    (("1"
                                                                                      (decompose-equality
                                                                                       1)
                                                                                      (("1"
                                                                                        (decompose-equality
                                                                                         -3)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "*"
                                                                                             1)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -1
                                                                                               +)
                                                                                              (("1"
                                                                                                (rewrite
                                                                                                 "scal_polynomial2")
                                                                                                (("1"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (replace
                                                                                       -1
                                                                                       -2
                                                                                       :dir
                                                                                       rl)
                                                                                      (("2"
                                                                                        (lemma
                                                                                         "signs_swap_division")
                                                                                        (("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x"
                                                                                           "y"
                                                                                           "z"
                                                                                           "p(0)"
                                                                                           "p(1)"
                                                                                           "pd`quot"
                                                                                           "(-1/c)*p(2)"
                                                                                           "n(0)"
                                                                                           "n(1)"
                                                                                           "pd`qdeg"
                                                                                           "n(2)")
                                                                                          (("2"
                                                                                            (assert)
                                                                                            (("2"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (flatten)
                                                                                                (("1"
                                                                                                  (rewrite
                                                                                                   "scal_polynomial2")
                                                                                                  (("1"
                                                                                                    (rewrite
                                                                                                     "scal_polynomial2")
                                                                                                    (("1"
                                                                                                      (rewrite
                                                                                                       "sign_ext_mult"
                                                                                                       -1)
                                                                                                      (("1"
                                                                                                        (rewrite
                                                                                                         "sign_ext_mult"
                                                                                                         -2)
                                                                                                        (("1"
                                                                                                          (case
                                                                                                           "NOT sign_ext(-1/c)=-1")
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "sign_ext"
                                                                                                             1)
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (split
                                                                                                                   1)
                                                                                                                  (("1"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil)
                                                                                                                   ("2"
                                                                                                                    (flatten)
                                                                                                                    (("2"
                                                                                                                      (cross-mult
                                                                                                                       1)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (replace
                                                                                                             -1)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "nsc"
                                                                                                                 +)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "number_sign_changes"
                                                                                                                   +)
                                                                                                                  (("2"
                                                                                                                    (expand
                                                                                                                     "number_sign_changes"
                                                                                                                     +)
                                                                                                                    (("2"
                                                                                                                      (expand
                                                                                                                       "number_sign_changes"
                                                                                                                       +)
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (assert)
                                                                                                                            (("2"
                                                                                                                              (ground)
                                                                                                                              (("1"
                                                                                                                                (lift-if)
                                                                                                                                (("1"
                                                                                                                                  (assert)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (lift-if)
                                                                                                                                          (("1"
                                                                                                                                            (assert)
                                                                                                                                            (("1"
                                                                                                                                              (lift-if)
                                                                                                                                              (("1"
                                                                                                                                                (assert)
                                                                                                                                                (("1"
                                                                                                                                                  (ground)
                                                                                                                                                  nil
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (expand
                                                                                                                                 "sign_ext")
                                                                                                                                (("2"
                                                                                                                                  (lift-if)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (lift-if)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        (("2"
                                                                                                                                          (lift-if)
                                                                                                                                          (("2"
                                                                                                                                            (assert)
                                                                                                                                            (("2"
                                                                                                                                              (lift-if)
                                                                                                                                              (("2"
                                                                                                                                                (assert)
                                                                                                                                                (("2"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("2"
                                                                                                                                                    (assert)
                                                                                                                                                    (("2"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("2"
                                                                                                                                                        (assert)
                                                                                                                                                        (("2"
                                                                                                                                                          (ground)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("3"
                                                                                                                                (lift-if)
                                                                                                                                (("3"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("3"
                                                                                                                                    (assert)
                                                                                                                                    (("3"
                                                                                                                                      (lift-if)
                                                                                                                                      (("3"
                                                                                                                                        (assert)
                                                                                                                                        (("3"
                                                                                                                                          (lift-if)
                                                                                                                                          (("3"
                                                                                                                                            (assert)
                                                                                                                                            (("3"
                                                                                                                                              (lift-if)
                                                                                                                                              (("3"
                                                                                                                                                (assert)
                                                                                                                                                (("3"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("3"
                                                                                                                                                    (assert)
                                                                                                                                                    (("3"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("3"
                                                                                                                                                        (assert)
                                                                                                                                                        (("3"
                                                                                                                                                          (lift-if)
                                                                                                                                                          (("3"
                                                                                                                                                            (assert)
                                                                                                                                                            (("3"
                                                                                                                                                              (lift-if)
                                                                                                                                                              (("3"
                                                                                                                                                                (assert)
                                                                                                                                                                (("3"
                                                                                                                                                                  (ground)
                                                                                                                                                                  nil
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("4"
                                                                                                                                (lift-if)
                                                                                                                                (("4"
                                                                                                                                  (assert)
                                                                                                                                  (("4"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("4"
                                                                                                                                      (lift-if)
                                                                                                                                      (("4"
                                                                                                                                        (assert)
                                                                                                                                        (("4"
                                                                                                                                          (lift-if)
                                                                                                                                          (("4"
                                                                                                                                            (assert)
                                                                                                                                            (("4"
                                                                                                                                              (lift-if)
                                                                                                                                              (("4"
                                                                                                                                                (assert)
                                                                                                                                                (("4"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("4"
                                                                                                                                                    (assert)
                                                                                                                                                    (("4"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("4"
                                                                                                                                                        (assert)
                                                                                                                                                        (("4"
                                                                                                                                                          (ground)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("5"
                                                                                                                                (lift-if)
                                                                                                                                (("5"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("5"
                                                                                                                                    (lift-if)
                                                                                                                                    (("5"
                                                                                                                                      (assert)
                                                                                                                                      (("5"
                                                                                                                                        (lift-if)
                                                                                                                                        (("5"
                                                                                                                                          (assert)
                                                                                                                                          (("5"
                                                                                                                                            (lift-if)
                                                                                                                                            (("5"
                                                                                                                                              (assert)
                                                                                                                                              (("5"
                                                                                                                                                (lift-if)
                                                                                                                                                (("5"
                                                                                                                                                  (assert)
                                                                                                                                                  (("5"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("5"
                                                                                                                                                      (assert)
                                                                                                                                                      (("5"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("5"
                                                                                                                                                          (assert)
                                                                                                                                                          (("5"
                                                                                                                                                            (ground)
                                                                                                                                                            nil
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("6"
                                                                                                                                (lift-if)
                                                                                                                                (("6"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("6"
                                                                                                                                    (lift-if)
                                                                                                                                    (("6"
                                                                                                                                      (assert)
                                                                                                                                      (("6"
                                                                                                                                        (lift-if)
                                                                                                                                        (("6"
                                                                                                                                          (assert)
                                                                                                                                          (("6"
                                                                                                                                            (lift-if)
                                                                                                                                            (("6"
                                                                                                                                              (assert)
                                                                                                                                              (("6"
                                                                                                                                                (lift-if)
                                                                                                                                                (("6"
                                                                                                                                                  (assert)
                                                                                                                                                  (("6"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("6"
                                                                                                                                                      (assert)
                                                                                                                                                      (("6"
                                                                                                                                                        (lift-if)
                                                                                                                                                        (("6"
                                                                                                                                                          (assert)
                                                                                                                                                          (("6"
                                                                                                                                                            (lift-if)
                                                                                                                                                            (("6"
                                                                                                                                                              (assert)
                                                                                                                                                              (("6"
                                                                                                                                                                (ground)
                                                                                                                                                                nil
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("7"
                                                                                                                                (lift-if)
                                                                                                                                (("7"
                                                                                                                                  (expand
                                                                                                                                   "sign_ext")
                                                                                                                                  (("7"
                                                                                                                                    (lift-if)
                                                                                                                                    (("7"
                                                                                                                                      (assert)
                                                                                                                                      (("7"
                                                                                                                                        (lift-if)
                                                                                                                                        (("7"
                                                                                                                                          (assert)
                                                                                                                                          (("7"
                                                                                                                                            (lift-if)
                                                                                                                                            (("7"
                                                                                                                                              (assert)
                                                                                                                                              (("7"
                                                                                                                                                (lift-if)
                                                                                                                                                (("7"
                                                                                                                                                  (assert)
                                                                                                                                                  (("7"
                                                                                                                                                    (lift-if)
                                                                                                                                                    (("7"
                                                                                                                                                      (assert)
                                                                                                                                                      (("7"
                                                                                                                                                        (ground)
                                                                                                                                                        nil
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("8"
                                                                                                                                (lift-if)
                                                                                                                                (("8"
                                                                                                                                  (assert)
                                                                                                                                  (("8"
                                                                                                                                    (expand
                                                                                                                                     "sign_ext")
                                                                                                                                    (("8"
                                                                                                                                      (lift-if)
                                                                                                                                      (("8"
                                                                                                                                        (assert)
                                                                                                                                        (("8"
                                                                                                                                          (lift-if)
                                                                                                                                          (("8"
                                                                                                                                            (assert)
                                                                                                                                            (("8"
                                                                                                                                              (lift-if)
                                                                                                                                              (("8"
                                                                                                                                                (assert)
                                                                                                                                                (("8"
                                                                                                                                                  (lift-if)
                                                                                                                                                  (("8"
                                                                                                                                                    (assert)
                                                                                                                                                    (("8"
                                                                                                                                                      (lift-if)
                                                                                                                                                      (("8"
                                                                                                                                                        (assert)
                                                                                                                                                        (("8"
                                                                                                                                                          (ground)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (skeep
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (inst-cp
                                                                                                   -
                                                                                                   "p(0)"
                                                                                                   "n(0)")
                                                                                                  (("2"
                                                                                                    (inst-cp
                                                                                                     -
                                                                                                     "p(1)"
                                                                                                     "n(1)")
                                                                                                    (("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "(-1/c)*p(2)"
                                                                                                       "n(2)")
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (typepred
                                                                                                           "sig")
                                                                                                          (("2"
                                                                                                            (expand
                                                                                                             "nsc"
                                                                                                             +)
                                                                                                            (("2"
                                                                                                              (hide
                                                                                                               -1)
                                                                                                              (("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (rewrite
                                                                                                                   "scal_polynomial2")
                                                                                                                  (("2"
                                                                                                                    (rewrite
                                                                                                                     "scal_polynomial2")
                                                                                                                    (("2"
                                                                                                                      (rewrite
                                                                                                                       "sign_ext_mult")
                                                                                                                      (("2"
                                                                                                                        (rewrite
                                                                                                                         "sign_ext_mult")
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT sign_ext(-1/c)=-1")
                                                                                                                          (("1"
                                                                                                                            (expand
                                                                                                                             "sign_ext"
                                                                                                                             1)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (split
                                                                                                                                 1)
                                                                                                                                (("1"
                                                                                                                                  (propax)
                                                                                                                                  nil
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (flatten)
                                                                                                                                  (("2"
                                                                                                                                    (cross-mult
                                                                                                                                     1)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (replaces
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (expand
                                                                                                                                 "number_sign_changes"
                                                                                                                                 +)
                                                                                                                                (("2"
                                                                                                                                  (expand
                                                                                                                                   "number_sign_changes"
                                                                                                                                   +)
                                                                                                                                  (("2"
                                                                                                                                    (expand
                                                                                                                                     "number_sign_changes"
                                                                                                                                     +)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "sign_ext")
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (lift-if)
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              (("2"
                                                                                                                                                (lift-if)
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (ground)
                                                                                                                                                    nil
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("3"
                                                                                                (copy
                                                                                                 "hyp")
                                                                                                (("3"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "2")
                                                                                                  (("3"
                                                                                                    (expand
                                                                                                     "only_root_between?")
                                                                                                    (("3"
                                                                                                      (skeep)
                                                                                                      (("3"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "r")
                                                                                                        (("3"
                                                                                                          (assert)
                                                                                                          (("3"
                                                                                                            (rewrite
                                                                                                             "scal_polynomial2")
                                                                                                            (("3"
                                                                                                              (assert)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("4"
                                                                                                (skeep)
                                                                                                (("4"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "r")
                                                                                                  (("4"
                                                                                                    (assert)
                                                                                                    (("4"
                                                                                                      (replace
                                                                                                       -2)
                                                                                                      (("4"
                                                                                                        (rewrite
                                                                                                         "scal_polynomial2"
                                                                                                         1)
                                                                                                        (("4"
                                                                                                          (assert)
                                                                                                          (("4"
                                                                                                            (expand
                                                                                                             "*"
                                                                                                             1)
                                                                                                            (("4"
                                                                                                              (propax)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("5"
                                                                                                (expand
                                                                                                 "*"
                                                                                                 1)
                                                                                                (("5"
                                                                                                  (copy
                                                                                                   "css")
                                                                                                  (("5"
                                                                                                    (expand
                                                                                                     "constructed_sturm_sequence?"
                                                                                                     -1)
                                                                                                    (("5"
                                                                                                      (flatten)
                                                                                                      (("5"
                                                                                                        (inst
                                                                                                         -
                                                                                                         "2")
                                                                                                        (("5"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("6"
                                                                                                (rewrite
                                                                                                 "root_degree_scal")
                                                                                                (("6"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("7"
                                                                                                (rewrite
                                                                                                 "root_degree_scal")
                                                                                                (("7"
                                                                                                  (copy
                                                                                                   "css")
                                                                                                  (("7"
                                                                                                    (lemma
                                                                                                     "constructed_sturm_sequence?")
                                                                                                    (("7"
                                                                                                      (replaces
                                                                                                       -1
                                                                                                       -2)
                                                                                                      (("7"
                                                                                                        (case
                                                                                                         "NOT (p(1) = polynomial_prod(g, k1, poly_deriv(p(0)), n(0) - 1)
                           AND n(1) = k1 + n(0) - 1)")
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          nil
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (hide
                                                                                                           -2)
                                                                                                          (("2"
                                                                                                            (flatten)
                                                                                                            (("2"
                                                                                                              (case
                                                                                                               "polynomial(g,k1)(z)=0")
                                                                                                              (("1"
                                                                                                                (lemma
                                                                                                                 "root_degree_pos")
                                                                                                                (("1"
                                                                                                                  (inst?)
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (replace
                                                                                                                       -3
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (replace
                                                                                                                         -4
                                                                                                                         1)
                                                                                                                        (("1"
                                                                                                                          (rewrite
                                                                                                                           "root_degree_mult")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "root_degree_deriv")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (lemma
                                                                                                                                 "root_degree_pos")
                                                                                                                                (("2"
                                                                                                                                  (inst?)
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (expand
                                                                                                                             "poly_deriv"
                                                                                                                             1)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              nil
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (assert)
                                                                                                                (("2"
                                                                                                                  (flatten)
                                                                                                                  (("2"
                                                                                                                    (lemma
                                                                                                                     "root_degree_pos")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "p(0)"
                                                                                                                       "n(0)"
                                                                                                                       "z")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        nil
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil)
                       ("2" (assert) nil nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (/= const-decl "boolean" notequal nil)
    (number nonempty-type-decl nil numbers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (< const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (below type-eq-decl nil naturalnumbers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (TRUE const-decl "bool" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (NSC type-eq-decl nil number_sign_changes Sturm)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals)
    (poly_deriv const-decl "real" polynomials reals)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (^ const-decl "real" exponentiation nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (<= const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (sign_ext_mult formula-decl nil sign reals)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (negint_times_negint_is_posint application-judgement "posint" integers
     nil)
    (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
    (nsc skolem-const-decl "[[real, nat] -> nat]" sturmtarski nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (Sign type-eq-decl nil sign reals)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (root_degree_scal formula-decl nil more_polynomial_props reals)
    (root_degree_mult formula-decl nil more_polynomial_props reals)
    (root_degree_deriv formula-decl nil more_polynomial_props reals)
    (root_degree_pos formula-decl nil more_polynomial_props reals)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (polynomial_prod const-decl "real" polynomials reals)
    (signs_swap_division formula-decl nil more_polynomial_props reals)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (npreal_div_posreal_is_npreal application-judgement "npreal" real_types
     nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (poly_divide_def formula-decl nil polynomial_division Sturm)
    (poly_divide def-decl "DivType" polynomial_division Sturm)
    (DivType type-eq-decl nil polynomial_division Sturm)
    (only_root_between? const-decl "bool" more_polynomial_props reals))
   nil)
  (sturm_tarski_basic_3-2 nil 3617955516
   ("" (skeep)
    (("" (assert)
      (("" (flatten)
        (("" (case "NOT (p(0)(n(0))/=0 AND p(1)(n(1))/=0)")
          (("1" (expand "constructed_sturm_sequence?" -2)
            (("1" (flatten)
              (("1" (inst-cp - "0")
                (("1" (inst - "1")
                  (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
                nil))
              nil))
            nil)
           ("2" (flatten)
            (("2" (lemma "even_or_odd")
              (("2" (name "dd" "root_degree(p(0),n(0))(z)")
                (("2" (replace -1)
                  (("2" (assert)
                    (("2" (inst - "dd")
                      (("2" (case "even?(dd)")
                        (("1" (assert)
                          (("1" (lemma "root_degree_even")
                            (("1" (inst-cp - "p(0)" "n(0)" "x" "y" "z")
                              (("1" (inst - "p(1)" "n(1)" "x" "y" "z")
                                (("1" (assert)
                                  (("1" (inst-cp - "0")
                                    (("1" (inst - "1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (copy -2)
                                          (("1"
                                            (copy -2)
                                            (("1"
                                              (expand "sign_ext" (-1 -2))
                                              (("1"
                                                (expand "number_sign_changes")
                                                (("1"
                                                  (expand
                                                   "number_sign_changes")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (expand "sign_ext")
                                                      (("1"
                                                        (lift-if)
                                                        (("1"
                                                          (ground)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (lift-if)
                                                            (("2"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("3"
                                                            (lift-if)
                                                            (("3"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("4"
                                                            (lift-if)
                                                            (("4"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("5"
                                                            (lift-if)
                                                            (("5"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("6"
                                                            (lift-if)
                                                            (("6"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("7"
                                                            (lift-if)
                                                            (("7"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("8"
                                                            (lift-if)
                                                            (("8"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("9"
                                                            (lift-if)
                                                            (("9"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("10"
                                                            (lift-if)
                                                            (("10"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("11"
                                                            (lift-if)
                                                            (("11"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (expand "constructed_sturm_sequence?")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (lemma "root_degree_odd")
                          (("2" (inst-cp - "p(0)" "n(0)" "x" "y" "z")
                            (("2" (inst - "p(1)" "n(1)" "x" "y" "z")
                              (("2" (assert)
                                (("2" (inst-cp - "0")
                                  (("2" (inst - "1")
                                    (("1" (assert)
                                      (("1"
                                        (expand "sign_ext" (-1 -2))
                                        (("1"
                                          (expand "number_sign_changes")
                                          (("1"
                                            (expand "number_sign_changes")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (expand "sign_ext")
                                                (("1"
                                                  (lift-if)
                                                  (("1"
                                                    (ground)
                                                    (("1"
                                                      (lift-if)
                                                      (("1" (ground) nil nil))
                                                      nil)
                                                     ("2"
                                                      (lift-if)
                                                      (("2" (ground) nil nil))
                                                      nil)
                                                     ("3"
                                                      (lift-if)
                                                      (("3" (ground) nil nil))
                                                      nil)
                                                     ("4"
                                                      (lift-if)
                                                      (("4" (ground) nil nil))
                                                      nil)
                                                     ("5"
                                                      (lift-if)
                                                      (("5" (ground) nil nil))
                                                      nil)
                                                     ("6"
                                                      (lift-if)
                                                      (("6" (ground) nil nil))
                                                      nil)
                                                     ("7"
                                                      (lift-if)
                                                      (("7" (ground) nil nil))
                                                      nil)
                                                     ("8"
                                                      (lift-if)
                                                      (("8" (ground) nil nil))
                                                      nil)
                                                     ("9"
                                                      (lift-if)
                                                      (("9" (ground) nil nil))
                                                      nil)
                                                     ("10"
                                                      (lift-if)
                                                      (("10"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil)
                                                     ("11"
                                                      (lift-if)
                                                      (("11"
                                                        (ground)
                                                        nil
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2"
                                      (expand "constructed_sturm_sequence?")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((root_degree_odd formula-decl nil more_polynomial_props reals)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (root_degree_even formula-decl nil more_polynomial_props reals)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (poly_deriv const-decl "real" polynomials reals)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals))
   nil)
  (sturm_tarski_basic_3-1 nil 3617955499 ("" (postpone) nil nil) nil shostak))
 (sturm_tarski_basic_TCC1 0
  (sturm_tarski_basic_TCC1-1 nil 3617953557 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (only_root_between? const-decl "bool" more_polynomial_props reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (sturm_tarski_basic subtype "(number_fields.-)(sturmtarski.m, 1)" "nat")))
 (sturm_tarski_basic 0
  (sturm_tarski_basic-3 "" 3790099173
   (""
    (case "FORALL (g: [nat -> real], k: nat, m: posnat, n: [nat -> nat],
                                                 p: [nat -> [nat -> real]], x, y, z: real,kp,dd:nat):
                                           (constructed_sturm_sequence?(p, n, g, k, m) AND
                                             (FORALL (j: below(m)): only_root_between?(p(j), n(j), x, y)(z)) AND dd+1<=kp+1 AND root_degree(p(dd+1),n(dd+1))(z) = default_root_deg(p,n,g,k,m)(z) AND kp+1<m)
                                            IMPLIES
                                            number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                dd+1)`num
                                             -
                                             number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                 dd+1)`num
                                             =
                                             (IF polynomial(p(0), n(0))(z) /= 0 OR polynomial(g, k)(z) = 0
                                                THEN 0
                                              ELSIF polynomial(g, k)(z) > 0 THEN 1
                                              ELSE -1
                                              ENDIF)")
    (("1" (skeep)
      (("1" (inst - "g" "k" "m" "n" "p" "x" "y" "z" "m-2" "m-2")
        (("1" (assert)
          (("1" (ground)
            (("1" (hide 2)
              (("1" (name "dd" "default_root_deg(p, n, g, k, m)(z)")
                (("1" (replace -1)
                  (("1" (lemma "default_root_deg_def")
                    (("1" (inst?)
                      (("1" (replace -2)
                        (("1" (assert)
                          (("1" (expand "default_root_degree?")
                            (("1" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "constructed_sturm_sequence?") (("2" (assert) nil nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "kp")
        (("1" (assert)
          (("1" (skeep)
            (("1" (label "css" -1)
              (("1" (label "hyp" -2)
                (("1" (case "NOT dd = 0")
                  (("1" (assert) nil nil)
                   ("2" (replace -1)
                    (("2" (assert)
                      (("2" (name "DF" "default_root_deg(p, n, g, k, m)(z)")
                        (("2" (lemma "default_root_deg_def")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2" (replace -2)
                                (("2" (expand "default_root_degree?")
                                  (("2" (flatten)
                                    (("2" (split -)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (lemma "sturm_tarski_basic_2")
                                            (("1"
                                              (insteep -1 :but (("k1" "k")))
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (lemma "root_degree_pos")
                                          (("2"
                                            (inst - "p(0)" "n(0)" "z")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (case "p(0)(n(0))/=0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (lemma
                                                       "sturm_tarski_basic_1")
                                                      (("1"
                                                        (insteep
                                                         -1
                                                         :but
                                                         (("k1" "k")))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace -9)
                                                            (("1"
                                                              (replace -1 +)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext"
                                                                 +)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (copy "css")
                                                  (("2"
                                                    (expand
                                                     "constructed_sturm_sequence?"
                                                     -1)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (inst - "0")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (flatten)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (lemma "sturm_tarski_basic_2")
                                            (("3"
                                              (insteep -1 :but (("k1" "k")))
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skolem 1 "dd")
          (("2" (flatten)
            (("2" (skeep)
              (("2"
                (case "NOT (p(0)(n(0))/=0 AND p(1)(n(1))/=0 AND p(2)(n(2))/=0)")
                (("1" (hide -1)
                  (("1" (expand "constructed_sturm_sequence?")
                    (("1" (flatten)
                      (("1" (inst-cp - "0")
                        (("1" (inst-cp - "1")
                          (("1" (inst - "2")
                            (("1" (assert) nil nil) ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (label "css" -2)
                    (("2" (label "hyp" -3)
                      (("2" (case "NOT dd_1=dd+1")
                        (("1" (insteep -1)
                          (("1" (assert)
                            (("1" (replace "hyp") (("1" (propax) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (replace -1)
                          (("2" (assert)
                            (("2"
                              (case "NOT (p(dd)(n(dd))/=0 AND p(1+dd)(n(1+dd))/=0 AND p(2+dd)(n(2+dd))/=0)")
                              (("1" (hide -1)
                                (("1" (expand "constructed_sturm_sequence?")
                                  (("1" (flatten)
                                    (("1" (inst-cp - "dd")
                                      (("1"
                                        (inst-cp - "1+dd")
                                        (("1"
                                          (inst - "2+dd")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert)
                                (("2" (flatten)
                                  (("2" (assert)
                                    (("2"
                                      (name
                                       "DF"
                                       "default_root_deg(p, n, g, k, m)(z)")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (invoke (name "xyz" "%1") (! 7 2))
                                            (("2"
                                              (replace -1)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (copy "hyp")
                                                  (("2"
                                                    (inst-cp - "2+dd")
                                                    (("2"
                                                      (inst - "1+dd")
                                                      (("2"
                                                        (expand
                                                         "only_root_between?"
                                                         (-1 -2))
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (hide (-1 -2))
                                                            (("2"
                                                              (inst-cp - "x")
                                                              (("2"
                                                                (inst - "y")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst-cp
                                                                       -
                                                                       "x")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "y")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (case
                                                                               "root_degree(p(1+dd),n(1+dd))(z)=DF")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "g"
                                                                                 "k"
                                                                                 "m"
                                                                                 "n"
                                                                                 "p"
                                                                                 "x"
                                                                                 "y"
                                                                                 "z"
                                                                                 "dd")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     "hyp")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "number_sign_changes"
                                                                                         +)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "number_sign_changes_lastnz")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "number_sign_changes_lastnz")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "even_or_odd")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "DF")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "even?(DF)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "root_degree_even")
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "p(1+dd)"
                                                                                                           "n(1+dd)"
                                                                                                           "x"
                                                                                                           "y"
                                                                                                           "z")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(2+dd)"
                                                                                                             "n(2+dd)"
                                                                                                             "x"
                                                                                                             "y"
                                                                                                             "z")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (inst-cp
                                                                                                                 "hyp"
                                                                                                                 "1+dd")
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   "hyp"
                                                                                                                   "2+dd")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sign_ext")
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "root_degree_odd")
                                                                                                        (("2"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "p(1+dd)"
                                                                                                           "n(1+dd)"
                                                                                                           "x"
                                                                                                           "y"
                                                                                                           "z")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(2+dd)"
                                                                                                             "n(2+dd)"
                                                                                                             "x"
                                                                                                             "y"
                                                                                                             "z")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst-cp
                                                                                                                 "hyp"
                                                                                                                 "1+dd")
                                                                                                                (("2"
                                                                                                                  (inst-cp
                                                                                                                   "hyp"
                                                                                                                   "2+dd")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "sign_ext")
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (lift-if)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (ground)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "root_degree(p(dd),n(dd))(z)=DF")
                                                                                (("1"
                                                                                  (case
                                                                                   "dd = 0")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (split
                                                                                           -5)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "sturm_tarski_basic_3")
                                                                                                  (("1"
                                                                                                    (insteep
                                                                                                     -1
                                                                                                     :but
                                                                                                     (("k1"
                                                                                                       "k")))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "DF")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "default_root_deg"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "root_degree_pos")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "max")
                                                                                                            (("1"
                                                                                                              (lift-if)
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "DF")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "default_root_deg"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "root_degree_pos")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "max"
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (lift-if)
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (label
                                                                                     "hyp2"
                                                                                     -7)
                                                                                    (("2"
                                                                                      (insteep
                                                                                       -
                                                                                       :but
                                                                                       (("dd_1"
                                                                                         "dd-1")))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           "hyp")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (copy
                                                                                               "css")
                                                                                              (("1"
                                                                                                (label
                                                                                                 "igz"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "constructed_sturm_sequence?"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (copy
                                                                                                       -8)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         "igz")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "dd+2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (skeep
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (name
                                                                                                                 "pd"
                                                                                                                 "poly_divide(p(dd), n(dd))(p(1 + dd), n(1 + dd))(0)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "NOT polynomial((-1/c)*p(2 + dd), n(2 + dd)) = polynomial(pd`rem, pd`rdeg)")
                                                                                                                    (("1"
                                                                                                                      (decompose-equality
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "scal_polynomial2")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "scal_polynomial2")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (lemma
                                                                                                                       "poly_divide_def")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "signs_swap_division")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -3
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "x"
                                                                                                                                   "y"
                                                                                                                                   "z"
                                                                                                                                   "p(dd)"
                                                                                                                                   "p(1+dd)"
                                                                                                                                   "pd`quot"
                                                                                                                                   "(-1/c)*p(2+dd)"
                                                                                                                                   "n(dd)"
                                                                                                                                   "n(1+dd)"
                                                                                                                                   "pd`qdeg"
                                                                                                                                   "n(2+dd)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (copy
                                                                                                                                       "hyp")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "dd")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "only_root_between?"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (inst-cp
                                                                                                                                               -
                                                                                                                                               "x")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "y")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "scal_polynomial2")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "scal_polynomial2")
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "sign_ext_mult")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "sign_ext_mult")
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT sign_ext(-1/c)=-1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "sign_ext")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (ground)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (cross-mult
                                                                                                                                                                               1)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "number_sign_changes"
                                                                                                                                                                         +)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "number_sign_changes"
                                                                                                                                                                           +)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "number_sign_changes_lastnz")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "number_sign_changes_lastnz")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sign_ext"
                                                                                                                                                                                 (-1
                                                                                                                                                                                  +))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "sign_ext"
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (ground)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (ground)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                (ground)
                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("4"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("5"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("5"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("5"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("5"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("6"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("6"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("6"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("6"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("7"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("7"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("7"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("7"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("7"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("8"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("8"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("8"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("8"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("8"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("9"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("9"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("9"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("9"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("9"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("10"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("10"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("10"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("10"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("10"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("10"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("11"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("11"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("11"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("11"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("11"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("12"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("12"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("12"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("12"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("12"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("12"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("13"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("13"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("13"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("13"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("13"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("14"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("14"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("14"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("14"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("14"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("14"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("15"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("15"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("15"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("15"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("15"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("16"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("16"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("16"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("16"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("16"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("17"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("17"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("17"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("17"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("17"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("18"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("18"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("18"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("18"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("18"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("18"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("19"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("19"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("19"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("19"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("19"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("20"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("20"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("20"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("20"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("20"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("20"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("21"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("21"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("21"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("21"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("21"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("22"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("22"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("22"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("22"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("22"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("22"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("23"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("23"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("23"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("23"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("23"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("24"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("24"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("24"
                                                                                                                                                                                                          (ground)
                                                                                                                                                                                                          (("24"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("24"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              nil
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (ground)
                                                                                                                                                        (("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst-cp
                                                                                                                                                             -
                                                                                                                                                             "p(dd)"
                                                                                                                                                             "n(dd)")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst-cp
                                                                                                                                                               -
                                                                                                                                                               "p(1+dd)"
                                                                                                                                                               "n(1+dd)")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "(-1/c)*p(2+dd)"
                                                                                                                                                                 "n(2+dd)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "sig")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "scal_polynomial2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "scal_polynomial2")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "sign_ext_mult")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "sign_ext_mult")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT sign_ext(-1/c)=-1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sign_ext")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (ground)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (cross-mult
                                                                                                                                                                                       1)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replaces
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "number_sign_changes"
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "number_sign_changes"
                                                                                                                                                                                     +)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "number_sign_changes_lastnz")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "number_sign_changes_lastnz")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "sign_ext")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (ground)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (inst
                                                                                                                                                         "hyp"
                                                                                                                                                         "1+dd")
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("4"
                                                                                                                                                        (copy
                                                                                                                                                         "hyp")
                                                                                                                                                        (("4"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "2+dd")
                                                                                                                                                          (("4"
                                                                                                                                                            (expand
                                                                                                                                                             "only_root_between?"
                                                                                                                                                             (-1
                                                                                                                                                              1))
                                                                                                                                                            (("4"
                                                                                                                                                              (skeep)
                                                                                                                                                              (("4"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "r")
                                                                                                                                                                (("4"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("4"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "scal_polynomial2")
                                                                                                                                                                    (("4"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("5"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("6"
                                                                                                                                                        (expand
                                                                                                                                                         "*")
                                                                                                                                                        (("6"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("7"
                                                                                                                                                        (rewrite
                                                                                                                                                         "root_degree_scal")
                                                                                                                                                        (("7"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("8"
                                                                                                                                                        (rewrite
                                                                                                                                                         "root_degree_scal")
                                                                                                                                                        (("8"
                                                                                                                                                          (assert)
                                                                                                                                                          (("8"
                                                                                                                                                            (lemma
                                                                                                                                                             "constructed_sturm_seq_root_degree_lower_bound")
                                                                                                                                                            (("8"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("8"
                                                                                                                                                                (assert)
                                                                                                                                                                (("8"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "1+dd")
                                                                                                                                                                  (("8"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "default_root_deg_def")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -5
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "default_root_degree?")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "dd")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak)
  (sturm_tarski_basic-2 nil 3617959850
   (""
    (case "FORALL (g: [nat -> real], k: nat, m: posnat, n: [nat -> nat],
                                                 p: [nat -> [nat -> real]], x, y, z: real,kp,dd:nat):
                                           (constructed_sturm_sequence?(p, n, g, k, m) AND
                                             (FORALL (j: below(m)): only_root_between?(p(j), n(j), x, y)(z)) AND dd+1<=kp+1 AND root_degree(p(dd+1),n(dd+1))(z) = default_root_deg(p,n,g,k,m)(z) AND kp+1<m)
                                            IMPLIES
                                            number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                                                dd+1)`num
                                             -
                                             number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                                                 dd+1)`num
                                             =
                                             (IF polynomial(p(0), n(0))(z) /= 0 OR polynomial(g, k)(z) = 0
                                                THEN 0
                                              ELSIF polynomial(g, k)(z) > 0 THEN 1
                                              ELSE -1
                                              ENDIF)")
    (("1" (skeep)
      (("1" (inst - "g" "k" "m" "n" "p" "x" "y" "z" "m-2" "m-2")
        (("1" (assert)
          (("1" (ground)
            (("1" (hide 2)
              (("1" (name "dd" "default_root_deg(p, n, g, k, m)(z)")
                (("1" (replace -1)
                  (("1" (lemma "default_root_deg_def")
                    (("1" (inst?)
                      (("1" (replace -2)
                        (("1" (assert)
                          (("1" (expand "default_root_degree?")
                            (("1" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "constructed_sturm_sequence?") (("2" (assert) nil nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "kp")
        (("1" (assert)
          (("1" (skeep)
            (("1" (label "css" -1)
              (("1" (label "hyp" -2)
                (("1" (case "NOT dd = 0")
                  (("1" (assert) nil nil)
                   ("2" (replace -1)
                    (("2" (assert)
                      (("2" (name "DF" "default_root_deg(p, n, g, k, m)(z)")
                        (("2" (lemma "default_root_deg_def")
                          (("2" (inst?)
                            (("2" (assert)
                              (("2" (replace -2)
                                (("2" (expand "default_root_degree?")
                                  (("2" (flatten)
                                    (("2" (split -)
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (lemma "sturm_tarski_basic_2")
                                            (("1"
                                              (insteep -1 :but (("k1" "k")))
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (flatten)
                                        (("2"
                                          (lemma "root_degree_pos")
                                          (("2"
                                            (inst - "p(0)" "n(0)" "z")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (case "p(0)(n(0))/=0")
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (flatten)
                                                    (("1"
                                                      (lemma
                                                       "sturm_tarski_basic_1")
                                                      (("1"
                                                        (insteep
                                                         -1
                                                         :but
                                                         (("k1" "k")))
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (replace -9)
                                                            (("1"
                                                              (replace -1 +)
                                                              (("1"
                                                                (expand
                                                                 "sign_ext"
                                                                 +)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        nil
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (copy "css")
                                                  (("2"
                                                    (expand
                                                     "constructed_sturm_sequence?"
                                                     -1)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (inst - "0")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (flatten)
                                        (("3"
                                          (assert)
                                          (("3"
                                            (lemma "sturm_tarski_basic_2")
                                            (("3"
                                              (insteep -1 :but (("k1" "k")))
                                              (("3" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (skolem 1 "dd")
          (("2" (flatten)
            (("2" (skeep)
              (("2"
                (case "NOT (p(0)(n(0))/=0 AND p(1)(n(1))/=0 AND p(2)(n(2))/=0)")
                (("1" (hide -1)
                  (("1" (expand "constructed_sturm_sequence?")
                    (("1" (flatten)
                      (("1" (inst-cp - "0")
                        (("1" (inst-cp - "1")
                          (("1" (inst - "2")
                            (("1" (assert) nil nil) ("2" (assert) nil nil))
                            nil)
                           ("2" (assert) nil nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (flatten)
                  (("2" (label "css" -2)
                    (("2" (label "hyp" -3)
                      (("2" (case "NOT dd_1=dd+1")
                        (("1" (insteep -1)
                          (("1" (assert)
                            (("1" (replace "hyp") (("1" (propax) nil nil))
                              nil))
                            nil))
                          nil)
                         ("2" (replace -1)
                          (("2" (assert)
                            (("2"
                              (case "NOT (p(dd)(n(dd))/=0 AND p(1+dd)(n(1+dd))/=0 AND p(2+dd)(n(2+dd))/=0)")
                              (("1" (hide -1)
                                (("1" (expand "constructed_sturm_sequence?")
                                  (("1" (flatten)
                                    (("1" (inst-cp - "dd")
                                      (("1"
                                        (inst-cp - "1+dd")
                                        (("1"
                                          (inst - "2+dd")
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert)
                                (("2" (flatten)
                                  (("2" (assert)
                                    (("2"
                                      (name
                                       "DF"
                                       "default_root_deg(p, n, g, k, m)(z)")
                                      (("2"
                                        (replace -1)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (invoke (name "xyz" "%1") (! 7 2))
                                            (("2"
                                              (replace -1)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (copy "hyp")
                                                  (("2"
                                                    (inst-cp - "2+dd")
                                                    (("2"
                                                      (inst - "1+dd")
                                                      (("2"
                                                        (expand
                                                         "only_root_between?"
                                                         (-1 -2))
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (hide (-1 -2))
                                                            (("2"
                                                              (inst-cp - "x")
                                                              (("2"
                                                                (inst - "y")
                                                                (("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (inst-cp
                                                                       -
                                                                       "x")
                                                                      (("2"
                                                                        (inst
                                                                         -
                                                                         "y")
                                                                        (("2"
                                                                          (assert)
                                                                          (("2"
                                                                            (flatten)
                                                                            (("2"
                                                                              (case
                                                                               "root_degree(p(1+dd),n(1+dd))(z)=DF")
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "g"
                                                                                 "k"
                                                                                 "m"
                                                                                 "n"
                                                                                 "p"
                                                                                 "x"
                                                                                 "y"
                                                                                 "z"
                                                                                 "dd")
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (replace
                                                                                     "hyp")
                                                                                    (("1"
                                                                                      (replace
                                                                                       -4)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "number_sign_changes"
                                                                                         +)
                                                                                        (("1"
                                                                                          (rewrite
                                                                                           "number_sign_changes_lastnz")
                                                                                          (("1"
                                                                                            (rewrite
                                                                                             "number_sign_changes_lastnz")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "even_or_odd")
                                                                                                (("1"
                                                                                                  (inst
                                                                                                   -
                                                                                                   "DF")
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "even?(DF)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (lemma
                                                                                                         "root_degree_even")
                                                                                                        (("1"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "p(1+dd)"
                                                                                                           "n(1+dd)"
                                                                                                           "x"
                                                                                                           "y"
                                                                                                           "z")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(2+dd)"
                                                                                                             "n(2+dd)"
                                                                                                             "x"
                                                                                                             "y"
                                                                                                             "z")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (inst-cp
                                                                                                                 "hyp"
                                                                                                                 "1+dd")
                                                                                                                (("1"
                                                                                                                  (inst-cp
                                                                                                                   "hyp"
                                                                                                                   "2+dd")
                                                                                                                  (("1"
                                                                                                                    (assert)
                                                                                                                    (("1"
                                                                                                                      (expand
                                                                                                                       "sign_ext")
                                                                                                                      (("1"
                                                                                                                        (lift-if)
                                                                                                                        (("1"
                                                                                                                          (lift-if)
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (lift-if)
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                (("1"
                                                                                                                                  (lift-if)
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    (("1"
                                                                                                                                      (lift-if)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (ground)
                                                                                                                                          nil
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (assert)
                                                                                                      (("2"
                                                                                                        (lemma
                                                                                                         "root_degree_odd")
                                                                                                        (("2"
                                                                                                          (inst-cp
                                                                                                           -
                                                                                                           "p(1+dd)"
                                                                                                           "n(1+dd)"
                                                                                                           "x"
                                                                                                           "y"
                                                                                                           "z")
                                                                                                          (("2"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "p(2+dd)"
                                                                                                             "n(2+dd)"
                                                                                                             "x"
                                                                                                             "y"
                                                                                                             "z")
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (inst-cp
                                                                                                                 "hyp"
                                                                                                                 "1+dd")
                                                                                                                (("2"
                                                                                                                  (inst-cp
                                                                                                                   "hyp"
                                                                                                                   "2+dd")
                                                                                                                  (("2"
                                                                                                                    (assert)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      (("2"
                                                                                                                        (expand
                                                                                                                         "sign_ext")
                                                                                                                        (("2"
                                                                                                                          (lift-if)
                                                                                                                          (("2"
                                                                                                                            (lift-if)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (lift-if)
                                                                                                                                (("2"
                                                                                                                                  (assert)
                                                                                                                                  (("2"
                                                                                                                                    (lift-if)
                                                                                                                                    (("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (lift-if)
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (ground)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (case
                                                                                 "root_degree(p(dd),n(dd))(z)=DF")
                                                                                (("1"
                                                                                  (case
                                                                                   "dd = 0")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -1)
                                                                                    (("1"
                                                                                      (assert)
                                                                                      (("1"
                                                                                        (lift-if)
                                                                                        (("1"
                                                                                          (split
                                                                                           -5)
                                                                                          (("1"
                                                                                            (flatten)
                                                                                            (("1"
                                                                                              (replace
                                                                                               -2
                                                                                               :dir
                                                                                               rl)
                                                                                              (("1"
                                                                                                (assert)
                                                                                                (("1"
                                                                                                  (lemma
                                                                                                   "sturm_tarski_basic_3")
                                                                                                  (("1"
                                                                                                    (insteep
                                                                                                     -1
                                                                                                     :but
                                                                                                     (("k1"
                                                                                                       "k")))
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      (("1"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil)
                                                                                           ("2"
                                                                                            (flatten)
                                                                                            (("2"
                                                                                              (split
                                                                                               -)
                                                                                              (("1"
                                                                                                (lemma
                                                                                                 "DF")
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "default_root_deg"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    (("1"
                                                                                                      (lemma
                                                                                                       "root_degree_pos")
                                                                                                      (("1"
                                                                                                        (inst?)
                                                                                                        (("1"
                                                                                                          (assert)
                                                                                                          (("1"
                                                                                                            (expand
                                                                                                             "max")
                                                                                                            (("1"
                                                                                                              (assert)
                                                                                                              (("1"
                                                                                                                (lift-if)
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil)
                                                                                               ("2"
                                                                                                (flatten)
                                                                                                (("2"
                                                                                                  (replace
                                                                                                   -1
                                                                                                   :dir
                                                                                                   rl)
                                                                                                  (("2"
                                                                                                    (lemma
                                                                                                     "DF")
                                                                                                    (("2"
                                                                                                      (expand
                                                                                                       "default_root_deg"
                                                                                                       -1)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (lemma
                                                                                                           "root_degree_pos")
                                                                                                          (("2"
                                                                                                            (inst?)
                                                                                                            (("2"
                                                                                                              (assert)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "max"
                                                                                                                 -2)
                                                                                                                (("2"
                                                                                                                  (assert)
                                                                                                                  (("2"
                                                                                                                    (lift-if)
                                                                                                                    (("2"
                                                                                                                      (assert)
                                                                                                                      nil
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (label
                                                                                     "hyp2"
                                                                                     -7)
                                                                                    (("2"
                                                                                      (insteep
                                                                                       -
                                                                                       :but
                                                                                       (("dd_1"
                                                                                         "dd-1")))
                                                                                      (("1"
                                                                                        (assert)
                                                                                        (("1"
                                                                                          (replace
                                                                                           "hyp")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -4)
                                                                                            (("1"
                                                                                              (copy
                                                                                               "css")
                                                                                              (("1"
                                                                                                (label
                                                                                                 "igz"
                                                                                                 -1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "constructed_sturm_sequence?"
                                                                                                   -1)
                                                                                                  (("1"
                                                                                                    (flatten)
                                                                                                    (("1"
                                                                                                      (copy
                                                                                                       -8)
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         "igz")
                                                                                                        (("1"
                                                                                                          (inst
                                                                                                           -
                                                                                                           "dd+2")
                                                                                                          (("1"
                                                                                                            (assert)
                                                                                                            (("1"
                                                                                                              (skeep
                                                                                                               -1)
                                                                                                              (("1"
                                                                                                                (name
                                                                                                                 "pd"
                                                                                                                 "poly_divide(p(dd), n(dd))(p(1 + dd), n(1 + dd))(0)")
                                                                                                                (("1"
                                                                                                                  (replace
                                                                                                                   -1)
                                                                                                                  (("1"
                                                                                                                    (case
                                                                                                                     "NOT polynomial((-1/c)*p(2 + dd), n(2 + dd)) = polynomial(pd`rem, pd`rdeg)")
                                                                                                                    (("1"
                                                                                                                      (decompose-equality
                                                                                                                       1)
                                                                                                                      (("1"
                                                                                                                        (decompose-equality
                                                                                                                         -2)
                                                                                                                        (("1"
                                                                                                                          (inst
                                                                                                                           -
                                                                                                                           "x!1")
                                                                                                                          (("1"
                                                                                                                            (rewrite
                                                                                                                             "scal_polynomial2")
                                                                                                                            (("1"
                                                                                                                              (rewrite
                                                                                                                               "scal_polynomial2")
                                                                                                                              (("1"
                                                                                                                                (assert)
                                                                                                                                nil
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil)
                                                                                                                     ("2"
                                                                                                                      (lemma
                                                                                                                       "poly_divide_def")
                                                                                                                      (("2"
                                                                                                                        (inst?)
                                                                                                                        (("2"
                                                                                                                          (assert)
                                                                                                                          (("2"
                                                                                                                            (replace
                                                                                                                             -3)
                                                                                                                            (("2"
                                                                                                                              (lemma
                                                                                                                               "signs_swap_division")
                                                                                                                              (("2"
                                                                                                                                (replace
                                                                                                                                 -3
                                                                                                                                 :dir
                                                                                                                                 rl)
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "x"
                                                                                                                                   "y"
                                                                                                                                   "z"
                                                                                                                                   "p(dd)"
                                                                                                                                   "p(1+dd)"
                                                                                                                                   "pd`quot"
                                                                                                                                   "(-1/c)*p(2+dd)"
                                                                                                                                   "n(dd)"
                                                                                                                                   "n(1+dd)"
                                                                                                                                   "pd`qdeg"
                                                                                                                                   "n(2+dd)")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (copy
                                                                                                                                       "hyp")
                                                                                                                                      (("2"
                                                                                                                                        (inst
                                                                                                                                         -
                                                                                                                                         "dd")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (expand
                                                                                                                                             "only_root_between?"
                                                                                                                                             -1)
                                                                                                                                            (("2"
                                                                                                                                              (inst-cp
                                                                                                                                               -
                                                                                                                                               "x")
                                                                                                                                              (("2"
                                                                                                                                                (inst
                                                                                                                                                 -
                                                                                                                                                 "y")
                                                                                                                                                (("2"
                                                                                                                                                  (assert)
                                                                                                                                                  (("2"
                                                                                                                                                    (flatten)
                                                                                                                                                    (("2"
                                                                                                                                                      (split
                                                                                                                                                       -1)
                                                                                                                                                      (("1"
                                                                                                                                                        (flatten)
                                                                                                                                                        (("1"
                                                                                                                                                          (rewrite
                                                                                                                                                           "scal_polynomial2")
                                                                                                                                                          (("1"
                                                                                                                                                            (rewrite
                                                                                                                                                             "scal_polynomial2")
                                                                                                                                                            (("1"
                                                                                                                                                              (rewrite
                                                                                                                                                               "sign_ext_mult")
                                                                                                                                                              (("1"
                                                                                                                                                                (rewrite
                                                                                                                                                                 "sign_ext_mult")
                                                                                                                                                                (("1"
                                                                                                                                                                  (case
                                                                                                                                                                   "NOT sign_ext(-1/c)=-1")
                                                                                                                                                                  (("1"
                                                                                                                                                                    (hide-all-but
                                                                                                                                                                     1)
                                                                                                                                                                    (("1"
                                                                                                                                                                      (expand
                                                                                                                                                                       "sign_ext")
                                                                                                                                                                      (("1"
                                                                                                                                                                        (lift-if)
                                                                                                                                                                        (("1"
                                                                                                                                                                          (assert)
                                                                                                                                                                          (("1"
                                                                                                                                                                            (ground)
                                                                                                                                                                            (("1"
                                                                                                                                                                              (cross-mult
                                                                                                                                                                               1)
                                                                                                                                                                              nil
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil)
                                                                                                                                                                   ("2"
                                                                                                                                                                    (replaces
                                                                                                                                                                     -1)
                                                                                                                                                                    (("2"
                                                                                                                                                                      (assert)
                                                                                                                                                                      (("2"
                                                                                                                                                                        (expand
                                                                                                                                                                         "number_sign_changes"
                                                                                                                                                                         +)
                                                                                                                                                                        (("2"
                                                                                                                                                                          (expand
                                                                                                                                                                           "number_sign_changes"
                                                                                                                                                                           +)
                                                                                                                                                                          (("2"
                                                                                                                                                                            (rewrite
                                                                                                                                                                             "number_sign_changes_lastnz")
                                                                                                                                                                            (("2"
                                                                                                                                                                              (rewrite
                                                                                                                                                                               "number_sign_changes_lastnz")
                                                                                                                                                                              (("2"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sign_ext"
                                                                                                                                                                                 (-1
                                                                                                                                                                                  +))
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (assert)
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (assert)
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (expand
                                                                                                                                                                                               "sign_ext"
                                                                                                                                                                                               -2)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (ground)
                                                                                                                                                                                                    (("1"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("1"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("1"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("1"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("1"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("1"
                                                                                                                                                                                                                (ground)
                                                                                                                                                                                                                (("1"
                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                  (("1"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("2"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("2"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("2"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("2"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("2"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("3"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("3"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("3"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("3"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("3"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("3"
                                                                                                                                                                                                                (ground)
                                                                                                                                                                                                                (("3"
                                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                                  (("3"
                                                                                                                                                                                                                    (assert)
                                                                                                                                                                                                                    nil
                                                                                                                                                                                                                    nil))
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("4"
                                                                                                                                                                                                      (lift-if)
                                                                                                                                                                                                      (("4"
                                                                                                                                                                                                        (assert)
                                                                                                                                                                                                        (("4"
                                                                                                                                                                                                          (lift-if)
                                                                                                                                                                                                          (("4"
                                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                                            (("4"
                                                                                                                                                                                                              (assert)
                                                                                                                                                                                                              (("4"
                                                                                                                                                                                                                (lift-if)
                                                                                                                                                                                                                (("4"
                                                                                                                                                                                                                  (assert)
                                                                                                                                                                                                                  nil
                                                                                                                                                                                                                  nil))
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("5"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("5"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("5"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("5"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("5"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("5"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("6"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("6"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("6"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("6"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("6"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("6"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("7"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("7"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("7"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("7"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("7"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("7"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("8"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("8"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("8"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("8"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("8"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("8"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("9"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("9"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("9"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("9"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("9"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("9"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("10"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("10"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("10"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("10"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("10"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("10"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("11"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("11"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("11"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("11"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("11"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("11"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("12"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("12"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("12"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("12"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("12"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("12"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("13"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("13"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("13"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("13"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("13"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("13"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("14"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("14"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("14"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("14"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("14"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("14"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("15"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("15"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("15"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("15"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("15"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("15"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("16"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("16"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("16"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("16"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("16"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("16"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("17"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("17"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("17"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("17"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("17"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("17"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("18"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("18"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("18"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("18"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("18"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("18"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("19"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("19"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("19"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("19"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("19"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("19"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("20"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("20"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("20"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("20"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("20"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("20"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("21"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("21"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("21"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("21"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("21"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("21"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("22"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("22"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("22"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("22"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("22"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("22"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("23"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("23"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("23"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("23"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("23"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("23"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil)
                                                                                                                                                                                                     ("24"
                                                                                                                                                                                                      (ground)
                                                                                                                                                                                                      (("24"
                                                                                                                                                                                                        (lift-if)
                                                                                                                                                                                                        (("24"
                                                                                                                                                                                                          (assert)
                                                                                                                                                                                                          (("24"
                                                                                                                                                                                                            (ground)
                                                                                                                                                                                                            (("24"
                                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                                              (("24"
                                                                                                                                                                                                                (assert)
                                                                                                                                                                                                                nil
                                                                                                                                                                                                                nil))
                                                                                                                                                                                                              nil))
                                                                                                                                                                                                            nil))
                                                                                                                                                                                                          nil))
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("2"
                                                                                                                                                        (ground)
                                                                                                                                                        (("2"
                                                                                                                                                          (skeep)
                                                                                                                                                          (("2"
                                                                                                                                                            (inst-cp
                                                                                                                                                             -
                                                                                                                                                             "p(dd)"
                                                                                                                                                             "n(dd)")
                                                                                                                                                            (("2"
                                                                                                                                                              (inst-cp
                                                                                                                                                               -
                                                                                                                                                               "p(1+dd)"
                                                                                                                                                               "n(1+dd)")
                                                                                                                                                              (("2"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "(-1/c)*p(2+dd)"
                                                                                                                                                                 "n(2+dd)")
                                                                                                                                                                (("2"
                                                                                                                                                                  (typepred
                                                                                                                                                                   "sig")
                                                                                                                                                                  (("2"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "scal_polynomial2")
                                                                                                                                                                    (("2"
                                                                                                                                                                      (rewrite
                                                                                                                                                                       "scal_polynomial2")
                                                                                                                                                                      (("2"
                                                                                                                                                                        (rewrite
                                                                                                                                                                         "sign_ext_mult")
                                                                                                                                                                        (("2"
                                                                                                                                                                          (rewrite
                                                                                                                                                                           "sign_ext_mult")
                                                                                                                                                                          (("2"
                                                                                                                                                                            (case
                                                                                                                                                                             "NOT sign_ext(-1/c)=-1")
                                                                                                                                                                            (("1"
                                                                                                                                                                              (hide-all-but
                                                                                                                                                                               1)
                                                                                                                                                                              (("1"
                                                                                                                                                                                (expand
                                                                                                                                                                                 "sign_ext")
                                                                                                                                                                                (("1"
                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                  (("1"
                                                                                                                                                                                    (ground)
                                                                                                                                                                                    (("1"
                                                                                                                                                                                      (cross-mult
                                                                                                                                                                                       1)
                                                                                                                                                                                      nil
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil)
                                                                                                                                                                             ("2"
                                                                                                                                                                              (replaces
                                                                                                                                                                               -1)
                                                                                                                                                                              (("2"
                                                                                                                                                                                (assert)
                                                                                                                                                                                (("2"
                                                                                                                                                                                  (expand
                                                                                                                                                                                   "number_sign_changes"
                                                                                                                                                                                   +)
                                                                                                                                                                                  (("2"
                                                                                                                                                                                    (expand
                                                                                                                                                                                     "number_sign_changes"
                                                                                                                                                                                     +)
                                                                                                                                                                                    (("2"
                                                                                                                                                                                      (rewrite
                                                                                                                                                                                       "number_sign_changes_lastnz")
                                                                                                                                                                                      (("2"
                                                                                                                                                                                        (rewrite
                                                                                                                                                                                         "number_sign_changes_lastnz")
                                                                                                                                                                                        (("2"
                                                                                                                                                                                          (expand
                                                                                                                                                                                           "sign_ext")
                                                                                                                                                                                          (("2"
                                                                                                                                                                                            (lift-if)
                                                                                                                                                                                            (("2"
                                                                                                                                                                                              (lift-if)
                                                                                                                                                                                              (("2"
                                                                                                                                                                                                (assert)
                                                                                                                                                                                                (("2"
                                                                                                                                                                                                  (lift-if)
                                                                                                                                                                                                  (("2"
                                                                                                                                                                                                    (lift-if)
                                                                                                                                                                                                    (("2"
                                                                                                                                                                                                      (assert)
                                                                                                                                                                                                      (("2"
                                                                                                                                                                                                        (ground)
                                                                                                                                                                                                        nil
                                                                                                                                                                                                        nil))
                                                                                                                                                                                                      nil))
                                                                                                                                                                                                    nil))
                                                                                                                                                                                                  nil))
                                                                                                                                                                                                nil))
                                                                                                                                                                                              nil))
                                                                                                                                                                                            nil))
                                                                                                                                                                                          nil))
                                                                                                                                                                                        nil))
                                                                                                                                                                                      nil))
                                                                                                                                                                                    nil))
                                                                                                                                                                                  nil))
                                                                                                                                                                                nil))
                                                                                                                                                                              nil))
                                                                                                                                                                            nil))
                                                                                                                                                                          nil))
                                                                                                                                                                        nil))
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("3"
                                                                                                                                                        (inst
                                                                                                                                                         "hyp"
                                                                                                                                                         "1+dd")
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("4"
                                                                                                                                                        (copy
                                                                                                                                                         "hyp")
                                                                                                                                                        (("4"
                                                                                                                                                          (inst
                                                                                                                                                           -
                                                                                                                                                           "2+dd")
                                                                                                                                                          (("4"
                                                                                                                                                            (expand
                                                                                                                                                             "only_root_between?"
                                                                                                                                                             (-1
                                                                                                                                                              1))
                                                                                                                                                            (("4"
                                                                                                                                                              (skeep)
                                                                                                                                                              (("4"
                                                                                                                                                                (inst
                                                                                                                                                                 -
                                                                                                                                                                 "r")
                                                                                                                                                                (("4"
                                                                                                                                                                  (assert)
                                                                                                                                                                  (("4"
                                                                                                                                                                    (rewrite
                                                                                                                                                                     "scal_polynomial2")
                                                                                                                                                                    (("4"
                                                                                                                                                                      (assert)
                                                                                                                                                                      nil
                                                                                                                                                                      nil))
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("5"
                                                                                                                                                        (propax)
                                                                                                                                                        nil
                                                                                                                                                        nil)
                                                                                                                                                       ("6"
                                                                                                                                                        (expand
                                                                                                                                                         "*")
                                                                                                                                                        (("6"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("7"
                                                                                                                                                        (rewrite
                                                                                                                                                         "root_degree_scal")
                                                                                                                                                        (("7"
                                                                                                                                                          (assert)
                                                                                                                                                          nil
                                                                                                                                                          nil))
                                                                                                                                                        nil)
                                                                                                                                                       ("8"
                                                                                                                                                        (rewrite
                                                                                                                                                         "root_degree_scal")
                                                                                                                                                        (("8"
                                                                                                                                                          (assert)
                                                                                                                                                          (("8"
                                                                                                                                                            (lemma
                                                                                                                                                             "constructed_sturm_seq_root_degree_lower_bound")
                                                                                                                                                            (("8"
                                                                                                                                                              (inst?)
                                                                                                                                                              (("8"
                                                                                                                                                                (assert)
                                                                                                                                                                (("8"
                                                                                                                                                                  (inst
                                                                                                                                                                   -
                                                                                                                                                                   "1+dd")
                                                                                                                                                                  (("8"
                                                                                                                                                                    (assert)
                                                                                                                                                                    nil
                                                                                                                                                                    nil))
                                                                                                                                                                  nil))
                                                                                                                                                                nil))
                                                                                                                                                              nil))
                                                                                                                                                            nil))
                                                                                                                                                          nil))
                                                                                                                                                        nil))
                                                                                                                                                      nil))
                                                                                                                                                    nil))
                                                                                                                                                  nil))
                                                                                                                                                nil))
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil)
                                                                                 ("2"
                                                                                  (assert)
                                                                                  (("2"
                                                                                    (lemma
                                                                                     "default_root_deg_def")
                                                                                    (("2"
                                                                                      (inst?)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (replace
                                                                                           -5
                                                                                           -1)
                                                                                          (("2"
                                                                                            (expand
                                                                                             "default_root_degree?")
                                                                                            (("2"
                                                                                              (flatten)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 -
                                                                                                 "dd")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  nil
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (number_sign_changes_lastnz formula-decl nil number_sign_changes Sturm)
    (minus_real_is_real application-judgement "real" reals nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (root_degree_odd formula-decl nil more_polynomial_props reals)
    (root_degree_even formula-decl nil more_polynomial_props reals)
    (even? const-decl "bool" integers nil)
    (even_or_odd formula-decl nil naturalnumbers nil)
    (even_plus_even_is_even application-judgement "even_int" integers nil)
    (sturm_tarski_basic_3 formula-decl nil sturmtarski nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (int_max application-judgement "{k: int | i <= k AND j <= k}" real_defs
     nil)
    (rat_max application-judgement "{s: rat | s >= q AND s >= r}" real_defs
     nil)
    (DF skolem-const-decl "nat" sturmtarski nil)
    (dd skolem-const-decl "nat" sturmtarski nil)
    (poly_divide_def formula-decl nil polynomial_division Sturm)
    (signs_swap_division formula-decl nil more_polynomial_props reals)
    (sign_ext_mult formula-decl nil sign reals)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (div_mult_pos_lt1 formula-decl nil real_props nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (odd_times_odd_is_odd application-judgement "odd_int" integers nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (TRUE const-decl "bool" booleans nil)
    (nzint nonempty-type-eq-decl nil integers nil)
    (Sign type-eq-decl nil sign reals)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers nil)
    (root_degree_scal formula-decl nil more_polynomial_props reals)
    (constructed_sturm_seq_root_degree_lower_bound formula-decl nil
     sturmtarski nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (scal_polynomial2 formula-decl nil polynomials reals)
    (even_minus_even_is_even application-judgement "even_int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[T -> real]" real_fun_ops reals)
    (nzreal_div_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (poly_divide def-decl "DivType" polynomial_division Sturm)
    (DivType type-eq-decl nil polynomial_division Sturm)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (odd_plus_even_is_odd application-judgement "odd_int" integers nil)
    (sturm_tarski_basic_2 formula-decl nil sturmtarski nil)
    (root_degree_pos formula-decl nil more_polynomial_props reals)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm_tarski_basic_1 formula-decl nil sturmtarski nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (default_root_degree? const-decl "bool" sturmtarski nil)
    (default_root_deg_def formula-decl nil sturmtarski nil)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (sequence type-eq-decl nil sequences nil)
    (only_root_between? const-decl "bool" more_polynomial_props reals)
    (<= const-decl "bool" reals nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (/= const-decl "boolean" notequal nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (^ const-decl "real" exponentiation nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (poly_deriv const-decl "real" polynomials reals)
    (root_degree def-decl "{m |
   m <= n AND
    (a(n) /= 0 IMPLIES
      ((EXISTS (b: [nat -> real]):
          (FORALL (x: real):
             polynomial(a, n)(x) = (x - y) ^ m * polynomial(b, n - m)(x))
           AND polynomial(b, n - m)(y) /= 0 AND b(n - m) /= 0)
        AND
        (polynomial(a, n)(y) = 0 IMPLIES m > 0) AND
         ((n > 0 AND m > 0) IMPLIES
           (EXISTS (q: [nat -> real]):
              (FORALL (x: real):
                 polynomial(poly_deriv(a), n - 1)(x) =
                  (x - y) ^ (m - 1) * polynomial(q, n - m)(x))
               AND polynomial(q, n - m)(y) /= 0))))}" more_polynomial_props
     reals)
    (default_root_deg const-decl "nat" sturmtarski nil)
    (NSC type-eq-decl nil number_sign_changes Sturm)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (- const-decl "[numfield -> numfield]" number_fields nil))
   nil)
  (sturm_tarski_basic-1 nil 3617728230
   (""
    (case "FORALL (g: [nat -> real], k: nat, m: posnat, n: [nat -> nat],
                     p: [nat -> [nat -> real]], x, y, z: real,kp,dd:nat):
               (constructed_sturm_sequence?(p, n, g, k, m) AND
                 (FORALL (j: below(m)): only_root_between?(p(j), n(j), x, y)(z)) AND dd+1<=kp+1 AND root_degree(p(dd+1),n(dd+1))(z) = default_root_deg(p,n,g,k,m)(z))
                IMPLIES
                number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x),
                                    dd+1)`num
                 -
                 number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(y),
                                     dd+1)`num
                 =
                 (IF polynomial(p(0), n(0))(z) /= 0 OR polynomial(g, k)(z) = 0
                    THEN 0
                  ELSIF polynomial(g, k)(z) > 0 THEN 1
                  ELSE -1
                  ENDIF)")
    (("1" (skeep)
      (("1" (inst - "g" "k" "m" "n" "p" "x" "y" "z" "m-2" "m-2")
        (("1" (assert)
          (("1" (ground)
            (("1" (hide 2)
              (("1" (name "dd" "default_root_deg(p, n, g, k, m)(z)")
                (("1" (replace -1)
                  (("1" (lemma "default_root_deg_def")
                    (("1" (inst?)
                      (("1" (replace -2)
                        (("1" (assert)
                          (("1" (expand "default_root_degree?")
                            (("1" (propax) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (expand "constructed_sturm_sequence?") (("2" (assert) nil nil))
          nil))
        nil))
      nil)
     ("2" (hide 2)
      (("2" (induct "kp")
        (("1" (assert)
          (("1" (skeep)
            (("1" (case "NOT dd = 0")
              (("1" (assert) nil nil)
               ("2" (replace -1)
                (("2" (assert)
                  (("2" (name "DF" "default_root_deg(p, n, g, k, m)(z)")
                    (("2" (lemma "default_root_deg_def")
                      (("2" (inst?)
                        (("2" (assert)
                          (("2" (replace -2)
                            (("2" (expand "default_root_degree?")
                              (("2" (flatten)
                                (("2" (split -)
                                  (("1" (flatten)
                                    (("1" (assert)
                                      (("1"
                                        (lemma "sturm_tarski_basic_3")
                                        (("1"
                                          (insteep -1 :but (("k1" "k")))
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (flatten)
                                    (("2" (lemma "root_degree_pos")
                                      (("2"
                                        (inst - "p(0)" "n(0)" "z")
                                        (("2"
                                          (assert)
                                          (("2"
                                            (case "p(0)(n(0))/=0")
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (lemma
                                                   "sturm_tarski_basic_1")
                                                  (("1"
                                                    (insteep
                                                     -1
                                                     :but
                                                     (("k1" "k")))
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (replace -9)
                                                        (("1"
                                                          (replace -1 +)
                                                          (("1"
                                                            (expand
                                                             "sign_ext"
                                                             +)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (lift-if)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2" (postpone) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (postpone) nil nil))
        nil))
      nil))
    nil)
   nil shostak))
 (constructed_sturm_roots_between_enum_TCC1 0
  (constructed_sturm_roots_between_enum_TCC1-1 nil 3618063982
   ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (constructed_sturm_roots_between_enum subtype "0"
    "naturalnumbers.below(sturmtarski.K)")))
 (constructed_sturm_roots_between_enum_TCC2 0
  (constructed_sturm_roots_between_enum_TCC2-1 nil 3618063982
   ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (constructed_sturm_roots_between_enum subtype
    "(number_fields.-)(sturmtarski.K, 1)"
    "naturalnumbers.below(sturmtarski.K)")))
 (constructed_sturm_roots_between_enum 0
  (constructed_sturm_roots_between_enum-2 nil 3618064055
   ("" (skeep)
    ((""
      (name "IGGY"
            "LAMBDA (b:real): ((x<=b AND b<=y) AND (b=x OR b=y OR (EXISTS (j:nat): j<=m-1 AND polynomial(p(j), n(j))(b) = 0)))")
      (("" (case "is_finite[real](IGGY)")
        (("1" (copy -1)
          (("1" (lemma "card_bij_inv[real]")
            (("1" (name "K" "card(IGGY)")
              (("1" (inst - "K" "IGGY")
                (("1" (assert)
                  (("1" (label "fbij" -2)
                    (("1" (skeep)
                      (("1" (name "newenum" "sort_array[K,real,<=].sort(f)")
                        (("1" (case "K>=2")
                          (("1" (inst + "K" "newenum")
                            (("1"
                              (case "NOT (FORALL (i, j: below(K)): i < j IMPLIES newenum(i) < newenum(j))")
                              (("1" (hide 2)
                                (("1" (skeep)
                                  (("1" (case "NOT newenum(i) = newenum(j)")
                                    (("1" (assert)
                                      (("1"
                                        (typepred "newenum")
                                        (("1"
                                          (expand "sorted?")
                                          (("1"
                                            (inst - "i" "j")
                                            (("1" (assert) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (typepred "newenum")
                                      (("2"
                                        (expand "permutation_of?")
                                        (("2"
                                          (skosimp*)
                                          (("2"
                                            (expand "bijective?" -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (expand "surjective?")
                                                (("2"
                                                  (inst-cp - "j")
                                                  (("2"
                                                    (inst - "i")
                                                    (("2"
                                                      (skosimp*)
                                                      (("2"
                                                        (inst-cp - "x!1")
                                                        (("2"
                                                          (inst - "x!2")
                                                          (("2"
                                                            (replace -2)
                                                            (("2"
                                                              (replace -3)
                                                              (("2"
                                                                (copy "fbij")
                                                                (("2"
                                                                  (expand
                                                                   "bijective?"
                                                                   -1)
                                                                  (("2"
                                                                    (flatten)
                                                                    (("2"
                                                                      (expand
                                                                       "injective?"
                                                                       -1)
                                                                      (("2"
                                                                        (inst-cp
                                                                         -
                                                                         "x!1"
                                                                         "x!2")
                                                                        (("2"
                                                                          (assert)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (replace -1)
                                (("2" (case "NOT newenum(0)=x")
                                  (("1" (hide 2)
                                    (("1" (copy "fbij")
                                      (("1"
                                        (expand "bijective?" -1)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "surjective?" -2)
                                            (("1"
                                              (inst - "x")
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (typepred "newenum")
                                                  (("1"
                                                    (expand "permutation_of?")
                                                    (("1"
                                                      (skeep -1)
                                                      (("1"
                                                        (copy -2)
                                                        (("1"
                                                          (inst - "x!1")
                                                          (("1"
                                                            (replace -6)
                                                            (("1"
                                                              (inst
                                                               -
                                                               "0"
                                                               "f_1(x!1)")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace
                                                                   -1
                                                                   :dir
                                                                   rl)
                                                                  (("1"
                                                                    (expand
                                                                     "bijective?"
                                                                     -2)
                                                                    (("1"
                                                                      (flatten)
                                                                      (("1"
                                                                        (expand
                                                                         "surjective?"
                                                                         -3)
                                                                        (("1"
                                                                          (inst
                                                                           -
                                                                           "0")
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "x!2")
                                                                              (("1"
                                                                                (replace
                                                                                 -3)
                                                                                (("1"
                                                                                  (replace
                                                                                   -4
                                                                                   :dir
                                                                                   rl)
                                                                                  (("1"
                                                                                    (assert)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "f(x!2)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "IGGY"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (propax)
                                                                                          nil
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "IGGY" 1)
                                                (("2" (propax) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (assert)
                                    (("2" (case "NOT newenum(K-1) = y")
                                      (("1"
                                        (hide 2)
                                        (("1"
                                          (copy "fbij")
                                          (("1"
                                            (expand "bijective?" -1)
                                            (("1"
                                              (flatten)
                                              (("1"
                                                (expand "surjective?" -2)
                                                (("1"
                                                  (inst - "y")
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (typepred "newenum")
                                                      (("1"
                                                        (expand
                                                         "permutation_of?")
                                                        (("1"
                                                          (skeep -1)
                                                          (("1"
                                                            (copy -2)
                                                            (("1"
                                                              (inst - "x!1")
                                                              (("1"
                                                                (replace -6)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "f_1(x!1)"
                                                                   "K-1")
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (replace
                                                                       -1
                                                                       :dir
                                                                       rl)
                                                                      (("1"
                                                                        (expand
                                                                         "bijective?"
                                                                         -2)
                                                                        (("1"
                                                                          (flatten)
                                                                          (("1"
                                                                            (expand
                                                                             "surjective?"
                                                                             -3)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "K-1")
                                                                              (("1"
                                                                                (skosimp*)
                                                                                (("1"
                                                                                  (inst
                                                                                   -
                                                                                   "x!2")
                                                                                  (("1"
                                                                                    (replace
                                                                                     -3)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "f(x!2)")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "IGGY"
                                                                                         -1)
                                                                                        (("1"
                                                                                          (flatten)
                                                                                          (("1"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "IGGY" 1)
                                                    (("2" (propax) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (assert)
                                        (("2"
                                          (skeep)
                                          (("2"
                                            (copy "fbij")
                                            (("2"
                                              (expand "bijective?" -1)
                                              (("2"
                                                (flatten)
                                                (("2"
                                                  (expand "surjective?" -2)
                                                  (("2"
                                                    (case "NOT IGGY(b)")
                                                    (("1"
                                                      (expand "IGGY" 1)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (flatten)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (inst + "j")
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst - "b")
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (typepred
                                                             "newenum")
                                                            (("2"
                                                              (expand
                                                               "permutation_of?")
                                                              (("2"
                                                                (skeep -1)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("2"
                                                                    (inst
                                                                     +
                                                                     "f_1(x!1)")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (expand "bijective?")
                              (("2" (flatten)
                                (("2" (expand "surjective?")
                                  (("2" (inst-cp - "x")
                                    (("1" (inst - "y")
                                      (("1"
                                        (skosimp*)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (expand "IGGY" 1)
                                        (("2" (propax) nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "IGGY" 1)
                                      (("2" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (propax) nil nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2"
            (name "IGGYk" "LAMBDA (k:nat): (LAMBDA (b: real):
                                                               ((x <= b AND b <= y) AND
                                                                 (b = x OR
                                                                   b = y OR
                                                                    (EXISTS (j: nat):
                                                                       j <= k-1 AND polynomial(p(j), n(j))(b) = 0))))")
            (("2"
              (case "FORALL (k:nat): k<=m IMPLIES is_finite[real](IGGYk(k))")
              (("1" (inst - "m")
                (("1" (case "IGGYk(m) = IGGY")
                  (("1" (assert) nil nil)
                   ("2" (decompose-equality 1)
                    (("2" (expand "IGGYk" 1)
                      (("2" (expand "IGGY" 1) (("2" (propax) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (induct "k")
                (("1" (assert)
                  (("1"
                    (case "NOT (IGGYk(0) = (LAMBDA (b:real): b = x OR b = y))")
                    (("1" (decompose-equality 1)
                      (("1" (expand "IGGYk" 1)
                        (("1" (hide (-1 -2 -4))
                          (("1" (iff) (("1" (grind) nil nil)) nil)) nil))
                        nil))
                      nil)
                     ("2" (replace -1)
                      (("2" (hide-all-but (-4 1))
                        (("2" (rewrite "is_finite_surj" :dir rl)
                          (("2"
                            (inst + "2"
                             "LAMBDA (i:below(2)): IF i = 0 THEN x ELSE y ENDIF")
                            (("2" (expand "surjective?")
                              (("2" (skosimp*)
                                (("2" (typepred "y!1")
                                  (("2" (ground)
                                    (("1" (inst + "0")
                                      (("1" (assert) nil nil)) nil)
                                     ("2" (inst + "1")
                                      (("2" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (hide 2)
                  (("2" (skeep)
                    (("2"
                      (name "Sjp" "(LAMBDA (b: real):
                                                                                       ((x <= b AND b <= y) AND
                                                                                         ((j <= m-1 AND polynomial(p(j), n(j))(b) = 0))))")
                      (("2" (case "IGGYk(1+j) = union(IGGYk(j),Sjp)")
                        (("1" (lemma "finite_union[real]")
                          (("1" (inst - "IGGYk(j)" "Sjp")
                            (("1" (assert) nil nil)
                             ("2" (assert)
                              (("2"
                                (name "Sj" "(LAMBDA (b: real):
                                                                                                                       polynomial(p(j), n(j))(b) = 0)")
                                (("2" (case "is_finite[real](Sj)")
                                  (("1" (lemma "finite_subset[real]")
                                    (("1" (inst - "Sj" "Sjp")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (hide-all-but 1)
                                          (("1"
                                            (expand "subset?")
                                            (("1"
                                              (expand "Sjp")
                                              (("1"
                                                (expand "Sj")
                                                (("1"
                                                  (grind
                                                   :exclude
                                                   "polynomial")
                                                  nil
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2"
                                    (case "FORALL (kk:nat,a:[nat->real]): (EXISTS (i:nat):i<=kk AND a(i)/=0) IMPLIES is_finite[real](LAMBDA (b:real): polynomial(a,kk)(b)=0)")
                                    (("1" (inst - "n(j)" "p(j)")
                                      (("1"
                                        (split -)
                                        (("1" (assert) nil nil)
                                         ("2"
                                          (inst + "n(j)")
                                          (("2"
                                            (assert)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (expand
                                                   "constructed_sturm_sequence?")
                                                  (("2"
                                                    (flatten)
                                                    (("2"
                                                      (inst - "j")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (hide-all-but 1)
                                      (("2"
                                        (induct "kk")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (skeep -1)
                                            (("1"
                                              (case "i = 0")
                                              (("1"
                                                (replaces -1)
                                                (("1"
                                                  (hide -)
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (lemma
                                                       "finite_emptyset[real]")
                                                      (("1"
                                                        (invoke
                                                         (case "%1 = %2")
                                                         (! -1 1)
                                                         (! 2 1))
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (hide (-1 3))
                                                          (("2"
                                                            (decompose-equality
                                                             1)
                                                            (("2"
                                                              (expand
                                                               "polynomial")
                                                              (("2"
                                                                (expand
                                                                 "sigma")
                                                                (("2"
                                                                  (expand
                                                                   "sigma")
                                                                  (("2"
                                                                    (expand
                                                                     "emptyset")
                                                                    (("2"
                                                                      (propax)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (skeep)
                                          (("2"
                                            (skeep)
                                            (("2"
                                              (case
                                               "EXISTS (z:real): polynomial(a,j!1+1)(z)=0")
                                              (("1"
                                                (skeep -1)
                                                (("1"
                                                  (lemma
                                                   "polynomial_zero_factor")
                                                  (("1"
                                                    (inst?)
                                                    (("1"
                                                      (replace -2)
                                                      (("1"
                                                        (skosimp -1)
                                                        (("1"
                                                          (invoke
                                                           (name "IP" "%1")
                                                           (! 1 1))
                                                          (("1"
                                                            (replace -1)
                                                            (("1"
                                                              (inst -4 "g!1")
                                                              (("1"
                                                                (split -4)
                                                                (("1"
                                                                  (invoke
                                                                   (name
                                                                    "IG"
                                                                    "%1")
                                                                   (! -1 1))
                                                                  (("1"
                                                                    (replace
                                                                     -1)
                                                                    (("1"
                                                                      (case
                                                                       "IP = union(IG,singleton(z))")
                                                                      (("1"
                                                                        (lemma
                                                                         "finite_union[real]")
                                                                        (("1"
                                                                          (inst?)
                                                                          (("1"
                                                                            (assert)
                                                                            nil
                                                                            nil))
                                                                          nil))
                                                                        nil)
                                                                       ("2"
                                                                        (hide
                                                                         2)
                                                                        (("2"
                                                                          (decompose-equality
                                                                           1)
                                                                          (("2"
                                                                            (iff)
                                                                            (("2"
                                                                              (expand
                                                                               "IP"
                                                                               +)
                                                                              (("2"
                                                                                (expand
                                                                                 "IG"
                                                                                 +)
                                                                                (("2"
                                                                                  (expand
                                                                                   "union"
                                                                                   +)
                                                                                  (("2"
                                                                                    (expand
                                                                                     "singleton"
                                                                                     +)
                                                                                    (("2"
                                                                                      (expand
                                                                                       "member"
                                                                                       +)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        (("1"
                                                                                          (inst-cp
                                                                                           -
                                                                                           "x!1")
                                                                                          (("1"
                                                                                            (replace
                                                                                             -1)
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "x!1")
                                                                                          (("2"
                                                                                            (replaces
                                                                                             -1)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (lemma
                                                                   "polynomial_eq_coeff")
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "a"
                                                                     "LAMBDA (i:nat): 0"
                                                                     "j!1+1")
                                                                    (("2"
                                                                      (flatten)
                                                                      (("2"
                                                                        (hide
                                                                         -2)
                                                                        (("2"
                                                                          (split
                                                                           -1)
                                                                          (("1"
                                                                            (skosimp*)
                                                                            (("1"
                                                                              (inst
                                                                               -
                                                                               "i!1")
                                                                              (("1"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (decompose-equality
                                                                             1)
                                                                            (("2"
                                                                              (case
                                                                               "polynomial(LAMBDA (i: nat): 0, 1 + j!1)(x!1) = 0")
                                                                              (("1"
                                                                                (replaces
                                                                                 -1)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (inst
                                                                                     -
                                                                                     "x!1")
                                                                                    (("1"
                                                                                      (case
                                                                                       "polynomial(g!1, j!1)(x!1) = 0")
                                                                                      (("1"
                                                                                        (assert)
                                                                                        nil
                                                                                        nil)
                                                                                       ("2"
                                                                                        (expand
                                                                                         "polynomial"
                                                                                         1)
                                                                                        (("2"
                                                                                          (rewrite
                                                                                           "sigma_restrict_eq_0")
                                                                                          (("2"
                                                                                            (hide
                                                                                             2)
                                                                                            (("2"
                                                                                              (skosimp*)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "i!1")
                                                                                                (("2"
                                                                                                  (lift-if)
                                                                                                  (("2"
                                                                                                    (ground)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil)
                                                                               ("2"
                                                                                (expand
                                                                                 "polynomial"
                                                                                 1)
                                                                                (("2"
                                                                                  (rewrite
                                                                                   "sigma_restrict_eq_0")
                                                                                  (("2"
                                                                                    (skosimp*)
                                                                                    (("2"
                                                                                      (lift-if)
                                                                                      (("2"
                                                                                        (ground)
                                                                                        nil
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (lemma
                                                 "finite_emptyset[real]")
                                                (("2"
                                                  (invoke
                                                   (case "%1 = %2")
                                                   (! -1 1)
                                                   (! 2 1))
                                                  (("1" (assert) nil nil)
                                                   ("2"
                                                    (decompose-equality 1)
                                                    (("2"
                                                      (iff)
                                                      (("2"
                                                        (expand "emptyset" 1)
                                                        (("2"
                                                          (inst + "x!1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("3" (assert) nil nil))
                            nil))
                          nil)
                         ("2" (assert)
                          (("2" (decompose-equality 1)
                            (("2" (iff)
                              (("2" (expand "union" +)
                                (("2" (expand "member" +)
                                  (("2" (split +)
                                    (("1" (flatten)
                                      (("1"
                                        (expand "IGGYk" -1)
                                        (("1"
                                          (flatten)
                                          (("1"
                                            (expand "IGGYk" 1)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (case "NOT j!1 = j")
                                                      (("1"
                                                        (inst + "j!1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "Sjp" +)
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (flatten)
                                      (("2"
                                        (split -)
                                        (("1"
                                          (expand "IGGYk" (-1 1))
                                          (("1"
                                            (flatten)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (flatten)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (inst + "j!1")
                                                      (("1" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (expand "Sjp" -1)
                                          (("2"
                                            (expand "IGGYk" 1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (assert)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (assert)
                                                    (("2"
                                                      (inst + "j")
                                                      (("2" (assert) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((polynomial const-decl "[real -> real]" polynomials reals)
    (sequence type-eq-decl nil sequences nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (<= const-decl "bool" reals nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (IGGYk skolem-const-decl "[nat -> [real -> boolean]]" sturmtarski nil)
    (finite_union judgement-tcc nil finite_sets nil)
    (Sj skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (finite_subset formula-decl nil finite_sets nil)
    (polynomial_zero_factor formula-decl nil polynomials reals)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (polynomial_eq_coeff formula-decl nil polynomials reals)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (i!1 skolem-const-decl "nat" sturmtarski nil)
    (j!1 skolem-const-decl "nat" sturmtarski nil)
    (T_low type-eq-decl nil sigma reals) (T_high type-eq-decl nil sigma reals)
    (^ const-decl "real" exponentiation nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sigma_restrict_eq_0 formula-decl nil sigma reals)
    (subrange type-eq-decl nil integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (nonempty_singleton_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (nonempty_union2 application-judgement "(nonempty?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (IG skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (IP skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (finite_emptyset judgement-tcc nil finite_sets nil)
    (sigma def-decl "real" sigma reals)
    (finite_emptyset name-judgement "finite_set" finite_sets nil)
    (emptyset const-decl "set" sets nil) (TRUE const-decl "bool" booleans nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (/= const-decl "boolean" notequal nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (Sjp skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (j skolem-const-decl "nat" sturmtarski nil)
    (union const-decl "set" sets nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (is_finite_surj formula-decl nil finite_sets nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (pred type-eq-decl nil defined_types nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (injective? const-decl "bool" functions nil)
    (surjective? const-decl "bool" functions nil)
    (bijective? const-decl "bool" functions nil)
    (x skolem-const-decl "real" sturmtarski nil)
    (y skolem-const-decl "real" sturmtarski nil)
    (b skolem-const-decl "real" sturmtarski nil)
    (K skolem-const-decl "{n: nat | n = Card[real](IGGY)}" sturmtarski nil)
    (IGGY skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (below type-eq-decl nil nat_types nil)
    (sort const-decl "{a | permutation_of?(A, a) AND sorted?(a)}"
      sort_array structures)
    (sorted? const-decl "bool" sort_array structures)
    (permutation_of? const-decl "bool" permutations structures)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (card_bij_inv formula-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil))
   nil)
  (constructed_sturm_roots_between_enum-1 nil 3618064000
   ("" (postpone) nil nil) nil shostak))
 (Sol_TCC1 0
  (Sol_TCC1-1 nil 3618072629
   ("" (skeep)
    (("" (lemma "finite_subset[real]")
      ((""
        (name "B" "{r: real |
                     polynomial(a, m)(r) = 0}")
        (("" (case "is_finite[real](B)")
          (("1" (invoke (name "AA" "%1") (! 1 1))
            (("1" (replace -1)
              (("1" (inst - "B" "AA")
                (("1" (assert)
                  (("1" (expand "subset?" 1)
                    (("1" (skosimp*)
                      (("1" (expand "member")
                        (("1" (expand "AA" -4)
                          (("1" (expand "B" 1) (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil)
           ("2" (hide (-2 2))
            (("2" (lemma "poly_roots_enumerated")
              (("2" (inst - "a" "m")
                (("2" (split -1)
                  (("1" (assert)
                    (("1" (skeep -1)
                      (("1" (lemma "is_finite_surj[real]")
                        (("1" (inst?)
                          (("1" (assert)
                            (("1" (hide 2)
                              (("1" (inst + "M" "rootseq")
                                (("1" (expand "surjective?")
                                  (("1" (skosimp*)
                                    (("1" (inst -2 "y!1")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (split -2)
                                          (("1"
                                            (skosimp*)
                                            (("1"
                                              (inst + "i!1")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "y!1")
                                            (("2"
                                              (expand "B" -1)
                                              (("2" (propax) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (skosimp*)
                                  (("2" (expand "B" 1)
                                    (("2" (inst - "x1!1") nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (inst + "m") (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (finite_subset formula-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (subset_is_partial_order name-judgement "(partial_order?[set[T]])"
     sets_lemmas nil)
    (AA skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (member const-decl "bool" sets nil) (subset? const-decl "bool" sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (B skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (<= const-decl "bool" reals nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (poly_roots_enumerated formula-decl nil more_polynomial_props reals)
    (surjective? const-decl "bool" functions nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (below type-eq-decl nil nat_types nil)
    (rootseq skolem-const-decl "[below(M) -> real]" sturmtarski nil)
    (below type-eq-decl nil naturalnumbers nil)
    (M skolem-const-decl "nat" sturmtarski nil)
    (< const-decl "bool" reals nil)
    (is_finite_surj formula-decl nil finite_sets nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil))
   nil
   (Sol subtype
    "{r: reals.real | booleans.AND(polynomials.polynomial(sturmtarski.a, sturmtarski.m)(r) = 0, booleans.AND(sturmtarski.rel(polynomials.polynomial(sturmtarski.g, sturmtarski.k)(r), 0), booleans.AND((booleans.IMPLIES(sturmtarski.bbelow, reals.<=(sturmtarski.x, r))), (booleans.IMPLIES(sturmtarski.babove, reals.<=(r, sturmtarski.y))))))}"
    "finite_set[real]")))
 (Sol_union_top 0
  (Sol_union_top-1 nil 3618074165
   ("" (skeep)
    (("" (decompose-equality 2)
      (("" (expand "union")
        (("" (expand "member")
          (("" (expand "Sol") (("" (iff) (("" (ground) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   ((real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil) (union const-decl "set" sets nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (/= const-decl "boolean" notequal nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (member const-decl "bool" sets nil))
   shostak))
 (NSol_TCC1 0
  (NSol_TCC1-1 nil 3618073287
   ("" (skeep)
    (("" (lemma "card_bij_inv[real]")
      ((""
        (inst - "card(Sol(a, m, g, k, rel, x, y, bbelow, babove))"
         "Sol(a, m, g, k, rel, x, y, bbelow, babove)")
        (("" (assert) nil nil)) nil))
      nil))
    nil)
   ((real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (card_bij_inv formula-decl nil finite_sets nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (/= const-decl "boolean" notequal nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil))
   nil
   (NSol subtype
    "finite_sets[real].card(sturmtarski.Sol(sturmtarski.a, sturmtarski.m, sturmtarski.g, sturmtarski.k, sturmtarski.rel, sturmtarski.x, sturmtarski.y, sturmtarski.bbelow, sturmtarski.babove))"
    "{d: naturalnumbers.nat | EXISTS (enumsol: [naturalnumbers.below(d) -> (sturmtarski.Sol(sturmtarski.a, sturmtarski.m, sturmtarski.g, sturmtarski.k, sturmtarski.rel, sturmtarski.x, sturmtarski.y, sturmtarski.bbelow, sturmtarski.babove))]): functions[naturalnumbers.below(d), (sturmtarski.Sol(sturmtarski.a, sturmtarski.m, sturmtarski.g, sturmtarski.k, sturmtarski.rel, sturmtarski.x, sturmtarski.y, sturmtarski.bbelow, sturmtarski.babove))].bijective?(enumsol)}")))
 (NSol_union_top 0
  (NSol_union_top-1 nil 3618074372
   ("" (skeep)
    (("" (expand "NSol")
      (("" (lemma "Sol_union_top")
        ((""
          (inst - "a" "true" "babove" "bbelow" "true" "g" "k" "m" "rel" "x"
           "y" "z")
          (("" (assert)
            (("" (both-sides-f -1 "card")
              (("" (rewrite "card_union")
                (("" (replace -1 :dir rl)
                  (("" (assert)
                    (("" (lemma "empty_card[real]")
                      ((""
                        (inst -
                         "intersection(Sol(a, m, g, k, rel, x, y, bbelow, TRUE),
                          Sol(a, m, g, k, rel, y, z, TRUE, babove))")
                        (("" (assert)
                          (("" (expand "empty?" 1)
                            (("" (expand "member")
                              (("" (skosimp*)
                                (("" (expand "intersection")
                                  (("" (expand "member")
                                    (("" (expand "Sol" -1)
                                      ((""
                                        (flatten)
                                        (("" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((NSol const-decl "{d: nat |
   EXISTS (enumsol:
             [below(d) -> (Sol(a, m, g, k, rel, x, y, bbelow, babove))]):
     bijective?(enumsol)}" sturmtarski nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (/= const-decl "boolean" notequal nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (bijective? const-decl "bool" functions nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (union const-decl "set" sets nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (empty_card formula-decl nil finite_sets nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (member const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (finite_intersection1 application-judgement "finite_set" finite_sets nil)
    (card_union formula-decl nil finite_sets nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (Sol_union_top formula-decl nil sturmtarski nil))
   shostak))
 (sturm_tarski_TCC1 0
  (sturm_tarski_TCC1-1 nil 3618068263 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil (sturm_tarski subtype "(number_fields.-)(sturmtarski.m, 1)" "nat")))
 (sturm_tarski_TCC2 0
  (sturm_tarski_TCC2-1 nil 3618075146 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (below type-eq-decl nil naturalnumbers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (^ const-decl "real" exponentiation nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil
   (sturm_tarski subtype "sturmtarski.n(0)"
    "{m: naturalnumbers.nat | sturmtarski.p(0)(m) /= 0}")))
 (sturm_tarski 0
  (sturm_tarski-2 nil 3618128560
   (""
    (case "NOT FORALL (g: [nat -> real], k: nat, m: posnat, n: [nat -> nat],
                                                 p: [nat -> [nat -> real]], x, y, z: real):
                                           (x < y AND
                                             constructed_sturm_sequence?(p, n, g, k, m) AND
                                              (FORALL (j:below(m)): only_root_between?(p(j),n(j),x,y)(z)))
                                            IMPLIES
                                            LET nsc =
                                                  LAMBDA (xyz: real):
                                                    number_sign_changes(LAMBDA
                                                                        (i):
                                                                        polynomial(p(i), n(i))(xyz),
                                                                        m - 1),
                                                Nroots = nsc(x)`num - nsc(y)`num
                                              IN
                                              Nroots =
                                               NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE) -
                                                NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)")
    (("1" (hide 2)
      (("1" (lemma "sturm_tarski_basic")
        (("1" (skeep)
          (("1" (insteep -)
            (("1" (assert)
              (("1" (replace -4)
                (("1" (invoke (name "abc" "%1") (! -1 2))
                  (("1" (replace -1)
                    (("1" (assert)
                      (("1" (replaces -2)
                        (("1" (lift-if)
                          (("1" (split -1)
                            (("1" (flatten)
                              (("1"
                                (case "NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE)= 0 AND
                                                               NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)=0")
                                (("1" (flatten) (("1" (assert) nil nil)) nil)
                                 ("2" (hide 2)
                                  (("2" (lemma "empty_card[real]")
                                    (("2" (expand "NSol" 1)
                                      (("2"
                                        (expand "empty?")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst-cp -6 "0")
                                            (("2"
                                              (copy -7)
                                              (("2"
                                                (expand
                                                 "only_root_between?"
                                                 -1)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (split +)
                                                    (("1"
                                                      (inst? -4)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst - "x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "Sol"
                                                                 -4)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst? -4)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (expand "Sol" -4)
                                                            (("2"
                                                              (inst - "x!1")
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2" (assert)
                                (("2" (split -)
                                  (("1" (flatten)
                                    (("1"
                                      (case
                                       "NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE)= 1 AND
                                                                         NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)=0")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 3)
                                        (("2"
                                          (split 1)
                                          (("1"
                                            (expand "NSol" 1)
                                            (("1"
                                              (lemma "card_one[real]")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst + "z")
                                                    (("1"
                                                      (decompose-equality 1)
                                                      (("1"
                                                        (expand "singleton")
                                                        (("1"
                                                          (iff)
                                                          (("1"
                                                            (expand "Sol" 1)
                                                            (("1"
                                                              (inst - "0")
                                                              (("1"
                                                                (expand
                                                                 "only_root_between?")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "x!1")
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "NSol" 1)
                                            (("2"
                                              (lemma "empty_card[real]")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "empty?")
                                                    (("2"
                                                      (expand "member")
                                                      (("2"
                                                        (skosimp*)
                                                        (("2"
                                                          (expand "Sol" -1)
                                                          (("2"
                                                            (inst - "0")
                                                            (("2"
                                                              (expand
                                                               "only_root_between?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("2"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (flatten)
                                    (("2"
                                      (case
                                       "NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE)= 0 AND
                                                                         NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)=1")
                                      (("1"
                                        (flatten)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (hide 4)
                                        (("2"
                                          (split 1)
                                          (("1"
                                            (expand "NSol" 1)
                                            (("1"
                                              (lemma "empty_card[real]")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "empty?")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (expand "Sol" -1)
                                                          (("1"
                                                            (inst - "0")
                                                            (("1"
                                                              (expand
                                                               "only_root_between?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "NSol" 1)
                                            (("2"
                                              (lemma "card_one[real]")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst + "z")
                                                    (("2"
                                                      (expand "singleton")
                                                      (("2"
                                                        (decompose-equality 1)
                                                        (("2"
                                                          (iff)
                                                          (("2"
                                                            (expand "Sol" 1)
                                                            (("2"
                                                              (inst - "0")
                                                              (("2"
                                                                (expand
                                                                 "only_root_between?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "x!1")
                                                                    (("2"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (label "hyp1" -1)
      (("2" (lemma "constructed_sturm_roots_between_enum")
        (("2" (skeep)
          (("2" (label "css" -4)
            (("2" (label "igz" -5)
              (("2" (insteep -1)
                (("2" (assert)
                  (("2" (skeep -1)
                    (("2" (label "rd5" -4)
                      (("2"
                        (name "R"
                              "LAMBDA (ii:below(K+1)): (IF ii=0 THEN x ELSIF ii=K THEN y ELSE (enum(ii-1)+enum(ii))/2 ENDIF)")
                        (("1"
                          (case "FORALL (ij:nat): ij+1<=K IMPLIES number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), m - 1)`num
                                                              -
                                                              number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(R(ij+1)),
                                                                                  m - 1)`num
                                                              =
                                                              NSol(p(0), n(0), g, k, >, x, R(ij+1), TRUE, TRUE) -
                                                               NSol(p(0), n(0), g, k, <, x, R(ij+1), TRUE, TRUE)")
                          (("1" (case "R(K)=y")
                            (("1" (inst - "K-1") (("1" (assert) nil nil)) nil)
                             ("2" (expand "R" 1) (("2" (propax) nil nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (label "em" -2)
                              (("2"
                                (case "NOT FORALL (i, j: below(K+1)): i < j IMPLIES R(i) < R(j)")
                                (("1" (hide 2)
                                  (("1" (skeep)
                                    (("1" (expand "R" 1)
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (lift-if)
                                            (("1"
                                              (assert)
                                              (("1"
                                                (lift-if)
                                                (("1"
                                                  (ground)
                                                  (("1"
                                                    (inst-cp - "0" "j-1")
                                                    (("1"
                                                      (inst - "0" "j")
                                                      (("1" (ground) nil nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (inst-cp - "i-1" "K-1")
                                                    (("2"
                                                      (inst-cp - "i" "K-1")
                                                      (("2" (ground) nil nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (inst-cp - "i-1" "j-1")
                                                    (("3"
                                                      (inst - "i" "j")
                                                      (("3" (ground) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (label "Rm" -1)
                                  (("2"
                                    (case "NOT FORALL (i:below(K+1),j:nat): j<m IMPLIES polynomial(p(j),n(j))(R(i))/=0")
                                    (("1" (hide 2)
                                      (("1"
                                        (skeep)
                                        (("1"
                                          (inst "rd5" "R(i)" "j")
                                          (("1"
                                            (case "i = 0")
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (expand "R" -3)
                                                (("1"
                                                  (inst "igz" "j")
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (case "i = K")
                                              (("1"
                                                (replace -1)
                                                (("1"
                                                  (expand "R" -3)
                                                  (("1"
                                                    (inst "igz" "j")
                                                    (("1" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (split "rd5")
                                                  (("1"
                                                    (skosimp*)
                                                    (("1"
                                                      (expand "R" -1)
                                                      (("1"
                                                        (case "i-1 = i!1")
                                                        (("1"
                                                          (inst -7 "i!1" "i")
                                                          (("1"
                                                            (assert)
                                                            nil
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (case "i = i!1")
                                                          (("1"
                                                            (inst
                                                             -7
                                                             "i-1"
                                                             "i!1")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (case "i!1 < i-1")
                                                            (("1"
                                                              (inst-cp
                                                               -7
                                                               "i!1"
                                                               "i-1")
                                                              (("1"
                                                                (inst
                                                                 -7
                                                                 "i!1"
                                                                 "i")
                                                                (("1"
                                                                  (assert)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (inst-cp
                                                               -6
                                                               "i-1"
                                                               "i!1")
                                                              (("2"
                                                                (inst
                                                                 -6
                                                                 "i"
                                                                 "i!1")
                                                                (("2"
                                                                  (ground)
                                                                  nil
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (expand "R" 1)
                                                    (("2"
                                                      (inst-cp -5 "0" "i-1")
                                                      (("2"
                                                        (inst -5 "0" "i")
                                                        (("2"
                                                          (ground)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("3"
                                                    (expand "R" 1)
                                                    (("3"
                                                      (inst-cp -5 "i-1" "K-1")
                                                      (("3"
                                                        (inst -5 "i" "K-1")
                                                        (("3"
                                                          (ground)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (induct "ij")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (inst
                                           -
                                           "g"
                                           "k"
                                           "m"
                                           "n"
                                           "p"
                                           "x"
                                           "R(1)"
                                           "(x+R(1))/2")
                                          (("1"
                                            (name "zz" "(x+R(1))/2")
                                            (("1"
                                              (replace -1)
                                              (("1"
                                                (assert)
                                                (("1"
                                                  (case "NOT x < R(1)")
                                                  (("1"
                                                    (expand "R" 1)
                                                    (("1"
                                                      (inst -5 "0" "1")
                                                      (("1" (ground) nil nil))
                                                      nil))
                                                    nil)
                                                   ("2"
                                                    (assert)
                                                    (("2"
                                                      (skeep "hyp1")
                                                      (("2"
                                                        (expand
                                                         "only_root_between?")
                                                        (("2"
                                                          (skeep "hyp1")
                                                          (("2"
                                                            (inst
                                                             "rd5"
                                                             "r"
                                                             "j")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (split "rd5")
                                                                (("1"
                                                                  (skosimp*)
                                                                  (("1"
                                                                    (inst
                                                                     "igz"
                                                                     "j")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (flatten)
                                                                        (("1"
                                                                          (assert)
                                                                          (("1"
                                                                            (inst-cp
                                                                             -7
                                                                             "0"
                                                                             "i!1")
                                                                            (("1"
                                                                              (inst-cp
                                                                               -7
                                                                               "1"
                                                                               "i!1")
                                                                              (("1"
                                                                                (case
                                                                                 "R(1)< enum(i!1)")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil)
                                                                                 ("2"
                                                                                  (expand
                                                                                   "R"
                                                                                   1)
                                                                                  (("2"
                                                                                    (ground)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (inst
                                                                   "igz"
                                                                   "j")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil)
                                                                 ("3"
                                                                  (inst
                                                                   "igz"
                                                                   "j")
                                                                  (("3"
                                                                    (assert)
                                                                    (("3"
                                                                      (ground)
                                                                      (("3"
                                                                        (inst-cp
                                                                         -6
                                                                         "0"
                                                                         "K-1")
                                                                        (("3"
                                                                          (inst
                                                                           -6
                                                                           "1"
                                                                           "K-1")
                                                                          (("3"
                                                                            (case
                                                                             "R(1) <=y")
                                                                            (("1"
                                                                              (assert)
                                                                              nil
                                                                              nil)
                                                                             ("2"
                                                                              (expand
                                                                               "R"
                                                                               1)
                                                                              (("2"
                                                                                (assert)
                                                                                nil
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (skeep)
                                        (("2"
                                          (assert)
                                          (("2"
                                            (inst-cp -4 "1+j" "2+j")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (inst-cp -4 "0" "1+j")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case
                                                     "NOT (number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), m - 1)`num
                          -
                          number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(R(2 + j)),
                                              m - 1)`num) = ( number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), m - 1)`num
                          -
                          number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(R(1 + j)),
                                              m - 1)`num) + (number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(R(1 + j)),
                                              m - 1)`num-number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(R(2 + j)),
                                              m - 1)`num)")
                                                    (("1" (assert) nil nil)
                                                     ("2"
                                                      (replaces -1)
                                                      (("2"
                                                        (invoke
                                                         (name "AA" "%1-%2")
                                                         (! 1 1 3)
                                                         (! 1 1 4))
                                                        (("2"
                                                          (replace -1)
                                                          (("2"
                                                            (replace -2 +)
                                                            (("2"
                                                              (lemma
                                                               "NSol_union_top")
                                                              (("2"
                                                                (inst
                                                                 -
                                                                 "p(0)"
                                                                 "TRUE"
                                                                 "TRUE"
                                                                 "g"
                                                                 "k"
                                                                 "n(0)"
                                                                 _
                                                                 "x"
                                                                 "R(1+j)"
                                                                 "R(2+j)")
                                                                (("1"
                                                                  (inst-cp
                                                                   -
                                                                   ">")
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "<")
                                                                    (("1"
                                                                      (assert)
                                                                      (("1"
                                                                        (split
                                                                         -)
                                                                        (("1"
                                                                          (split
                                                                           -)
                                                                          (("1"
                                                                            (ground)
                                                                            (("1"
                                                                              (replaces
                                                                               -1
                                                                               :dir
                                                                               rl)
                                                                              (("1"
                                                                                (replaces
                                                                                 -1
                                                                                 :dir
                                                                                 rl)
                                                                                (("1"
                                                                                  (assert)
                                                                                  (("1"
                                                                                    (expand
                                                                                     "AA"
                                                                                     1)
                                                                                    (("1"
                                                                                      (inst
                                                                                       "hyp1"
                                                                                       "g"
                                                                                       "k"
                                                                                       "m"
                                                                                       "n"
                                                                                       "p"
                                                                                       "R(1+j)"
                                                                                       "R(2+j)"
                                                                                       _)
                                                                                      (("1"
                                                                                        (case
                                                                                         "EXISTS (z:real): (FORALL (j_1: below(m)):
                                         only_root_between?(p(j_1), n(j_1), R(1 + j), R(2 + j))(z))")
                                                                                        (("1"
                                                                                          (skeep
                                                                                           -1)
                                                                                          (("1"
                                                                                            (inst
                                                                                             "hyp1"
                                                                                             "z")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (hide
                                                                                           2)
                                                                                          (("2"
                                                                                            (case
                                                                                             "2+j = K")
                                                                                            (("1"
                                                                                              (inst
                                                                                               +
                                                                                               "(R(1+j)+y)/2")
                                                                                              (("1"
                                                                                                (skosimp*)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "only_root_between?"
                                                                                                   +)
                                                                                                  (("1"
                                                                                                    (case
                                                                                                     "NOT (R(1 + j) < (R(1 + j) + y) / 2 AND
       (R(1 + j) + y) / 2 < R(2 + j))")
                                                                                                    (("1"
                                                                                                      (hide
                                                                                                       2)
                                                                                                      (("1"
                                                                                                        (split
                                                                                                         1)
                                                                                                        (("1"
                                                                                                          (copy
                                                                                                           "Rm")
                                                                                                          (("1"
                                                                                                            (inst
                                                                                                             -
                                                                                                             "1+j"
                                                                                                             "K")
                                                                                                            (("1"
                                                                                                              (case
                                                                                                               "R(K)=y")
                                                                                                              (("1"
                                                                                                                (assert)
                                                                                                                nil
                                                                                                                nil)
                                                                                                               ("2"
                                                                                                                (expand
                                                                                                                 "R"
                                                                                                                 1)
                                                                                                                (("2"
                                                                                                                  (propax)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil)
                                                                                                         ("2"
                                                                                                          (copy
                                                                                                           "Rm")
                                                                                                          (("2"
                                                                                                            (replace
                                                                                                             -2)
                                                                                                            (("2"
                                                                                                              (inst
                                                                                                               -
                                                                                                               "1+j"
                                                                                                               "K")
                                                                                                              (("2"
                                                                                                                (case
                                                                                                                 "R(K)=y")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil)
                                                                                                                 ("2"
                                                                                                                  (expand
                                                                                                                   "R"
                                                                                                                   1)
                                                                                                                  (("2"
                                                                                                                    (propax)
                                                                                                                    nil
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (flatten)
                                                                                                      (("2"
                                                                                                        (assert)
                                                                                                        (("2"
                                                                                                          (skeep)
                                                                                                          (("2"
                                                                                                            (copy
                                                                                                             -4)
                                                                                                            (("2"
                                                                                                              (copy
                                                                                                               -6)
                                                                                                              (("2"
                                                                                                                (expand
                                                                                                                 "R"
                                                                                                                 -1)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "R"
                                                                                                                   -2)
                                                                                                                  (("2"
                                                                                                                    (copy
                                                                                                                     "rd5")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "r"
                                                                                                                       "j!1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "x<r")
                                                                                                                          (("1"
                                                                                                                            (assert)
                                                                                                                            (("1"
                                                                                                                              (skosimp*)
                                                                                                                              (("1"
                                                                                                                                (case
                                                                                                                                 "NOT (i!1 = K)")
                                                                                                                                (("1"
                                                                                                                                  (case
                                                                                                                                   "NOT i!1 < K")
                                                                                                                                  (("1"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (case
                                                                                                                                     "NOT i!1 = K-1")
                                                                                                                                    (("1"
                                                                                                                                      (copy
                                                                                                                                       "em")
                                                                                                                                      (("1"
                                                                                                                                        (inst-cp
                                                                                                                                         -
                                                                                                                                         "i!1"
                                                                                                                                         "1+j")
                                                                                                                                        (("1"
                                                                                                                                          (inst
                                                                                                                                           -
                                                                                                                                           "i!1"
                                                                                                                                           "j")
                                                                                                                                          (("1"
                                                                                                                                            (ground)
                                                                                                                                            nil
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      (("2"
                                                                                                                                        (replace
                                                                                                                                         -1)
                                                                                                                                        (("2"
                                                                                                                                          (copy
                                                                                                                                           "igz")
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "j!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil)
                                                                                                                                 ("2"
                                                                                                                                  (assert)
                                                                                                                                  nil
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("2"
                                                                                                                              (copy
                                                                                                                               "Rm")
                                                                                                                              (("2"
                                                                                                                                (inst
                                                                                                                                 -
                                                                                                                                 "0"
                                                                                                                                 "1+j")
                                                                                                                                (("2"
                                                                                                                                  (split
                                                                                                                                   -1)
                                                                                                                                  (("1"
                                                                                                                                    (expand
                                                                                                                                     "R"
                                                                                                                                     -1
                                                                                                                                     1)
                                                                                                                                    (("1"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    nil
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (assert)
                                                                                              (("2"
                                                                                                (inst
                                                                                                 +
                                                                                                 "enum(1+j)")
                                                                                                (("2"
                                                                                                  (skosimp*)
                                                                                                  (("2"
                                                                                                    (expand
                                                                                                     "only_root_between?"
                                                                                                     +)
                                                                                                    (("2"
                                                                                                      (case
                                                                                                       "NOT (R(1 + j) < enum(1 + j) AND
       enum(1 + j) < R(2 + j))")
                                                                                                      (("1"
                                                                                                        (hide
                                                                                                         3)
                                                                                                        (("1"
                                                                                                          (expand
                                                                                                           "R"
                                                                                                           1)
                                                                                                          (("1"
                                                                                                            (copy
                                                                                                             "em")
                                                                                                            (("1"
                                                                                                              (inst-cp
                                                                                                               -
                                                                                                               "j"
                                                                                                               "1+j")
                                                                                                              (("1"
                                                                                                                (inst
                                                                                                                 -
                                                                                                                 "1+j"
                                                                                                                 "2+j")
                                                                                                                (("1"
                                                                                                                  (assert)
                                                                                                                  nil
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil)
                                                                                                       ("2"
                                                                                                        (flatten)
                                                                                                        (("2"
                                                                                                          (assert)
                                                                                                          (("2"
                                                                                                            (skeep)
                                                                                                            (("2"
                                                                                                              (copy
                                                                                                               -4)
                                                                                                              (("2"
                                                                                                                (copy
                                                                                                                 -4)
                                                                                                                (("2"
                                                                                                                  (expand
                                                                                                                   "R"
                                                                                                                   (-1
                                                                                                                    -2))
                                                                                                                  (("2"
                                                                                                                    (copy
                                                                                                                     "rd5")
                                                                                                                    (("2"
                                                                                                                      (inst
                                                                                                                       -
                                                                                                                       "r"
                                                                                                                       "j!1")
                                                                                                                      (("2"
                                                                                                                        (assert)
                                                                                                                        (("2"
                                                                                                                          (case
                                                                                                                           "NOT (x < r AND r <= y)")
                                                                                                                          (("1"
                                                                                                                            (hide
                                                                                                                             -1)
                                                                                                                            (("1"
                                                                                                                              (split
                                                                                                                               1)
                                                                                                                              (("1"
                                                                                                                                (copy
                                                                                                                                 "Rm")
                                                                                                                                (("1"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "0"
                                                                                                                                   "1+j")
                                                                                                                                  (("1"
                                                                                                                                    (split
                                                                                                                                     -1)
                                                                                                                                    (("1"
                                                                                                                                      (expand
                                                                                                                                       "R"
                                                                                                                                       -1
                                                                                                                                       1)
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil)
                                                                                                                                     ("2"
                                                                                                                                      (assert)
                                                                                                                                      nil
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil)
                                                                                                                               ("2"
                                                                                                                                (copy
                                                                                                                                 "Rm")
                                                                                                                                (("2"
                                                                                                                                  (inst
                                                                                                                                   -
                                                                                                                                   "2+j"
                                                                                                                                   "K")
                                                                                                                                  (("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (expand
                                                                                                                                       "R"
                                                                                                                                       -1
                                                                                                                                       2)
                                                                                                                                      (("2"
                                                                                                                                        (assert)
                                                                                                                                        nil
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil)
                                                                                                                           ("2"
                                                                                                                            (flatten)
                                                                                                                            (("2"
                                                                                                                              (assert)
                                                                                                                              (("2"
                                                                                                                                (skosimp*)
                                                                                                                                (("2"
                                                                                                                                  (case
                                                                                                                                   "i!1 < 1+j")
                                                                                                                                  (("1"
                                                                                                                                    (copy
                                                                                                                                     "em")
                                                                                                                                    (("1"
                                                                                                                                      (inst
                                                                                                                                       -
                                                                                                                                       "i!1"
                                                                                                                                       "1+j")
                                                                                                                                      (("1"
                                                                                                                                        (assert)
                                                                                                                                        (("1"
                                                                                                                                          (copy
                                                                                                                                           "em")
                                                                                                                                          (("1"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "i!1"
                                                                                                                                             "j")
                                                                                                                                            (("1"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil)
                                                                                                                                   ("2"
                                                                                                                                    (assert)
                                                                                                                                    (("2"
                                                                                                                                      (copy
                                                                                                                                       "em")
                                                                                                                                      (("2"
                                                                                                                                        (inst-cp
                                                                                                                                         -
                                                                                                                                         "1+j"
                                                                                                                                         "i!1")
                                                                                                                                        (("2"
                                                                                                                                          (assert)
                                                                                                                                          (("2"
                                                                                                                                            (inst
                                                                                                                                             -
                                                                                                                                             "2+j"
                                                                                                                                             "i!1")
                                                                                                                                            (("2"
                                                                                                                                              (assert)
                                                                                                                                              nil
                                                                                                                                              nil))
                                                                                                                                            nil))
                                                                                                                                          nil))
                                                                                                                                        nil))
                                                                                                                                      nil))
                                                                                                                                    nil))
                                                                                                                                  nil))
                                                                                                                                nil))
                                                                                                                              nil))
                                                                                                                            nil))
                                                                                                                          nil))
                                                                                                                        nil))
                                                                                                                      nil))
                                                                                                                    nil))
                                                                                                                  nil))
                                                                                                                nil))
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("2"
                                                                            (copy
                                                                             "Rm")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "0"
                                                                               "1+j")
                                                                              (("2"
                                                                                (expand
                                                                                 "R"
                                                                                 -1
                                                                                 1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("3"
                                                                            (copy
                                                                             "css")
                                                                            (("3"
                                                                              (expand
                                                                               "constructed_sturm_sequence?"
                                                                               -1)
                                                                              (("3"
                                                                                (flatten)
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "0")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil)
                                                                           ("4"
                                                                            (flatten)
                                                                            (("4"
                                                                              (copy
                                                                               "rd5")
                                                                              (("4"
                                                                                (inst
                                                                                 -
                                                                                 "R(1+j)"
                                                                                 "0")
                                                                                (("4"
                                                                                  (assert)
                                                                                  (("4"
                                                                                    (case
                                                                                     "NOT (x < R(1 + j) AND R(1 + j) <= y)")
                                                                                    (("1"
                                                                                      (copy
                                                                                       "Rm")
                                                                                      (("1"
                                                                                        (split
                                                                                         1)
                                                                                        (("1"
                                                                                          (inst
                                                                                           -
                                                                                           "0"
                                                                                           "1+j")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "R"
                                                                                             -1
                                                                                             1)
                                                                                            (("1"
                                                                                              (propax)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil)
                                                                                         ("2"
                                                                                          (inst
                                                                                           -
                                                                                           "1+j"
                                                                                           "K")
                                                                                          (("2"
                                                                                            (expand
                                                                                             "R"
                                                                                             -1
                                                                                             2)
                                                                                            (("2"
                                                                                              (assert)
                                                                                              nil
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil)
                                                                                     ("2"
                                                                                      (flatten)
                                                                                      (("2"
                                                                                        (assert)
                                                                                        (("2"
                                                                                          (skosimp*)
                                                                                          (("2"
                                                                                            (copy
                                                                                             "em")
                                                                                            (("2"
                                                                                              (expand
                                                                                               "R"
                                                                                               -4)
                                                                                              (("2"
                                                                                                (inst-cp
                                                                                                 -
                                                                                                 "j"
                                                                                                 "1+j")
                                                                                                (("2"
                                                                                                  (assert)
                                                                                                  (("2"
                                                                                                    (case
                                                                                                     "i!1 < j")
                                                                                                    (("1"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "i!1"
                                                                                                       "j")
                                                                                                      (("1"
                                                                                                        (assert)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (inst
                                                                                                       -
                                                                                                       "1+j"
                                                                                                       "i!1")
                                                                                                      (("2"
                                                                                                        (ground)
                                                                                                        nil
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("2"
                                                                          (hide
                                                                           -1)
                                                                          (("2"
                                                                            (copy
                                                                             "Rm")
                                                                            (("2"
                                                                              (inst
                                                                               -
                                                                               "0"
                                                                               "1+j")
                                                                              (("2"
                                                                                (expand
                                                                                 "R"
                                                                                 -1
                                                                                 1)
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("3"
                                                                          (copy
                                                                           "css")
                                                                          (("3"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("3"
                                                                              (hide
                                                                               -2)
                                                                              (("3"
                                                                                (flatten)
                                                                                (("3"
                                                                                  (inst
                                                                                   -
                                                                                   "0")
                                                                                  (("3"
                                                                                    (assert)
                                                                                    nil
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil)
                                                                         ("4"
                                                                          (copy
                                                                           "rd5")
                                                                          (("4"
                                                                            (hide
                                                                             -2)
                                                                            (("4"
                                                                              (inst
                                                                               -
                                                                               "R(1+j)"
                                                                               "0")
                                                                              (("4"
                                                                                (assert)
                                                                                (("4"
                                                                                  (case
                                                                                   "NOT (x<R(1+j) AND R(1+j)<=y)")
                                                                                  (("1"
                                                                                    (copy
                                                                                     "Rm")
                                                                                    (("1"
                                                                                      (split
                                                                                       1)
                                                                                      (("1"
                                                                                        (inst
                                                                                         -
                                                                                         "0"
                                                                                         "1+j")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "R"
                                                                                           -1
                                                                                           1)
                                                                                          (("1"
                                                                                            (propax)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil)
                                                                                       ("2"
                                                                                        (inst
                                                                                         -
                                                                                         "1+j"
                                                                                         "K")
                                                                                        (("2"
                                                                                          (expand
                                                                                           "R"
                                                                                           -1
                                                                                           2)
                                                                                          (("2"
                                                                                            (assert)
                                                                                            nil
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil)
                                                                                   ("2"
                                                                                    (flatten)
                                                                                    (("2"
                                                                                      (assert)
                                                                                      (("2"
                                                                                        (skosimp*)
                                                                                        (("2"
                                                                                          (copy
                                                                                           "Rm")
                                                                                          (("2"
                                                                                            (copy
                                                                                             -4)
                                                                                            (("2"
                                                                                              (hide
                                                                                               -2)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "R"
                                                                                                 -1)
                                                                                                (("2"
                                                                                                  (copy
                                                                                                   "em")
                                                                                                  (("2"
                                                                                                    (inst-cp
                                                                                                     -
                                                                                                     "j"
                                                                                                     "j+1")
                                                                                                    (("2"
                                                                                                      (inst-cp
                                                                                                       -
                                                                                                       "i!1"
                                                                                                       "j")
                                                                                                      (("2"
                                                                                                        (inst-cp
                                                                                                         -
                                                                                                         "1+j"
                                                                                                         "i!1")
                                                                                                        (("2"
                                                                                                          (ground)
                                                                                                          nil
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil)
                                                                 ("2"
                                                                  (assert)
                                                                  (("2"
                                                                    (copy
                                                                     "css")
                                                                    (("2"
                                                                      (hide
                                                                       "hyp1")
                                                                      (("2"
                                                                        (expand
                                                                         "constructed_sturm_sequence?"
                                                                         -1)
                                                                        (("2"
                                                                          (propax)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("3"
                                        (skosimp*)
                                        (("3"
                                          (copy "css")
                                          (("3"
                                            (expand
                                             "constructed_sturm_sequence?"
                                             -1)
                                            (("3"
                                              (flatten)
                                              (("3"
                                                (inst - "0")
                                                (("3" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("4"
                                        (skosimp*)
                                        (("4"
                                          (copy "css")
                                          (("4"
                                            (expand
                                             "constructed_sturm_sequence?"
                                             -1)
                                            (("4"
                                              (flatten)
                                              (("4"
                                                (inst - "0")
                                                (("4" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("5"
                                        (skosimp*)
                                        (("5" (assert) nil nil))
                                        nil)
                                       ("6"
                                        (skosimp*)
                                        (("6" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (skosimp*) (("3" (assert) nil nil)) nil))
                          nil)
                         ("2" (skosimp*) (("2" (assert) nil nil)) nil)
                         ("3" (skosimp*) (("3" (assert) nil nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (hide 2)
      (("3" (skosimp*)
        (("3" (expand "constructed_sturm_sequence?")
          (("3" (flatten) (("3" (inst - "0") (("3" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (<= const-decl "bool" reals nil)
    (R skolem-const-decl "[below(1 + K) -> real]" sturmtarski nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (K skolem-const-decl "{K: nat | K >= 2}" sturmtarski nil)
    (p skolem-const-decl "[nat -> [nat -> real]]" sturmtarski nil)
    (n skolem-const-decl "[nat -> nat]" sturmtarski nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (NSol_union_top formula-decl nil sturmtarski nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (AA skolem-const-decl "int" sturmtarski nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (real_plus_real_is_real application-judgement "real" reals nil)
    (/ const-decl "[numfield, nznum -> numfield]" number_fields nil)
    (nznum nonempty-type-eq-decl nil number_fields nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (constructed_sturm_roots_between_enum formula-decl nil sturmtarski nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (card_one formula-decl nil finite_sets nil)
    (nonempty_singleton_finite application-judgement "non_empty_finite_set"
     finite_sets nil)
    (singleton const-decl "(singleton?)" sets nil)
    (singleton? const-decl "bool" sets nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (member const-decl "bool" sets nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (empty? const-decl "bool" sets nil)
    (empty_card formula-decl nil finite_sets nil)
    (sturm_tarski_basic formula-decl nil sturmtarski nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (< const-decl "bool" reals nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (below type-eq-decl nil naturalnumbers nil)
    (sequence type-eq-decl nil sequences nil)
    (only_root_between? const-decl "bool" more_polynomial_props reals)
    (NSC type-eq-decl nil number_sign_changes Sturm)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (/= const-decl "boolean" notequal nil) (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (bijective? const-decl "bool" functions nil)
    (NSol const-decl "{d: nat |
   EXISTS (enumsol:
             [below(d) -> (Sol(a, m, g, k, rel, x, y, bbelow, babove))]):
     bijective?(enumsol)}" sturmtarski nil)
    (TRUE const-decl "bool" booleans nil)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (polynomial const-decl "[real -> real]" polynomials reals))
   nil)
  (sturm_tarski-1 nil 3618068283
   (""
    (case "NOT FORALL (g: [nat -> real], i1, k: nat, m: posnat, n: [nat -> nat],
                            p: [nat -> [nat -> real]], x, y, z: real):
                      (x < y AND
                        constructed_sturm_sequence?(p, n, g, k, m) AND
                         (FORALL (j:below(m)): only_root_between?(p(j),n(j),x,y)(z)))
                       IMPLIES
                       LET nsc =
                             LAMBDA (xyz: real):
                               number_sign_changes(LAMBDA
                                                   (i):
                                                   polynomial(p(i), n(i))(xyz),
                                                   m - 1),
                           Nroots = nsc(x)`num - nsc(y)`num
                         IN
                         Nroots =
                          NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE) -
                           NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)")
    (("1" (hide 2)
      (("1" (lemma "sturm_tarski_basic")
        (("1" (skeep)
          (("1" (insteep -)
            (("1" (assert)
              (("1" (replace -4)
                (("1" (invoke (name "abc" "%1") (! -1 2))
                  (("1" (replace -1)
                    (("1" (assert)
                      (("1" (replaces -2)
                        (("1" (lift-if)
                          (("1" (split -1)
                            (("1" (flatten)
                              (("1"
                                (case "NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE)= 0 AND
                              NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)=0")
                                (("1" (flatten) (("1" (assert) nil nil)) nil)
                                 ("2" (hide 2)
                                  (("2" (lemma "empty_card[real]")
                                    (("2" (expand "NSol" 1)
                                      (("2"
                                        (expand "empty?")
                                        (("2"
                                          (expand "member")
                                          (("2"
                                            (inst-cp -6 "0")
                                            (("2"
                                              (copy -7)
                                              (("2"
                                                (expand
                                                 "only_root_between?"
                                                 -1)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (split +)
                                                    (("1"
                                                      (inst? -4)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (skosimp*)
                                                          (("1"
                                                            (inst - "x!1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (expand
                                                                 "Sol"
                                                                 -4)
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (inst? -4)
                                                      (("2"
                                                        (assert)
                                                        (("2"
                                                          (skosimp*)
                                                          (("2"
                                                            (expand "Sol" -4)
                                                            (("2"
                                                              (inst - "x!1")
                                                              (("2"
                                                                (ground)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (flatten)
                              (("2" (assert)
                                (("2" (split -)
                                  (("1" (flatten)
                                    (("1"
                                      (case
                                       "NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE)= 1 AND
                                  NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)=0")
                                      (("1"
                                        (assert)
                                        (("1"
                                          (flatten)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 3)
                                        (("2"
                                          (split 1)
                                          (("1"
                                            (expand "NSol" 1)
                                            (("1"
                                              (lemma "card_one[real]")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (inst + "z")
                                                    (("1"
                                                      (decompose-equality 1)
                                                      (("1"
                                                        (expand "singleton")
                                                        (("1"
                                                          (iff)
                                                          (("1"
                                                            (expand "Sol" 1)
                                                            (("1"
                                                              (inst - "0")
                                                              (("1"
                                                                (expand
                                                                 "only_root_between?")
                                                                (("1"
                                                                  (flatten)
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "x!1")
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "NSol" 1)
                                            (("2"
                                              (lemma "empty_card[real]")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (expand "empty?")
                                                    (("2"
                                                      (expand "member")
                                                      (("2"
                                                        (skosimp*)
                                                        (("2"
                                                          (expand "Sol" -1)
                                                          (("2"
                                                            (inst - "0")
                                                            (("2"
                                                              (expand
                                                               "only_root_between?")
                                                              (("2"
                                                                (flatten)
                                                                (("2"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("2"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil)
                                   ("2" (flatten)
                                    (("2"
                                      (case
                                       "NSol(p(0), n(0), g, k, >, x, y, TRUE, TRUE)= 0 AND
                                  NSol(p(0), n(0), g, k, <, x, y, TRUE, TRUE)=1")
                                      (("1"
                                        (flatten)
                                        (("1" (assert) nil nil))
                                        nil)
                                       ("2"
                                        (hide 4)
                                        (("2"
                                          (split 1)
                                          (("1"
                                            (expand "NSol" 1)
                                            (("1"
                                              (lemma "empty_card[real]")
                                              (("1"
                                                (inst?)
                                                (("1"
                                                  (assert)
                                                  (("1"
                                                    (expand "empty?")
                                                    (("1"
                                                      (expand "member")
                                                      (("1"
                                                        (skosimp*)
                                                        (("1"
                                                          (expand "Sol" -1)
                                                          (("1"
                                                            (inst - "0")
                                                            (("1"
                                                              (expand
                                                               "only_root_between?")
                                                              (("1"
                                                                (flatten)
                                                                (("1"
                                                                  (inst
                                                                   -
                                                                   "x!1")
                                                                  (("1"
                                                                    (ground)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "NSol" 1)
                                            (("2"
                                              (lemma "card_one[real]")
                                              (("2"
                                                (inst?)
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (inst + "z")
                                                    (("2"
                                                      (expand "singleton")
                                                      (("2"
                                                        (decompose-equality 1)
                                                        (("2"
                                                          (iff)
                                                          (("2"
                                                            (expand "Sol" 1)
                                                            (("2"
                                                              (inst - "0")
                                                              (("2"
                                                                (expand
                                                                 "only_root_between?")
                                                                (("2"
                                                                  (flatten)
                                                                  (("2"
                                                                    (inst
                                                                     -
                                                                     "x!1")
                                                                    (("2"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (label "hyp1" -1)
      (("2" (lemma "constructed_sturm_roots_between_enum")
        (("2" (skeep)
          (("2" (label "css" -4)
            (("2" (label "igz" -5)
              (("2" (insteep -1)
                (("2" (assert)
                  (("2" (skeep -1)
                    (("2" (label "rd5" -4)
                      (("2"
                        (name "R"
                              "LAMBDA (ii:below(K+1)): (IF ii=0 THEN x ELSIF ii=K THEN y ELSE (enum(ii-1)+enum(ii))/2 ENDIF)")
                        (("1"
                          (case "FORALL (ij:nat): ij+1<=K IMPLIES number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(x), m - 1)`num
                             -
                             number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(R(ij+1)),
                                                 m - 1)`num
                             =
                             NSol(p(0), n(0), g, k, >, x, R(ij+1), TRUE, TRUE) -
                              NSol(p(0), n(0), g, k, <, x, R(ij+1), TRUE, TRUE)")
                          (("1" (case "R(K)=y")
                            (("1" (inst - "K-1") (("1" (assert) nil nil)) nil)
                             ("2" (expand "R" 1) (("2" (propax) nil nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2"
                              (case "NOT FORALL (i, j: below(K+1)): i < j IMPLIES R(i) < R(j)")
                              (("1" (hide 2)
                                (("1" (skeep)
                                  (("1" (expand "R" 1)
                                    (("1" (lift-if)
                                      (("1"
                                        (assert)
                                        (("1"
                                          (lift-if)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (lift-if)
                                              (("1"
                                                (ground)
                                                (("1"
                                                  (inst-cp - "0" "j-1")
                                                  (("1"
                                                    (inst - "0" "j")
                                                    (("1" (ground) nil nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (inst-cp - "i-1" "K-1")
                                                  (("2"
                                                    (inst-cp - "i" "K-1")
                                                    (("2" (ground) nil nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (inst-cp - "i-1" "j-1")
                                                  (("3"
                                                    (inst - "i" "j")
                                                    (("3" (ground) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2"
                                (case "NOT FORALL (i:below(K+1),j:nat): j<m IMPLIES polynomial(p(j),n(j))(R(i))/=0")
                                (("1" (hide 2)
                                  (("1" (skeep)
                                    (("1" (inst "rd5" "R(i)" "j")
                                      (("1"
                                        (case "i = 0")
                                        (("1"
                                          (replace -1)
                                          (("1"
                                            (expand "R" -3)
                                            (("1"
                                              (inst "igz" "j")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case "i = K")
                                          (("1"
                                            (replace -1)
                                            (("1"
                                              (expand "R" -3)
                                              (("1"
                                                (inst "igz" "j")
                                                (("1" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (assert)
                                            (("2"
                                              (split "rd5")
                                              (("1"
                                                (skosimp*)
                                                (("1"
                                                  (expand "R" -1)
                                                  (("1"
                                                    (case "i-1 = i!1")
                                                    (("1"
                                                      (inst -7 "i!1" "i")
                                                      (("1" (assert) nil nil))
                                                      nil)
                                                     ("2"
                                                      (case "i = i!1")
                                                      (("1"
                                                        (inst -7 "i-1" "i!1")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (case "i!1 < i-1")
                                                        (("1"
                                                          (inst-cp
                                                           -7
                                                           "i!1"
                                                           "i-1")
                                                          (("1"
                                                            (inst
                                                             -7
                                                             "i!1"
                                                             "i")
                                                            (("1"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil)
                                                         ("2"
                                                          (inst-cp
                                                           -6
                                                           "i-1"
                                                           "i!1")
                                                          (("2"
                                                            (inst
                                                             -6
                                                             "i"
                                                             "i!1")
                                                            (("2"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (expand "R" 1)
                                                (("2"
                                                  (inst-cp -5 "0" "i-1")
                                                  (("2"
                                                    (inst -5 "0" "i")
                                                    (("2" (ground) nil nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("3"
                                                (expand "R" 1)
                                                (("3"
                                                  (inst-cp -5 "i-1" "K-1")
                                                  (("3"
                                                    (inst -5 "i" "K-1")
                                                    (("3" (ground) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (induct "ij")
                                  (("1" (assert) (("1" (postpone) nil nil))
                                    nil)
                                   ("2" (postpone) nil nil)
                                   ("3" (postpone) nil nil)
                                   ("4" (postpone) nil nil)
                                   ("5" (postpone) nil nil)
                                   ("6" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("3" (postpone) nil nil))
                          nil)
                         ("2" (postpone) nil nil) ("3" (postpone) nil nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("3" (postpone) nil nil))
    nil)
   nil nil))
 (Sol_TCC2 0
  (Sol_TCC2-1 nil 3618669132
   ("" (skeep)
    (("" (invoke (name "AA" "%1") (! 1 1))
      (("" (typepred "Sol(a,m,g,k,rel,0,1,false,false)")
        (("" (case "AA = Sol(a, m, g, k, rel, 0, 1, false,false)")
          (("1" (assert) nil nil)
           ("2" (decompose-equality 1)
            (("2" (expand "AA" 1)
              (("2" (expand "Sol") (("2" (propax) nil nil)) nil)) nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (/= const-decl "boolean" notequal nil)
    (AA skolem-const-decl "[real -> boolean]" sturmtarski nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (FALSE const-decl "bool" booleans nil))
   nil
   (Sol subtype
    "{r: reals.real | booleans.AND(polynomials.polynomial(sturmtarski.a, sturmtarski.m)(r) = 0, sturmtarski.rel(polynomials.polynomial(sturmtarski.g, sturmtarski.k)(r), 0))}"
    "finite_set[real]")))
 (NSol_TCC2 0
  (NSol_TCC2-1 nil 3618669132
   ("" (skeep)
    (("" (name "AA" "Sol(a, m, g, k, rel)")
      (("" (case "AA = Sol(a, m, g, k, rel, 0, 1, false,false)")
        (("1" (name "NN" "NSol(a, m, g, k, rel, 0, 1, false,false)")
          (("1" (typepred "NN")
            (("1" (skeep)
              (("1" (inst + "enumsol")
                (("1" (expand "bijective?")
                  (("1" (flatten)
                    (("1" (expand "injective?")
                      (("1" (expand "surjective?")
                        (("1" (split)
                          (("1" (skosimp*)
                            (("1" (inst - "x1!1" "x2!1")
                              (("1" (assert) nil nil)) nil))
                            nil)
                           ("2" (skeep)
                            (("2" (inst -2 "y")
                              (("1" (skosimp*)
                                (("1" (inst + "x!1")
                                  (("1" (assert)
                                    (("1" (typepred "x!1")
                                      (("1"
                                        (expand "NN" -1)
                                        (("1"
                                          (expand "NSol" -1)
                                          (("1" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil)
                 ("2" (split)
                  (("1" (skeep)
                    (("1" (expand "NN" +)
                      (("1" (expand "NSol" 1) (("1" (ground) nil nil)) nil))
                      nil))
                    nil)
                   ("2" (skosimp*) (("2" (assert) nil nil)) nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (hide 2)
          (("2" (decompose-equality 1)
            (("2" (expand "AA" 1)
              (("2" (iff) (("2" (expand "Sol") (("2" (propax) nil nil)) nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((Sol const-decl "finite_set[real]" sturmtarski nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (/= const-decl "boolean" notequal nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (set type-eq-decl nil sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (AA skolem-const-decl "finite_set[real]" sturmtarski nil)
    (NSol const-decl "{d: nat |
   EXISTS (enumsol:
             [below(d) -> (Sol(a, m, g, k, rel, x, y, bbelow, babove))]):
     bijective?(enumsol)}" sturmtarski nil)
    (bijective? const-decl "bool" functions nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (injective? const-decl "bool" functions nil)
    (y skolem-const-decl "(Sol(a, m, g, k, rel))" sturmtarski nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (x!1 skolem-const-decl "below(NN)" sturmtarski nil)
    (surjective? const-decl "bool" functions nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (a skolem-const-decl "[nat -> real]" sturmtarski nil)
    (m skolem-const-decl "{m: nat | a(m) /= 0}" sturmtarski nil)
    (g skolem-const-decl "[nat -> real]" sturmtarski nil)
    (k skolem-const-decl "nat" sturmtarski nil)
    (rel skolem-const-decl "[[real, real] -> bool]" sturmtarski nil)
    (NN skolem-const-decl "{d: nat |
   EXISTS (enumsol:
             [below(d) -> (Sol(a, m, g, k, rel, 0, 1, FALSE, FALSE))]):
     bijective?(enumsol)}" sturmtarski nil)
    (Card const-decl "nat" finite_sets nil)
    (card const-decl "{n: nat | n = Card(S)}" finite_sets nil)
    (enumsol skolem-const-decl
     "[below(NN) -> (Sol(a, m, g, k, rel, 0, 1, FALSE, FALSE))]" sturmtarski
     nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (FALSE const-decl "bool" booleans nil))
   nil
   (NSol subtype
    "finite_sets[real].card(sturmtarski.Sol(sturmtarski.a, sturmtarski.m, sturmtarski.g, sturmtarski.k, sturmtarski.rel))"
    "{d: naturalnumbers.nat | EXISTS (enumsol: [naturalnumbers.below(d) -> (sturmtarski.Sol(sturmtarski.a, sturmtarski.m, sturmtarski.g, sturmtarski.k, sturmtarski.rel))]): functions[naturalnumbers.below(d), (sturmtarski.Sol(sturmtarski.a, sturmtarski.m, sturmtarski.g, sturmtarski.k, sturmtarski.rel))].bijective?(enumsol)}")))
 (sturm_tarski_unbounded_TCC1 0
  (sturm_tarski_unbounded_TCC1-1 nil 3618662006 ("" (subtype-tcc) nil nil)
   ((/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (sturm_tarski_unbounded subtype "(number_fields.-)(sturmtarski.m, 1)"
    "nat")))
 (sturm_tarski_unbounded_TCC2 0
  (sturm_tarski_unbounded_TCC2-1 nil 3618671324 ("" (subtype-tcc) nil nil)
   ((boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (> const-decl "bool" reals nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil) (/= const-decl "boolean" notequal nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (even? const-decl "bool" integers nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil))
   nil
   (sturm_tarski_unbounded subtype "sturmtarski.n(0)"
    "{m: naturalnumbers.nat | sturmtarski.p(0)(m) /= 0}")))
 (sturm_tarski_unbounded 0
  (sturm_tarski_unbounded-2 nil 3618670354
   ("" (skeep)
    ((""
      (case "NOT FORALL (nn:nat): (-1)^nn = IF even?(nn) THEN 1 ELSE -1 ENDIF")
      (("1" (hide-all-but 1)
        (("1" (induct "nn")
          (("1" (grind) nil nil)
           ("2" (skeep)
            (("2" (expand "^")
              (("2" (expand "expt" +)
                (("2" (lemma "odd_iff_even_succ")
                  (("2" (inst - "j")
                    (("2" (assert)
                      (("2" (replaces -1 :dir rl)
                        (("2" (lemma "even_or_odd")
                          (("2" (inst - "j") (("2" (ground) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (label "ftz" -1)
        (("2" (label "css" -2)
          (("2" (skoletin 1)
            (("2" (skoletin 1)
              (("2" (skoletin 1)
                (("2" (lemma "poly_sign_near_infinity")
                  (("2" (lemma "poly_sign_near_negative_infinity")
                    (("2"
                      (case "EXISTS (My:posreal): FORALL (j:below(m)): FORALL (x:real): x>=My
                                IMPLIES sign_ext(polynomial(p(j),n(j))(x)) = sign_ext(p(j)(n(j)))")
                      (("1"
                        (case "EXISTS (Mx:negreal): FORALL (j:below(m)): FORALL (x:real): x<=Mx
                                      IMPLIES sign_ext(polynomial(p(j),n(j))(x)) = sign_ext((-1)^n(j) * p(j)(n(j)))")
                        (("1" (skeep)
                          (("1" (skeep)
                            (("1" (hide (-3 -4))
                              (("1" (lemma "sturm_tarski")
                                (("1" (inst - "g" "k" "m" "n" "p" "Mx" "My")
                                  (("1" (assert)
                                    (("1" (split -1)
                                      (("1"
                                        (case
                                         "NOT FORALL (rel): NSol(p(0), n(0), g, k, rel, Mx, My, TRUE, TRUE) = NSol(p(0), n(0), g, k, rel)")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (expand "NSol" 1)
                                            (("1"
                                              (case
                                               "Sol(p(0), n(0), g, k, rel, Mx, My, TRUE, TRUE) =Sol(p(0), n(0), g, k, rel)")
                                              (("1" (assert) nil nil)
                                               ("2"
                                                (hide 2)
                                                (("2"
                                                  (decompose-equality 1)
                                                  (("2"
                                                    (expand "Sol" 1)
                                                    (("2"
                                                      (iff)
                                                      (("2"
                                                        (hide -1)
                                                        (("2"
                                                          (ground)
                                                          (("1"
                                                            (inst - "0")
                                                            (("1"
                                                              (inst - "x!1")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (replace -1)
                                                                  (("1"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -3)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (ground)
                                                                        (("1"
                                                                          (copy
                                                                           "css")
                                                                          (("1"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (inst
                                                                                 -
                                                                                 "0")
                                                                                (("1"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (inst -4 "0")
                                                            (("2"
                                                              (inst -4 "x!1")
                                                              (("2"
                                                                (assert)
                                                                (("2"
                                                                  (replace -1)
                                                                  (("2"
                                                                    (expand
                                                                     "sign_ext"
                                                                     -4)
                                                                    (("2"
                                                                      (lift-if)
                                                                      (("2"
                                                                        (ground)
                                                                        (("2"
                                                                          (copy
                                                                           "css")
                                                                          (("2"
                                                                            (expand
                                                                             "constructed_sturm_sequence?"
                                                                             -1)
                                                                            (("2"
                                                                              (flatten)
                                                                              (("2"
                                                                                (inst
                                                                                 -
                                                                                 "0")
                                                                                (("2"
                                                                                  (assert)
                                                                                  nil
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (inst-cp - ">")
                                          (("2"
                                            (inst - "<")
                                            (("2"
                                              (replaces -1)
                                              (("2"
                                                (replaces -1)
                                                (("2"
                                                  (case
                                                   "number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(Mx),
                                                              m - 1)`num = nsclow`num AND number_sign_changes(LAMBDA (i): polynomial(p(i), n(i))(My),
                                                              m - 1)`num = nschigh`num")
                                                  (("1"
                                                    (flatten)
                                                    (("1" (assert) nil nil))
                                                    nil)
                                                   ("2"
                                                    (hide (-1 2))
                                                    (("2"
                                                      (split 1)
                                                      (("1"
                                                        (lemma
                                                         "number_sign_changes_eq")
                                                        (("1"
                                                          (expand "nsclow" +)
                                                          (("1"
                                                            (inst
                                                             -
                                                             "LAMBDA (i): polynomial(p(i), n(i))(Mx)"
                                                             "LAMBDA (i):
                                               (IF even?(n(i)) THEN 1 ELSE -1 ENDIF) *
                                                p(i)(n(i))"
                                                             "m-1")
                                                            (("1"
                                                              (assert)
                                                              (("1"
                                                                (hide 2)
                                                                (("1"
                                                                  (skeep)
                                                                  (("1"
                                                                    (inst
                                                                     -
                                                                     "j")
                                                                    (("1"
                                                                      (inst
                                                                       -
                                                                       "Mx")
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (rewrite
                                                                           "ftz"
                                                                           -1)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (expand "nschigh" +)
                                                        (("2"
                                                          (lemma
                                                           "number_sign_changes_eq")
                                                          (("2"
                                                            (inst
                                                             -
                                                             "LAMBDA (i): polynomial(p(i), n(i))(My)"
                                                             "LAMBDA (i): p(i)(n(i))"
                                                             "m-1")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (inst
                                                                   -2
                                                                   "j")
                                                                  (("2"
                                                                    (inst
                                                                     -2
                                                                     "My")
                                                                    (("2"
                                                                      (assert)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (skeep)
                                        (("2"
                                          (inst - "j")
                                          (("2"
                                            (inst -3 "j")
                                            (("2"
                                              (inst - "Mx")
                                              (("2"
                                                (inst - "My")
                                                (("2"
                                                  (assert)
                                                  (("2"
                                                    (case "p(j)(n(j))/=0")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (expand "sign_ext")
                                                        (("1"
                                                          (lift-if)
                                                          (("1"
                                                            (assert)
                                                            (("1"
                                                              (lift-if)
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (lift-if)
                                                                  (("1"
                                                                    (assert)
                                                                    (("1"
                                                                      (lift-if)
                                                                      (("1"
                                                                        (assert)
                                                                        (("1"
                                                                          (ground)
                                                                          nil
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (copy "css")
                                                      (("2"
                                                        (expand
                                                         "constructed_sturm_sequence?"
                                                         -1)
                                                        (("2"
                                                          (flatten)
                                                          (("2"
                                                            (inst - "j")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (hide 2)
                          (("2"
                            (case "FORALL (pz:nat): pz<m IMPLIES EXISTS (Mx:negreal): FORALL (j:nat): j<=pz IMPLIES FORALL (x:real): x<=Mx IMPLIES sign_ext(polynomial(p(j), n(j))(x)) =
                                          sign_ext((-1) ^ n(j) * p(j)(n(j)))")
                            (("1" (inst - "m-1")
                              (("1" (assert)
                                (("1" (skeep)
                                  (("1" (inst + "Mx")
                                    (("1" (skeep)
                                      (("1"
                                        (inst - "j")
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (assert)
                                            (("1"
                                              (inst - "x")
                                              (("1" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide 2)
                              (("2" (induct "pz")
                                (("1" (hide -1)
                                  (("1" (inst - "p(0)" "n(0)")
                                    (("1" (case "p(0)(n(0))/=0")
                                      (("1"
                                        (flatten)
                                        (("1"
                                          (assert)
                                          (("1"
                                            (skeep)
                                            (("1"
                                              (inst + "-M")
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (inst - "x")
                                                    (("1"
                                                      (assert)
                                                      (("1"
                                                        (rewrite "ftz" +)
                                                        (("1"
                                                          (assert)
                                                          (("1"
                                                            (lift-if)
                                                            (("1"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (copy "css")
                                        (("2"
                                          (expand
                                           "constructed_sturm_sequence?"
                                           -1)
                                          (("2"
                                            (flatten)
                                            (("2"
                                              (inst - "0")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (skolem 1 "pz")
                                  (("2" (assert)
                                    (("2" (flatten)
                                      (("2"
                                        (assert)
                                        (("2"
                                          (hide -3)
                                          (("2"
                                            (inst - "p(1+pz)" "n(1+pz)")
                                            (("2"
                                              (assert)
                                              (("2"
                                                (split -3)
                                                (("1"
                                                  (skolem -1 "Mpz")
                                                  (("1"
                                                    (skeep -2)
                                                    (("1"
                                                      (inst + "min(Mx,-Mpz)")
                                                      (("1"
                                                        (skeep)
                                                        (("1"
                                                          (case "j = 1+pz")
                                                          (("1"
                                                            (skeep)
                                                            (("1"
                                                              (inst - "x")
                                                              (("1"
                                                                (assert)
                                                                (("1"
                                                                  (rewrite
                                                                   "ftz"
                                                                   +)
                                                                  (("1"
                                                                    (lift-if)
                                                                    (("1"
                                                                      (ground)
                                                                      nil
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (inst -2 "j")
                                                            (("2"
                                                              (assert)
                                                              (("2"
                                                                (skeep)
                                                                (("2"
                                                                  (inst
                                                                   -2
                                                                   "x")
                                                                  (("2"
                                                                    (assert)
                                                                    nil
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (assert)
                                                        (("2"
                                                          (expand "min" 1)
                                                          (("2"
                                                            (lift-if)
                                                            (("2"
                                                              (ground)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (copy "css")
                                                  (("2"
                                                    (expand
                                                     "constructed_sturm_sequence?"
                                                     -1)
                                                    (("2"
                                                      (flatten)
                                                      (("2"
                                                        (inst - "1+pz")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil)
                       ("2" (hide 2)
                        (("2"
                          (case "FORALL (pz:nat): pz<m IMPLIES EXISTS (My:posreal): FORALL (j:nat): j<=pz IMPLIES FORALL (x:real): x>=My IMPLIES sign_ext(polynomial(p(j), n(j))(x)) =
                                        sign_ext(p(j)(n(j)))")
                          (("1" (inst - "m-1")
                            (("1" (assert)
                              (("1" (skeep)
                                (("1" (inst + "My")
                                  (("1" (skeep)
                                    (("1" (inst - "j")
                                      (("1" (assert) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (hide 2)
                            (("2" (induct "pz")
                              (("1" (assert)
                                (("1" (hide -1)
                                  (("1" (inst - "p(0)" "n(0)")
                                    (("1" (assert)
                                      (("1"
                                        (split)
                                        (("1"
                                          (skeep)
                                          (("1"
                                            (inst + "M")
                                            (("1"
                                              (skeep)
                                              (("1"
                                                (skeep)
                                                (("1"
                                                  (inst - "x")
                                                  (("1" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (copy "css")
                                          (("2"
                                            (expand
                                             "constructed_sturm_sequence?"
                                             -1)
                                            (("2"
                                              (flatten)
                                              (("2"
                                                (inst - "0")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (skolem 1 "pz")
                                (("2" (flatten)
                                  (("2" (assert)
                                    (("2" (skeep)
                                      (("2"
                                        (hide -3)
                                        (("2"
                                          (inst - "p(1+pz)" "n(1+pz)")
                                          (("2"
                                            (split -)
                                            (("1"
                                              (skolem - "Mpz")
                                              (("1"
                                                (inst + "max(Mpz,My)")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (case "j = 1+pz")
                                                    (("1"
                                                      (skeep)
                                                      (("1"
                                                        (inst - "x")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (skeep)
                                                      (("2"
                                                        (inst -2 "j")
                                                        (("2"
                                                          (assert)
                                                          (("2"
                                                            (inst -2 "x")
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (copy "css")
                                              (("2"
                                                (expand
                                                 "constructed_sturm_sequence?"
                                                 -1)
                                                (("2"
                                                  (flatten)
                                                  (("2"
                                                    (inst - "1+pz")
                                                    (("2" (assert) nil nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((even? const-decl "bool" integers nil)
    (IF const-decl "[boolean, T, T -> T]" if_def nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (^ const-decl "real" exponentiation nil)
    (/= const-decl "boolean" notequal nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (>= const-decl "bool" reals nil)
    (int nonempty-type-eq-decl nil integers nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nzreal_exp application-judgement "nzreal" exponentiation nil)
    (int_exp application-judgement "int" exponentiation nil)
    (minus_odd_is_odd application-judgement "odd_int" integers nil)
    (pred type-eq-decl nil defined_types nil)
    (nat_induction formula-decl nil naturalnumbers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (int_expt application-judgement "int" exponentiation nil)
    (nzreal_expt application-judgement "nzreal" exponentiation nil)
    (expt def-decl "real" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (odd_iff_even_succ formula-decl nil naturalnumbers nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers nil)
    (even_or_odd formula-decl nil naturalnumbers nil)
    (TRUE const-decl "bool" booleans nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (poly_sign_near_infinity formula-decl nil more_polynomial_props reals)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (sign_ext const-decl
     "{sig: real | (sig = -1 OR sig = 1 OR sig = 0) AND sig * x = abs(x)}"
     sign reals)
    (sequence type-eq-decl nil sequences nil)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (nzreal_min application-judgement "{z: nzreal | z <= x AND z <= y}"
     real_defs nil)
    (min const-decl "{p: real | p <= m AND p <= n}" real_defs nil)
    (Mx skolem-const-decl "negreal" sturmtarski nil)
    (Mpz skolem-const-decl "posnat" sturmtarski nil)
    (+ const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (minus_nzint_is_nzint application-judgement "nzint" integers nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nsclow skolem-const-decl "NSC" sturmtarski nil)
    (upto nonempty-type-eq-decl nil naturalnumbers nil)
    (number_sign_changes_eq formula-decl nil number_sign_changes Sturm)
    (nschigh skolem-const-decl "NSC" sturmtarski nil)
    (real_le_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (constructed_sturm_sequence? const-decl "bool" sturmtarski nil)
    (NSol const-decl "{d: nat |
   EXISTS (enumsol:
             [below(d) -> (Sol(a, m, g, k, rel, x, y, bbelow, babove))]):
     bijective?(enumsol)}" sturmtarski nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (j skolem-const-decl "nat" sturmtarski nil)
    (m skolem-const-decl "posnat" sturmtarski nil)
    (int_plus_int_is_int application-judgement "int" integers nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (sturm_tarski formula-decl nil sturmtarski nil)
    (negreal nonempty-type-eq-decl nil real_types nil)
    (nonpos_real nonempty-type-eq-decl nil real_types nil)
    (<= const-decl "bool" reals nil)
    (max const-decl "{p: real | p >= m AND p >= n}" real_defs nil)
    (posreal_max application-judgement "{z: posreal | z >= x AND z >= y}"
     real_defs nil)
    (poly_sign_near_negative_infinity formula-decl nil more_polynomial_props
     reals)
    (NSol const-decl "{d: nat |
   EXISTS (enumsol: [below(d) -> (Sol(a, m, g, k, rel))]):
     bijective?(enumsol)}" sturmtarski nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (set type-eq-decl nil sets nil)
    (below type-eq-decl nil naturalnumbers nil)
    (< const-decl "bool" reals nil)
    (IFF const-decl "[bool, bool -> bool]" booleans nil)
    (id const-decl "(bijective?[T, T])" identity nil)
    (bijective? const-decl "bool" functions nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (NSC type-eq-decl nil number_sign_changes Sturm)
    (IMPLIES const-decl "[bool, bool -> bool]" booleans nil)
    (number_sign_changes def-decl "NSC" number_sign_changes Sturm)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (real_times_real_is_real application-judgement "real" reals nil))
   nil)
  (sturm_tarski_unbounded-1 nil 3618662032
   ("" (skeep)
    (("" (skoletin 1)
      (("" (skoletin 1)
        (("" (skoletin 1)
          (("" (case "EXISTS (x:real): polynomial(p(0),n(0))(x)/=0")
            (("1" (lemma "poly_sign_near_infinity")
              (("1" (lemma "poly_sign_near_negative_infinity")
                (("1"
                  (case "EXISTS (My:posreal): FORALL (j:below(m)): FORALL (x:real): x>=My
   IMPLIES sign_ext(polynomial(p(j),n(j))(x)) = sign_ext(p(j)(n(j)))")
                  (("1"
                    (case "EXISTS (Mx:negreal): FORALL (j:below(m)): FORALL (x:real): x<=Mx
   IMPLIES sign_ext(polynomial(p(j),n(j))(x)) = sign_ext((-1)^n(j) * p(j)(n(j)))")
                    (("1" (skeep)
                      (("1" (skeep)
                        (("1" (hide (-3 -4))
                          (("1" (lemma "sturm_tarski")
                            (("1" (inst - "g" "k" "m" "n" "p" "Mx" "My")
                              (("1" (assert)
                                (("1" (split -1)
                                  (("1"
                                    (case "NOT FORALL (rel): NSol(p(0), n(0), g, k, rel, Mx, My, TRUE, TRUE) = NSol(p(0), n(0), g, k, rel)")
                                    (("1" (skeep)
                                      (("1"
                                        (expand "NSol" 1)
                                        (("1"
                                          (case
                                           "Sol(p(0), n(0), g, k, rel, Mx, My, TRUE, TRUE) =Sol(p(0), n(0), g, k, rel)")
                                          (("1" (assert) nil nil)
                                           ("2"
                                            (hide 2)
                                            (("2"
                                              (decompose-equality 1)
                                              (("2"
                                                (expand "Sol" 1)
                                                (("2"
                                                  (iff)
                                                  (("2" (postpone) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (postpone) nil nil))
                                    nil)
                                   ("2" (postpone) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (postpone) nil nil))
                    nil)
                   ("2" (postpone) nil nil))
                  nil))
                nil))
              nil)
             ("2" (postpone) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil nil))
 (NSol_sq_gt 0
  (NSol_sq_gt-1 nil 3619869514
   ("" (skeep)
    (("" (lemma "card_disj_union[real]")
      (("" (expand "NSol")
        (("" (inst?)
          (("" (assert)
            (("" (split -1)
              (("1" (replaces -1 :dir rl)
                (("1"
                  (case "Sol(a, m, polynomial_prod(g, k, g, k), 2 * k, >) =
       union(Sol(a, m, g, k, <), Sol(a, m, g, k, >))")
                  (("1" (assert) nil nil)
                   ("2" (hide 3)
                    (("2" (decompose-equality 1)
                      (("2" (expand "union")
                        (("2" (expand "member")
                          (("2" (expand "Sol")
                            (("2" (rewrite "polynomial_prod_def" :dir rl)
                              (("2" (lemma "sq_gt_0")
                                (("2" (expand "sq")
                                  (("2" (inst?)
                                    (("2" (iff) (("2" (ground) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 3)
                (("2" (expand "disjoint?")
                  (("2" (expand "intersection")
                    (("2" (expand "member")
                      (("2" (expand "empty?")
                        (("2" (expand "member")
                          (("2" (skeep)
                            (("2" (expand "Sol")
                              (("2" (flatten) (("2" (assert) nil nil)) nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number nonempty-type-decl nil numbers nil)
    (card_disj_union formula-decl nil finite_sets nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (/= const-decl "boolean" notequal nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (< const-decl "bool" reals nil)
    (finite_union application-judgement "finite_set" finite_sets nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial_prod const-decl "real" polynomials reals)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (union const-decl "set" sets nil) (member const-decl "bool" sets nil)
    (polynomial_prod_def formula-decl nil polynomials reals)
    (real_times_real_is_real application-judgement "real" reals nil)
    (sq const-decl "nonneg_real" sq reals)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (sq_gt_0 formula-decl nil sq reals) (TRUE const-decl "bool" booleans nil)
    (finite_intersection1 application-judgement "finite_set" finite_sets nil)
    (disjoint? const-decl "bool" sets nil) (empty? const-decl "bool" sets nil)
    (intersection const-decl "set" sets nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nnint_plus_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (NSol const-decl "{d: nat |
   EXISTS (enumsol: [below(d) -> (Sol(a, m, g, k, rel))]):
     bijective?(enumsol)}" sturmtarski nil))
   shostak))
 (NSol_sq_lt 0
  (NSol_sq_lt-1 nil 3619869829
   ("" (skeep)
    (("" (expand "NSol")
      (("" (lemma "empty_card[real]")
        (("" (inst?)
          (("" (assert)
            (("" (hide 3)
              (("" (expand "Sol")
                (("" (expand "empty?")
                  (("" (expand "member")
                    (("" (skeep)
                      (("" (rewrite "polynomial_prod_def" :dir rl)
                        (("" (typepred "sq(polynomial(g,k)(x))")
                          (("" (expand "sq") (("" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((NSol const-decl "{d: nat |
   EXISTS (enumsol: [below(d) -> (Sol(a, m, g, k, rel))]):
     bijective?(enumsol)}" sturmtarski nil)
    (nnint_times_nnint_is_nnint application-judgement "nonneg_int" integers
     nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (set type-eq-decl nil sets nil)
    (is_finite const-decl "bool" finite_sets nil)
    (finite_set type-eq-decl nil finite_sets nil)
    (rational_pred const-decl "[real -> boolean]" rationals nil)
    (rational nonempty-type-from-decl nil rationals nil)
    (integer_pred const-decl "[rational -> boolean]" integers nil)
    (int nonempty-type-eq-decl nil integers nil)
    (>= const-decl "bool" reals nil)
    (nat nonempty-type-eq-decl nil naturalnumbers nil)
    (/= const-decl "boolean" notequal nil)
    (Sol const-decl "finite_set[real]" sturmtarski nil)
    (nonneg_int nonempty-type-eq-decl nil integers nil)
    (> const-decl "bool" reals nil)
    (posnat nonempty-type-eq-decl nil integers nil)
    (sequence type-eq-decl nil sequences nil)
    (polynomial_prod const-decl "real" polynomials reals)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (< const-decl "bool" reals nil) (empty? const-decl "bool" sets nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (sq const-decl "nonneg_real" sq reals)
    (polynomial const-decl "[real -> real]" polynomials reals)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_times_real_is_real application-judgement "real" reals nil)
    (polynomial_prod_def formula-decl nil polynomials reals)
    (member const-decl "bool" sets nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (empty_card formula-decl nil finite_sets nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil))
   shostak)))

