extended_float_rounding__interprets__ieee754_semantics
[
  radix_     : { i: posint | i=2 },
  precision_ : { i: posint | radix_=2 IMPLIES (i=53 OR i=24)},
  dExp_      : { d: posnat | radix_=2 IMPLIES (precision_=53 IMPLIES d=1074) AND (precision_=24 IMPLIES d=149) }
]
: THEORY BEGIN

  JUDGEMENT radix_ HAS_TYPE above(1)
  JUDGEMENT precision_ HAS_TYPE above(1)
  JUDGEMENT dExp_ HAS_TYPE { d: posnat | d > 2*(precision_-1) - 1 }

  IMPORTING extended_float_rounding[radix_,precision_,dExp_]

  round_er_eq_unb
  : LEMMA
    FORALL (x: er_real | NOT x = 0)
    : rnd_ef(x) = nzfinite(rnd_ucf(x))

  proj_round_er_eq_unb
  : LEMMA
    FORALL (x: er_real)
    : prj_ef(rnd_ef(x)) = prj_ucf(rnd_ucf(x))

  proj_round_on_er : THEOREM FORALL (x: er_real) : x = prj_ef(rnd_ef(x))

  round_is_injective_on_er
  : THEOREM FORALL (x, y: er_real): rnd_ef(x) = rnd_ef(y) IMPLIES x = y

  %
  %
  %

  ieee754_semantics_round_proj_interpretation_obligation_1: LEMMA
    FORALL (f: {x: efloat | nzfinite?(x)}):
      f = rnd_ef(prj_ef(f));

  ieee754_semantics_nzfinite?_def_interpretation_obligation_1
  : LEMMA FORALL (f: efloat): nzfinite?(f) = (is_finite?(f) AND prj_ef(f) /= 0)

%|- ieee754_semantics_nzfinite*_def_interpretation_obligation_1 : PROOF
%|- (then (skeep) (mapped-axiom-tcc) (grind-reals))
%|- QED
  
  ieee754_semantics_pfinite?_def_interpretation_obligation_1: LEMMA
    FORALL (f: efloat):
      nzpfinite?(f) = (is_finite?(f) AND
       prj_ef(f) > 0);

%|- ieee754_semantics_pfinite*_def_interpretation_obligation_1 : PROOF
%|- (then (skeep) (spread (mapped-axiom-tcc) ((grind-reals) (grind-reals))))
%|- QED
  
  ieee754_semantics_nfinite?_def_interpretation_obligation_1: LEMMA
    FORALL (f: efloat):
      nznfinite?(f) = (is_finite?(f) AND
       prj_ef(f) < 0);

%|- ieee754_semantics_nfinite*_def_interpretation_obligation_1 : PROOF
%|- (then (skeep) (spread (mapped-axiom-tcc) ((grind-reals) (grind-reals))))
%|- QED
  
  ieee754_semantics_add_inv_def_interpretation_obligation_1: LEMMA
    FORALL (f: {x: efloat | nzfinite?(x)}):
      prj_ef(flip_sign(f)) =
       -prj_ef(f);

%|- ieee754_semantics_add_inv_def_interpretation_obligation_1 : PROOF
%|- (then (skeep :preds? t) (expand "flip_sign") (expand "prj_ef")
%|-  (expand "prj_ucf") (use "FoppCorrect"))
%|- QED

END extended_float_rounding__interprets__ieee754_semantics
