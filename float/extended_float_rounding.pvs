extended_float_rounding
[ radix     : above(1),
  precision : above(1),
  dExp      : { d: posnat | d > 2*(precision-1) - 1 }
] : THEORY BEGIN

  IMPORTING extended_float_exactly_representable_reals[radix,precision,dExp]

  rtod_on_ranged_pos_is_in_range : LEMMA
  FORALL (x: real):
    x <= max_pos_value AND
    min_pos_value <= x
    IMPLIES rnd_ucf(x)`Fexp <= max_exp AND rnd_ucf(x)`Fnum /= 0;

  rtod_on_ranged_neg_is_in_range : LEMMA
  FORALL (x: real):
    -x <= -min_pos_value AND
    -max_pos_value <= -x
    IMPLIES rnd_ucf(x)`Fexp <= max_exp AND rnd_ucf(x)`Fnum /= 0;

  % Rounding

  rnd_ef_well_defined: LEMMA
    FORALL (x: real)
    : NOT x > max_pos_value AND
      NOT (0 <= x AND x < min_pos_value) AND
      NOT (-min_pos_value < x AND x < 0) AND NOT x < -max_pos_value
      IMPLIES rnd_ucf(x)`Fexp <= max_exp AND
      	      rnd_ucf(x)`Fnum /= 0;

  rnd_ef(x: real): efloat
  = IF    x < -max_pos_value THEN neginf
    ELSIF -min_pos_value < x AND x < 0 THEN negzero
    ELSIF 0 <= x AND x < min_pos_value THEN poszero
    ELSIF x >  max_pos_value THEN posinf
    ELSE nzfinite(rnd_ucf(x)) ENDIF

  % Projection
  
  prj_ef(f: (is_finite?)): real
  = IF zero?(f) THEN 0
    ELSE prj_ucf(val(f)) ENDIF

  % Properties

  round_zero: LEMMA rnd_ef(0) = poszero
  
  round_inverse_of_projection_on_nzfinite
  : LEMMA
    FORALL(f: (nzfinite?)): rnd_ef(prj_ef(f)) = f

  rtoed_er_is_finite
  : LEMMA FORALL (x: er_real)
    : is_finite?(rnd_ef(x))

  projection_on_nzfinite
  : LEMMA
    FORALL(f: (nzfinite?)): NOT prj_ef(f) = 0

  %

  flip_sign_j
  : JUDGEMENT
    FORALL(f: (nzfinite?))
    : Fopp(val(f))
      HAS_TYPE {v: unb_canonic_float[radix, precision, dExp] | Fexp(v) <= max_exp AND Fnum(v) /= 0}

  flip_sign(f: (nzfinite?)): efloat
  = nzfinite(Fopp(val(f)))
  AUTO_REWRITE+ flip_sign

END extended_float_rounding
