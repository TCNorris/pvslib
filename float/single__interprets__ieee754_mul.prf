(single__interprets__ieee754_mul
 (IMP_extended_float_mul_TCC1 0
  (IMP_extended_float_mul_TCC1-1 nil 3765621511 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_mul subtype "single__interprets__ieee754_data.radix_"
    "integers.above(1)")))
 (IMP_extended_float_mul_TCC2 0
  (IMP_extended_float_mul_TCC2-1 nil 3765621511 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_mul subtype
    "single__interprets__ieee754_data.precision_" "integers.above(1)")))
 (IMP_extended_float_mul_TCC3 0
  (IMP_extended_float_mul_TCC3-1 nil 3765621511 ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_mul subtype "single__interprets__ieee754_data.dExp_"
    "{d: integers.posnat | reals.>(d, 45)}")))
 (IMP_ieee754_mul_TCC1 0
  (IMP_ieee754_mul_TCC1-1 nil 3765621511 ("" (subtype-tcc) nil nil) nil nil
   (IMP_ieee754_mul subtype "single__interprets__ieee754_data.radix_"
    "ieee754_radix")))
 (IMP_ieee754_mul_TCC2 0
  (IMP_ieee754_mul_TCC2-1 nil 3765621511 ("" (subtype-tcc) nil nil) nil nil
   (IMP_ieee754_mul subtype "single__interprets__ieee754_data.precision_"
    "ieee754_format_parameters.ieee754_precision(2)")))
 (IMP_ieee754_mul_TCC3 0
  (IMP_ieee754_mul_TCC3-1 nil 3765621511 ("" (subtype-tcc) nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint" integers nil)
    (odd_plus_odd_is_even application-judgement "even_int" integers nil)
    (odd_minus_even_is_odd application-judgement "odd_int" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (nzint_times_nzint_is_nzint application-judgement "nzint" integers nil)
    (even_minus_odd_is_odd application-judgement "odd_int" integers nil)
    (emax const-decl "above(1)" extended_float nil)
    (max_exp const-decl "posint" extended_float nil))
   nil
   (IMP_ieee754_mul subtype "extended_float[2, 24, 149].emax"
    "ieee754_format_parameters.ieee754_maxExp(2, 24)")))
 (IMP_ieee754_mul_mul_correct__finite_TCC1 0
  (IMP_ieee754_mul_mul_correct__pInf_pInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((FtoR const-decl "real" float nil)
    (prj_ucf const-decl "real" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (^ const-decl "real" exponentiation nil)
    (max_exp const-decl "posint" extended_float nil)
    (max_pos_value const-decl "posreal" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (posint_times_posint_is_posint application-judgement "posint" integers
     nil)
    (int_times_int_is_int application-judgement "int" integers nil)
    (posnat_expt application-judgement "posnat" exponentiation nil)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__finite: AXIOM FORALL (f1: (ieee754_data.finite?), f2: (ieee754_data.finite?) | booleans.AND(ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nzfinite?(single__interprets__ieee754_mul.f1), ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nzfinite?(f2))): ieee754_mul.mul_ieee754(f1, f2) = ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].round(number_fields.*(ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].proj(f1), ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].proj(f2)))")))
 (IMP_ieee754_mul_mul_correct__nan_TCC1 0
  (IMP_ieee754_mul_mul_correct__nan_TCC1-1 "" 3790103975
   ("" (mapped-axiom-tcc) nil nil)
   ((fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (restrict const-decl "R" restrict nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nan_from const-decl "(nan?)" extended_float_operations_support nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nan: AXIOM FORALL (f1, f2: ieee754_data.datum): booleans.IMPLIES(booleans.OR(ieee754_data.NaN?(f1), ieee754_data.NaN?(f2)), ieee754_data.NaN?(ieee754_mul.mul_ieee754(f1, f2)))"))
  (IMP_ieee754_mul_mul_correct__pInf_pfinite_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (nan_from const-decl "(nan?)" extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nan: AXIOM FORALL (f1, f2: ieee754_data.datum): booleans.IMPLIES(booleans.OR(ieee754_data.NaN?(f1), ieee754_data.NaN?(f2)), ieee754_data.NaN?(ieee754_mul.mul_ieee754(f1, f2)))")))
 (IMP_ieee754_mul_mul_correct__nInf_nInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__pInf_pZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_nInf: AXIOM ieee754_mul.mul_ieee754(ieee754_data.nInf, ieee754_data.nInf) = ieee754_data.pInf")))
 (IMP_ieee754_mul_mul_correct__nInf_nfinite_TCC1 0
  (IMP_ieee754_mul_mul_correct__pInf_nZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((nznfinite? const-decl "bool" extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (posinf const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_nfinite: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(ieee754_data.nInf, f) = ieee754_data.pInf")))
 (IMP_ieee754_mul_mul_correct__nInf_nZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__nInf_nZero_TCC1-1 "" 3790103978
   ("" (mapped-axiom-tcc) nil nil)
   ((neginf const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_nZero: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.nInf, ieee754_data.nZero))"))
  (IMP_ieee754_mul_mul_correct__pInf_nfinite_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (qnan const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (neginf const-decl "efloat" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_nZero: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.nInf, ieee754_data.nZero))")))
 (IMP_ieee754_mul_mul_correct__nInf_pZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__pInf_nInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((neginf const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_pZero: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.nInf, ieee754_data.pZero))")))
 (IMP_ieee754_mul_mul_correct__nInf_pfinite_TCC1 0
  (IMP_ieee754_mul_mul_correct__nInf_pfinite_TCC1-1 "" 3790103980
   ("" (mapped-axiom-tcc) nil nil)
   ((nzpfinite? const-decl "bool" extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_pfinite: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(ieee754_data.nInf, f) = ieee754_data.nInf"))
  (IMP_ieee754_mul_mul_correct__pfinite_pInf_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_pfinite: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(ieee754_data.nInf, f) = ieee754_data.nInf")))
 (IMP_ieee754_mul_mul_correct__nInf_pInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__nInf_pInf_TCC1-1 "" 3790103981
   ("" (mapped-axiom-tcc) nil nil)
   ((neginf const-decl "efloat" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_pInf: AXIOM ieee754_mul.mul_ieee754(ieee754_data.nInf, ieee754_data.pInf) = ieee754_data.nInf"))
  (IMP_ieee754_mul_mul_correct__pfinite_pZero_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (neginf const-decl "efloat" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nInf_pInf: AXIOM ieee754_mul.mul_ieee754(ieee754_data.nInf, ieee754_data.pInf) = ieee754_data.nInf")))
 (IMP_ieee754_mul_mul_correct__nfinite_nInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__nfinite_nInf_TCC1-1 "" 3790103983
   ("" (mapped-axiom-tcc) nil nil)
   ((nznfinite? const-decl "bool" extended_float nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (neginf const-decl "efloat" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (posinf const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nfinite_nInf: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nInf) = ieee754_data.pInf"))
  (IMP_ieee754_mul_mul_correct__pfinite_nZero_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((posinf const-decl "efloat" extended_float nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nfinite_nInf: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nInf) = ieee754_data.pInf")))
 (IMP_ieee754_mul_mul_correct__nfinite_nZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__nfinite_nZero_TCC1-1 "" 3790103984
   ("" (mapped-axiom-tcc) nil nil)
   ((nznfinite? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (poszero const-decl "efloat" extended_float nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nfinite_nZero: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nZero) = ieee754_data.pZero"))
  (IMP_ieee754_mul_mul_correct__pfinite_nInf_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((negzero const-decl "efloat" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (poszero const-decl "efloat" extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nfinite_nZero: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nZero) = ieee754_data.pZero")))
 (IMP_ieee754_mul_mul_correct__nfinite_pZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__pZero_pInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((nznfinite? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (negzero const-decl "efloat" extended_float nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nfinite_pZero: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.pZero) = ieee754_data.nZero")))
 (IMP_ieee754_mul_mul_correct__nfinite_pInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__pZero_pZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((nznfinite? const-decl "bool" extended_float nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posinf const-decl "efloat" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (neginf const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nfinite_pInf: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.pInf) = ieee754_data.nInf")))
 (IMP_ieee754_mul_mul_correct__nZero_nInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__pZero_nZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((negzero const-decl "efloat" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nZero_nInf: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.nZero, ieee754_data.nInf))")))
 (IMP_ieee754_mul_mul_correct__nZero_nZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__pZero_nInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((negzero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nZero_nZero: AXIOM ieee754_mul.mul_ieee754(ieee754_data.nZero, ieee754_data.nZero) = ieee754_data.pZero")))
 (IMP_ieee754_mul_mul_correct__nZero_pZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__nZero_pInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((negzero const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nZero_pZero: AXIOM ieee754_mul.mul_ieee754(ieee754_data.nZero, ieee754_data.pZero) = ieee754_data.nZero")))
 (IMP_ieee754_mul_mul_correct__nZero_pInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__nZero_pZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((negzero const-decl "efloat" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__nZero_pInf: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.nZero, ieee754_data.pInf))")))
 (IMP_ieee754_mul_mul_correct__pZero_nInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__nZero_nZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((poszero const-decl "efloat" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pZero_nInf: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.pZero, ieee754_data.nInf))")))
 (IMP_ieee754_mul_mul_correct__pZero_nZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__nZero_nInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pZero_nZero: AXIOM ieee754_mul.mul_ieee754(ieee754_data.pZero, ieee754_data.nZero) = ieee754_data.nZero")))
 (IMP_ieee754_mul_mul_correct__pZero_pZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__pZero_pZero_TCC1-1 "" 3790103993
   ("" (mapped-axiom-tcc) nil nil)
   ((poszero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pZero_pZero: AXIOM ieee754_mul.mul_ieee754(ieee754_data.pZero, ieee754_data.pZero) = ieee754_data.pZero"))
  (IMP_ieee754_mul_mul_correct__nfinite_pInf_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pZero_pZero: AXIOM ieee754_mul.mul_ieee754(ieee754_data.pZero, ieee754_data.pZero) = ieee754_data.pZero")))
 (IMP_ieee754_mul_mul_correct__pZero_pInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__pZero_pInf_TCC1-1 "" 3790103994
   ("" (mapped-axiom-tcc) nil nil)
   ((poszero const-decl "efloat" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pZero_pInf: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.pZero, ieee754_data.pInf))"))
  (IMP_ieee754_mul_mul_correct__nfinite_pZero_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (qnan const-decl "efloat" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pZero_pInf: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.pZero, ieee754_data.pInf))")))
 (IMP_ieee754_mul_mul_correct__pfinite_nInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__pfinite_nInf_TCC1-1 "" 3790103995
   ("" (mapped-axiom-tcc) nil nil)
   ((nzpfinite? const-decl "bool" extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posinf const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (neginf const-decl "efloat" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pfinite_nInf: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nInf) = ieee754_data.nInf"))
  (IMP_ieee754_mul_mul_correct__nfinite_nZero_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (efloat type-decl nil extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pfinite_nInf: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nInf) = ieee754_data.nInf")))
 (IMP_ieee754_mul_mul_correct__pfinite_nZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__pfinite_nZero_TCC1-1 "" 3790103996
   ("" (mapped-axiom-tcc) nil nil)
   ((nzpfinite? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pfinite_nZero: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nZero) = ieee754_data.nZero"))
  (IMP_ieee754_mul_mul_correct__nfinite_nInf_TCC1-1 nil 3765621511
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((negzero const-decl "efloat" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (poszero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pfinite_nZero: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.nZero) = ieee754_data.nZero")))
 (IMP_ieee754_mul_mul_correct__pfinite_pZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__nInf_pInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((nzpfinite? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pfinite_pZero: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.pZero) = ieee754_data.pZero")))
 (IMP_ieee754_mul_mul_correct__pfinite_pInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__pfinite_pInf_TCC1-1 "" 3790103998
   ("" (mapped-axiom-tcc) nil nil)
   ((nzpfinite? const-decl "bool" extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posinf const-decl "efloat" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pfinite_pInf: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.pInf) = ieee754_data.pInf"))
  (IMP_ieee754_mul_mul_correct__nInf_pfinite_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) (("" (grind-reals) nil nil)) nil)
   ((nzpfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (posinf const-decl "efloat" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pfinite_pInf: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(f, ieee754_data.pInf) = ieee754_data.pInf")))
 (IMP_ieee754_mul_mul_correct__pInf_nInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__nInf_pZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((posinf const-decl "efloat" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pInf_nInf: AXIOM ieee754_mul.mul_ieee754(ieee754_data.pInf, ieee754_data.nInf) = ieee754_data.nInf")))
 (IMP_ieee754_mul_mul_correct__pInf_nfinite_TCC1 0
  (IMP_ieee754_mul_mul_correct__nInf_nZero_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((nznfinite? const-decl "bool" extended_float nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posinf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (neginf const-decl "efloat" extended_float nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pInf_nfinite: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].nfinite?)): ieee754_mul.mul_ieee754(ieee754_data.pInf, f) = ieee754_data.nInf")))
 (IMP_ieee754_mul_mul_correct__pInf_nZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__pInf_nZero_TCC1-1 "" 3790104002
   ("" (mapped-axiom-tcc) nil nil)
   ((posinf const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   shostak
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pInf_nZero: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.pInf, ieee754_data.nZero))"))
  (IMP_ieee754_mul_mul_correct__nInf_nfinite_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc)
    (("" (use "nzpfinite_projection") (("" (assert) nil nil)) nil)) nil)
   ((posinf const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pInf_nZero: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.pInf, ieee754_data.nZero))")))
 (IMP_ieee754_mul_mul_correct__pInf_pZero_TCC1 0
  (IMP_ieee754_mul_mul_correct__nInf_nInf_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((posinf const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (zero_exclusive formula-decl nil extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pInf_pZero: AXIOM ieee754_data.NaN?(ieee754_mul.mul_ieee754(ieee754_data.pInf, ieee754_data.pZero))")))
 (IMP_ieee754_mul_mul_correct__pInf_pfinite_TCC1 0
  (IMP_ieee754_mul_mul_correct__nan_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((nzpfinite? const-decl "bool" extended_float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (poszero const-decl "efloat" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (posinf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pInf_pfinite: AXIOM FORALL (f: (ieee754_semantics[ieee754_mul.b, ieee754_mul.p, ieee754_mul.emax].pfinite?)): ieee754_mul.mul_ieee754(ieee754_data.pInf, f) = ieee754_data.pInf")))
 (IMP_ieee754_mul_mul_correct__pInf_pInf_TCC1 0
  (IMP_ieee754_mul_mul_correct__finite_TCC1-1 nil 3765621511
   ("" (mapped-axiom-tcc) nil nil)
   ((posinf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (negzero const-decl "efloat" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (nzpfinite? const-decl "bool" extended_float nil)
    (mul_non_finite const-decl "efloat" extended_float_mul nil)
    (mul_zero const-decl "efloat" extended_float_mul nil)
    (nan2 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (OR const-decl "[bool, bool -> bool]" booleans nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (trivial?2 const-decl "[real -> [real -> bool]]"
     extended_float_operations_support nil)
    (trivial?1 const-decl "[real -> bool]" extended_float_operations_support
     nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__binary nil)
    (mul_ed const-decl "efloat" extended_float_mul nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (even_times_int_is_even application-judgement "even_int" integers nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint" integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_mul mapped-axiom
    "ieee754_mul[2, 24, extended_float[2, 24, 149].emax]{{ sem_th := single__interprets__ieee754_semantics, mul_ieee754 := mul_ed }}.ieee754_mul"
    "mul_correct__pInf_pInf: AXIOM ieee754_mul.mul_ieee754(ieee754_data.pInf, ieee754_data.pInf) = ieee754_data.pInf"))))

