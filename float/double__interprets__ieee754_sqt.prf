(double__interprets__ieee754_sqt
 (IMP_extended_float_sqt_TCC1 0
  (IMP_extended_float_sqt_TCC1-1 nil 3765658843
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_sqt subtype
    "double__interprets__ieee754_data.radix_" "integers.above(1)")))
 (IMP_extended_float_sqt_TCC2 0
  (IMP_extended_float_sqt_TCC2-1 nil 3765658843
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_sqt subtype
    "double__interprets__ieee754_data.precision_"
    "integers.above(1)")))
 (IMP_extended_float_sqt_TCC3 0
  (IMP_extended_float_sqt_TCC3-1 nil 3765658843
   ("" (subtype-tcc) nil nil)
   ((real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil))
   nil
   (IMP_extended_float_sqt subtype
    "double__interprets__ieee754_data.dExp_"
    "{d: integers.posnat | reals.>(d, 103)}")))
 (IMP_ieee754_sqt_TCC1 0
  (IMP_ieee754_sqt_TCC1-1 nil 3765658843 ("" (subtype-tcc) nil nil) nil
   nil
   (IMP_ieee754_sqt subtype "double__interprets__ieee754_data.radix_"
    "ieee754_radix")))
 (IMP_ieee754_sqt_TCC2 0
  (IMP_ieee754_sqt_TCC2-1 nil 3765658843 ("" (subtype-tcc) nil nil) nil
   nil
   (IMP_ieee754_sqt subtype
    "double__interprets__ieee754_data.precision_"
    "ieee754_format_parameters.ieee754_precision(2)")))
 (IMP_ieee754_sqt_TCC3 0
  (IMP_ieee754_sqt_TCC3-1 nil 3765658843 ("" (subtype-tcc) nil nil)
   ((int_minus_int_is_int application-judgement "int" integers nil)
    (nnint_plus_posint_is_posint application-judgement "posint"
     integers nil)
    (even_plus_odd_is_odd application-judgement "odd_int" integers nil)
    (even_minus_even_is_even application-judgement "even_int" integers
     nil)
    (int_times_even_is_even application-judgement "even_int" integers
     nil)
    (odd_minus_odd_is_even application-judgement "even_int" integers
     nil)
    (emax const-decl "above(1)" extended_float nil)
    (max_exp const-decl "posint" extended_float nil))
   nil
   (IMP_ieee754_sqt subtype "extended_float[2, 53, 1074].emax"
    "ieee754_format_parameters.ieee754_maxExp(2, 53)")))
 (IMP_ieee754_sqt_sqt_correct__nan_TCC1 0
  (IMP_ieee754_sqt_sqt_correct__nan_TCC1-1 "" 3790104515
   ("" (mapped-axiom-tcc) nil nil) nil shostak
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__nan: AXIOM FORALL (f1: ieee754_data.datum): booleans.IMPLIES(ieee754_data.NaN?(f1), ieee754_data.NaN?(ieee754_sqt.sqt_ieee754(f1)))"))
  (IMP_ieee754_sqt_sqt_correct__finite_TCC1-1 nil 3765658843
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (sqt_ed const-decl "efloat" extended_float_sqt nil)
    (nan_from1 const-decl "(nan?)" extended_float_operations_support
     nil)
    (sqt_non_finite const-decl "efloat" extended_float_sqt nil)
    (sqt_zero const-decl "efloat" extended_float_sqt nil)
    (nan1 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float
     nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__unary nil))
   nil
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__nan: AXIOM FORALL (f1: ieee754_data.datum): booleans.IMPLIES(ieee754_data.NaN?(f1), ieee754_data.NaN?(ieee754_sqt.sqt_ieee754(f1)))")))
 (IMP_ieee754_sqt_sqt_correct__nInf_TCC1 0
  (IMP_ieee754_sqt_sqt_correct__nan_TCC1-1 nil 3765658843
   ("" (mapped-axiom-tcc) nil nil)
   ((neginf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (qnan const-decl "efloat" extended_float nil)
    (sqt_non_finite const-decl "efloat" extended_float_sqt nil)
    (sqt_zero const-decl "efloat" extended_float_sqt nil)
    (nan1 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float
     nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__unary nil)
    (sqt_ed const-decl "efloat" extended_float_sqt nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__nInf: AXIOM ieee754_data.NaN?(ieee754_sqt.sqt_ieee754(ieee754_data.nInf))")))
 (IMP_ieee754_sqt_sqt_correct__nfinite_TCC1 0
  (IMP_ieee754_sqt_sqt_correct__nInf_TCC1-1 nil 3765658843
   ("" (mapped-axiom-tcc) (("" (grind-reals) nil nil)) nil)
   ((pos_times_ge formula-decl nil real_props nil)
    (minus_nzreal_is_nzreal application-judgement "nzreal" real_types
     nil)
    (posint_times_posint_is_posint application-judgement "posint"
     integers nil)
    (posnat_expt application-judgement "posnat" exponentiation nil)
    (^ const-decl "real" exponentiation nil)
    (max_exp const-decl "posint" extended_float nil)
    (max_pos_value const-decl "posreal" extended_float nil)
    (rat_times_rat_is_rat application-judgement "rat" rationals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])"
     real_props nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__unary nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (nnreal type-eq-decl nil real_types nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (sqt_non_finite const-decl "efloat" extended_float_sqt nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (restrict const-decl "R" restrict nil)
    (nan1 const-decl "efloat" extended_float_operations_support nil)
    (sqt_zero const-decl "efloat" extended_float_sqt nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (prj_ucf const-decl "real" extended_float nil)
    (FtoR const-decl "real" float nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (efloat type-decl nil extended_float nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (sqt_ed const-decl "efloat" extended_float_sqt nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_exp application-judgement "posint" exponentiation nil))
   nil
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__nfinite: AXIOM FORALL (f: (ieee754_semantics[ieee754_sqt.b, ieee754_sqt.p, ieee754_sqt.emax].nfinite?)): ieee754_data.NaN?(ieee754_sqt.sqt_ieee754(f))")))
 (IMP_ieee754_sqt_sqt_correct__nZero_TCC1 0
  (IMP_ieee754_sqt_sqt_correct__nZero_TCC1-1 nil 3791301983
   ("" (mapped-axiom-tcc)
    (("" (expand "sqt_zero")
      (("" (expand "poszero")
        (("" (expand "negzero")
          (("" (lift-if 1) (("" (assert) nil nil)) nil)) nil))
        nil))
      nil))
    nil)
   ((posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil)
    (negzero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (poszero const-decl "efloat" extended_float nil)
    (sqt_zero const-decl "efloat" extended_float_sqt nil)
    (nan1 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (sqt_non_finite const-decl "efloat" extended_float_sqt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float
     nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__unary nil)
    (sqt_ed const-decl "efloat" extended_float_sqt nil))
   nil
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__nZero: AXIOM ieee754_sqt.sqt_ieee754(ieee754_data.nZero) = ieee754_data.nZero"))
  (IMP_ieee754_sqt_sqt_correct__nfinite_TCC1-1 nil 3765658843
   ("" (then (mapped-axiom-tcc) (grind-reals)))
   ((sqt_ed const-decl "efloat" extended_float_sqt nil)
    (is_finite? const-decl "bool" extended_float nil)
    (zero_inclusive formula-decl nil extended_float nil)
    (efloat type-decl nil extended_float nil)
    (nznfinite? const-decl "bool" extended_float nil)
    (FtoR const-decl "real" float nil)
    (prj_ucf const-decl "real" extended_float nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (sqt_zero const-decl "efloat" extended_float_sqt nil)
    (nan1 const-decl "efloat" extended_float_operations_support nil)
    (sqt_non_finite const-decl "efloat" extended_float_sqt nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float
     nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__unary nil)
    (max_pos_value const-decl "posreal" extended_float nil)
    (max_exp const-decl "posint" extended_float nil))
   nil
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__nZero: AXIOM ieee754_sqt.sqt_ieee754(ieee754_data.nZero) = ieee754_data.nZero")))
 (IMP_ieee754_sqt_sqt_correct__pZero_TCC1 0
  (IMP_ieee754_sqt_sqt_correct__pZero_TCC1-1 "" 3790104519
   ("" (mapped-axiom-tcc) nil nil) nil shostak
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__pZero: AXIOM ieee754_sqt.sqt_ieee754(ieee754_data.pZero) = ieee754_data.pZero"))
  (IMP_ieee754_sqt_sqt_correct__pInf_TCC1-1 nil 3765658843
   ("" (mapped-axiom-tcc)
    (("" (expand "sqt_zero")
      (("" (lift-if 1)
        (("" (expand "negzero") (("" (propax) nil nil)) nil)) nil))
      nil))
    nil)
   ((poszero const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (sqt_zero const-decl "efloat" extended_float_sqt nil)
    (nan1 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (sqt_non_finite const-decl "efloat" extended_float_sqt nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float
     nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__unary nil)
    (sqt_ed const-decl "efloat" extended_float_sqt nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__pZero: AXIOM ieee754_sqt.sqt_ieee754(ieee754_data.pZero) = ieee754_data.pZero")))
 (IMP_ieee754_sqt_sqt_correct__pInf_TCC1 0
  (IMP_ieee754_sqt_sqt_correct__pZero_TCC1-1 nil 3765658843
   ("" (mapped-axiom-tcc) nil nil)
   ((posinf const-decl "efloat" extended_float nil)
    (is_finite? const-decl "bool" extended_float nil)
    (neginf const-decl "efloat" extended_float nil)
    (inf_exclusive formula-decl nil extended_float nil)
    (sqt_non_finite const-decl "efloat" extended_float_sqt nil)
    (sqt_zero const-decl "efloat" extended_float_sqt nil)
    (nan1 const-decl "efloat" extended_float_operations_support nil)
    (restrict const-decl "R" restrict nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (sqrt const-decl "{nnz: nnreal | nnz * nnz = nnx}" sqrt reals)
    (* const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (= const-decl "[T, T -> boolean]" equalities nil)
    (nnreal type-eq-decl nil real_types nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (>= const-decl "bool" reals nil)
    (rnd_ef const-decl "efloat" extended_float_rounding nil)
    (prj_ef const-decl "real" extended_float_rounding nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields
     nil)
    (number nonempty-type-decl nil numbers nil)
    (zero? adt-recognizer-decl "[efloat -> boolean]" extended_float
     nil)
    (is_numeric? const-decl "bool" extended_float nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (efloat type-decl nil extended_float nil)
    (fun_fp const-decl "fpnumber" ieee754_operation_scheme__unary nil)
    (sqt_ed const-decl "efloat" extended_float_sqt nil)
    (posint_exp application-judgement "posint" exponentiation nil)
    (posrat_exp application-judgement "posrat" exponentiation nil)
    (posint_plus_nnint_is_posint application-judgement "posint"
     integers nil)
    (int_minus_int_is_int application-judgement "int" integers nil)
    (even_times_int_is_even application-judgement "even_int" integers
     nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (IMP_ieee754_sqt mapped-axiom
    "ieee754_sqt[2, 53, extended_float[2, 53, 1074].emax]{{ sem_th := double__interprets__ieee754_semantics, sqt_ieee754 := sqt_ed }}.ieee754_sqt"
    "sqt_correct__pInf: AXIOM ieee754_sqt.sqt_ieee754(ieee754_data.pInf) = ieee754_data.pInf"))))

