(continuity_subspace
 (IMP_metric_continuity_TCC1 0
  (IMP_metric_continuity_TCC1-1 nil 3431795043
   ("" (typepred "d1")
    (("" (expand "restrict")
      (("" (expand "metric?")
        (("" (flatten)
          (("" (split)
            (("1" (expand "metric_zero?")
              (("1" (skosimp*) (("1" (inst - "x!1" "y!1") nil nil)) nil)) nil)
             ("2" (expand "metric_symmetric?")
              (("2" (skosimp) (("2" (inst - "x!1" "y!1") nil nil)) nil)) nil)
             ("3" (expand "metric_triangle?")
              (("3" (skosimp) (("3" (inst - "x!1" "y!1" "z!1") nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((restrict const-decl "R" restrict nil)
    (metric_triangle? const-decl "bool" metric_def nil)
    (metric_symmetric? const-decl "bool" metric_def nil)
    (metric_zero? const-decl "bool" metric_def nil)
    (T3 formal-subtype-decl nil continuity_subspace nil)
    (T3_pred const-decl "[T1 -> boolean]" continuity_subspace nil)
    (boolean nonempty-type-decl nil booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (T1 formal-type-decl nil continuity_subspace nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (>= const-decl "bool" reals nil) (nnreal type-eq-decl nil real_types nil)
    (metric? const-decl "bool" metric_def nil)
    (metric nonempty-type-eq-decl nil metric_def nil)
    (d1 formal-const-decl "metric[T1]" continuity_subspace nil))
   nil
   (IMP_metric_continuity subtype
    "(restrict[[continuity_subspace.T1, continuity_subspace.T1], [T3, T3], nnreal].restrict(continuity_subspace.d1))"
    "metric[T3]"))))

