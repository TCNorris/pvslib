(maxsort
 (move_max_TCC1 0
  (move_max_TCC1-1 nil 3654519242
   ("" (skeep) (("" (typepred "i" "j") (("" (assert) nil nil)) nil)) nil) nil
   nil
   (move_max subtype "(number_fields.-)(maxsort.j, maxsort.i)"
    "naturalnumber")))
 (move_max_TCC2 0
  (move_max_TCC2-1 nil 3654519242 ("" (subtype-tcc) nil nil) nil nil
   (move_max subtype "(number_fields.-)(maxsort.i, 1)" "below[length(v)]")))
 (move_max_TCC3 0
  (move_max_TCC3-1 nil 3654519242 ("" (subtype-tcc) nil nil) nil nil
   (move_max subtype "maxsort.i" "below[length(v)]")))
 (move_max_TCC4 0
  (move_max_TCC4-1 nil 3654519242 ("" (subtype-tcc) nil nil) nil nil
   (move_max subtype "(number_fields.-)(maxsort.i, 1)" "below[length(v)]")))
 (move_max_TCC5 0
  (move_max_TCC5-1 nil 3654519242 ("" (termination-tcc) nil nil) nil nil
   (move_max subtype "maxsort.i" "below[length(v)]")))
 (move_max_TCC6 0
  (move_max_TCC6-1 nil 3654519242 ("" (termination-tcc) nil nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (< const-decl "bool" sorting nil)
    (swap const-decl "finite_sequence[T]" sorting_seq nil))
   nil
   (move_max subtype "maxsort.j" "below[length(swap[T, <=](v)(i - 1, i))]")))
 (move_max_TCC7 0
  (move_max_TCC7-1 nil 3654520497 ("" (termination-tcc) nil nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (< const-decl "bool" sorting nil))
   nil
   (move_max subtype "(number_fields.+)(maxsort.i, 1)"
    "{i_1: integers.posnat | reals.>=(maxsort.j, i_1)}")))
 (move_max_TCC8 0
  (move_max_TCC8-1 nil 3654522617 ("" (termination-tcc) nil nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (< const-decl "bool" sorting nil))
   nil
   (move_max termination
    "maxsort.move_max(sorting_seq[maxsort.T, maxsort.<=].swap(maxsort.v)((number_fields.-)(maxsort.i, 1), maxsort.i))(maxsort.j, (number_fields.+)(maxsort.i, 1))"
    "nil")))
 (move_max_TCC9 0
  (move_max_TCC9-1 nil 3654522617 ("" (subtype-tcc) nil nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (< const-decl "bool" sorting nil))
   nil
   (move_max subtype "(number_fields.+)(maxsort.i, 1)"
    "{i: integers.posnat | reals.>=(maxsort.j, i)}")))
 (move_max_TCC10 0
  (move_max_TCC10-1 nil 3654522617 ("" (termination-tcc) nil nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (< const-decl "bool" sorting nil))
   nil
   (move_max termination
    "maxsort.move_max(maxsort.v)(maxsort.j, (number_fields.+)(maxsort.i, 1))"
    "nil")))
 (move_max_length_TCC1 0
  (move_max_length_TCC1-1 nil 3654523278 ("" (subtype-tcc) nil nil) nil nil
   (move_max_length subtype "maxsort.i"
    "{i: integers.posnat | reals.>=(maxsort.j, i)}")))
 (move_max_length 0
  (move_max_length-1 nil 3654522826
   ("" (measure-induct+ "j-i" ("v" "i" "j"))
    (("1" (case "length(x!1) < 2")
      (("1" (hide -2) (("1" (grind) nil nil)) nil)
       ("2" (expand "move_max" 2)
        (("2" (expand "finseq_appl")
          (("2" (lift-if)
            (("2" (prop)
              (("1" (hide-all-but (1 2))
                (("1" (expand "swap") (("1" (propax) nil nil)) nil)) nil)
               ("2" (inst -2 "swap(x!1)(x!2 - 1, x!2)" "x!2+1" "x!3")
                (("1" (assert)
                  (("1" (expand "swap" -2 2) (("1" (propax) nil nil)) nil))
                  nil)
                 ("2" (hide 2) (("2" (grind) nil nil)) nil))
                nil)
               ("3" (inst -1 "x!1" "x!2+1" "x!3")
                (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (typepred "x!1`3" "x!1`2") (("2" (propax) nil nil)) nil)
     ("3" (assert) nil nil))
    nil)
   ((swap const-decl "finite_sequence[T]" sorting_seq nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (< const-decl "bool" sorting nil)
    (total_preorder? const-decl "bool" total_preorder nil))
   shostak))
 (move_max_preserves_out_TCC1 0
  (move_max_preserves_out_TCC1-1 nil 3654528993
   ("" (skeep)
    (("" (typepred "k") (("" (rewrite "move_max_length") nil nil)) nil)) nil)
   nil nil
   (move_max_preserves_out subtype "maxsort.k"
    "below[length(move_max(v)(j, i))]")))
 (move_max_preserves_out 0
  (move_max_preserves_out-1 nil 3654616554
   ("" (auto-rewrite "finseq_appl")
    (("" (assert)
      (("" (measure-induct+ "j - i" ("v" "i" "j"))
        (("1" (skeep)
          (("1" (case "length(x!1) < 2")
            (("1" (hide -2) (("1" (grind) nil nil)) nil)
             ("2" (expand "move_max" 2)
              (("2" (lift-if)
                (("2" (assert)
                  (("2" (prop)
                    (("1" (hide -3)
                      (("1" (typepred "k") (("1" (grind) nil nil)) nil)) nil)
                     ("2" (inst -2 "swap(x!1)(x!2 - 1, x!2)" "x!2+1" "x!3")
                      (("1" (inst -2 "k")
                        (("1" (assert)
                          (("1" (replace -2 1 rl)
                            (("1" (hide -2)
                              (("1" (grind)
                                (("1" (typepred "k") (("1" (assert) nil nil))
                                  nil)
                                 ("2" (typepred "k") (("2" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (typepred "k")
                          (("2" (hide 2) (("2" (grind) nil nil)) nil)) nil))
                        nil)
                       ("2" (hide 2)
                        (("2" (expand "swap") (("2" (grind) nil nil)) nil))
                        nil))
                      nil)
                     ("3" (inst -1 "x!1" "1+x!2" "x!3")
                      (("1" (inst -1 "k")
                        (("1" (assert) nil nil)
                         ("2" (hide 3)
                          (("2" (typepred "k") (("2" (grind) nil nil)) nil))
                          nil))
                        nil)
                       ("2" (hide 3) (("2" (grind) nil nil)) nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (rewrite "move_max_length") (("2" (assert) nil nil)) nil)
         ("3" (skeep)
          (("3" (rewrite "move_max_length") (("3" (assert) nil nil)) nil))
          nil)
         ("4" (skeep) (("4" (assert) nil nil)) nil) ("5" (assert) nil nil)
         ("6" (rewrite "move_max_length") (("6" (assert) nil nil)) nil)
         ("7" (skeep)
          (("7" (rewrite "move_max_length") (("7" (assert) nil nil)) nil))
          nil)
         ("8" (assert) nil nil)
         ("9" (rewrite "move_max_length") (("9" (assert) nil nil)) nil)
         ("10" (skeep) (("10" (assert) nil nil)) nil)
         ("11" (skeep)
          (("11" (rewrite "move_max_length") (("11" (assert) nil nil)) nil))
          nil)
         ("12" (rewrite "move_max_length") (("12" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((swap const-decl "finite_sequence[T]" sorting_seq nil)
    (< const-decl "bool" sorting nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (total_preorder? const-decl "bool" total_preorder nil))
   shostak))
 (move_max_preserves_TCC1 0
  (move_max_preserves_TCC1-1 nil 3654528357
   ("" (skeep)
    (("" (typepred "l")
      (("" (rewrite "move_max_length") (("" (grind) nil nil)) nil)) nil))
    nil)
   nil nil
   (move_max_preserves subtype "maxsort.l"
    "below[length(move_max(v)(j, i))]")))
 (move_max_preserves 0
  (move_max_preserves-2 nil 3654618054
   ("" (measure-induct+ "j - i" ("v" "i" "j"))
    (("1" (expand "finseq_appl")
      (("1" (skeep)
        (("1" (case "length(x!1) < 2")
          (("1" (hide -2) (("1" (grind) nil nil)) nil)
           ("2" (expand "move_max" 2)
            (("2" (expand "finseq_appl")
              (("2" (case "x!2 = x!3")
                (("1" (assert)
                  (("1" (case "x!1`seq(x!2 - 1) > x!1`seq(x!2)")
                    (("1" (assert)
                      (("1" (typepred "k")
                        (("1" (hide -6)
                          (("1" (case "k=x!2")
                            (("1" (replaces -1)
                              (("1" (inst 2 "x!2-1")
                                (("1" (expand "swap")
                                  (("1" (expand "finseq_appl")
                                    (("1" (propax) nil nil)) nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (case "k=x!2-1")
                              (("1" (replaces -1)
                                (("1" (inst 3 "x!2")
                                  (("1" (expand "swap")
                                    (("1" (expand "finseq_appl")
                                      (("1" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (inst 4 "k")
                                (("2" (expand "swap")
                                  (("2" (expand "finseq_appl")
                                    (("2" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert)
                      (("2" (hide -2) (("2" (inst 3 "k") nil nil)) nil)) nil))
                    nil))
                  nil)
                 ("2" (assert)
                  (("2" (case "x!1`seq(x!2 - 1) > x!1`seq(x!2)")
                    (("1" (assert)
                      (("1" (typepred "k")
                        (("1" (case "k = x!2 - 1")
                          (("1" (replaces -1)
                            (("1" (inst?)
                              (("1" (inst -5 "x!2")
                                (("1" (assert)
                                  (("1" (skeep)
                                    (("1" (expand "swap" -5 1)
                                      (("1"
                                        (expand "finseq_appl")
                                        (("1" (inst 3 "l") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("2" (hide -4 4)
                                  (("2" (expand "swap")
                                    (("2" (grind) nil nil)) nil))
                                  nil))
                                nil)
                               ("2" (hide -4 4)
                                (("2" (expand "swap") (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2"
                            (inst -5 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2"
                             "x!3")
                            (("1" (inst -5 "k")
                              (("1" (assert)
                                (("1" (skeep)
                                  (("1" (expand "swap" -5 1)
                                    (("1" (expand "finseq_appl")
                                      (("1"
                                        (lift-if)
                                        (("1"
                                          (prop)
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (hide -1)
                                              (("1"
                                                (lemma
                                                 "move_max_preserves_out")
                                                (("1"
                                                  (expand "finseq_appl")
                                                  (("1"
                                                    (inst
                                                     -1
                                                     "swap(x!1)(x!2 - 1, x!2)"
                                                     "1 + x!2"
                                                     "x!3"
                                                     "x!2 - 1")
                                                    (("1"
                                                      (expand "swap" -1 1)
                                                      (("1"
                                                        (expand "finseq_appl")
                                                        (("1"
                                                          (inst 4 "x!2 - 1")
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("2"
                                                      (hide -4 5)
                                                      (("2"
                                                        (expand "swap")
                                                        (("2"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil)
                                                     ("3"
                                                      (hide -4 5)
                                                      (("3"
                                                        (expand "swap")
                                                        (("3"
                                                          (grind)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (inst 5 "l") nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide -4 5)
                                (("2" (expand "swap") (("2" (grind) nil nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -4 5)
                              (("2" (expand "swap") (("2" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert)
                      (("2" (typepred "k")
                        (("2" (case "k = x!2-1")
                          (("1" (replaces -1)
                            (("1" (hide -4)
                              (("1" (lemma "move_max_preserves_out")
                                (("1" (expand "finseq_appl")
                                  (("1"
                                    (inst -1 "x!1" "1 + x!2" "x!3" "x!2 - 1")
                                    (("1" (inst 4 "x!2 -1") nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst -4 "x!1" "1 + x!2" "x!3")
                            (("2" (inst -4 "k")
                              (("1" (assert)
                                (("1" (skeep) (("1" (inst 5 "l") nil nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skeep)
      (("2" (rewrite "move_max_length") (("2" (assert) nil nil)) nil)) nil)
     ("3" (skeep)
      (("3" (rewrite "move_max_length") (("3" (assert) nil nil)) nil)) nil)
     ("4" (skeep) (("4" (assert) nil nil)) nil)
     ("5" (skeep) (("5" (assert) nil nil)) nil)
     ("6" (skeep)
      (("6" (rewrite "move_max_length") (("6" (assert) nil nil)) nil)) nil)
     ("7" (skeep)
      (("7" (rewrite "move_max_length")
        (("7" (typepred "l1") (("7" (assert) nil nil)) nil)) nil))
      nil)
     ("8" (skeep) (("8" (assert) nil nil)) nil)
     ("9" (skeep)
      (("9" (rewrite "move_max_length") (("9" (assert) nil nil)) nil)) nil)
     ("10" (skeep) (("10" (assert) nil nil)) nil)
     ("11" (skeep)
      (("11" (rewrite "move_max_length") (("11" (assert) nil nil)) nil)) nil)
     ("12" (rewrite "move_max_length") (("12" (assert) nil nil)) nil))
    nil)
   ((swap const-decl "finite_sequence[T]" sorting_seq nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (total_preorder? const-decl "bool" total_preorder nil))
   nil)
  (move_max_preserves-1 nil 3654617575
   ("" (measure-induct+ "j - 1" ("v" "i" "j"))
    (("1" (expand "finseq_appl")
      (("1" (skeep)
        (("1" (case "length(x!1) < 2")
          (("1" (hide -2) (("1" (grind) nil nil)) nil)
           ("2" (expand "move_max" 2)
            (("2" (expand "finseq_appl")
              (("2" (case "x!2 = x!3")
                (("1" (assert)
                  (("1" (case "x!1`seq(x!2 - 1) > x!1`seq(x!2)")
                    (("1" (assert)
                      (("1" (typepred "k")
                        (("1" (hide -6)
                          (("1" (case "k=x!2")
                            (("1" (replaces -1)
                              (("1" (inst 2 "x!2-1")
                                (("1" (expand "swap")
                                  (("1" (expand "finseq_appl")
                                    (("1" (propax) nil nil)) nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (case "k=x!2-1")
                              (("1" (replaces -1)
                                (("1" (inst 3 "x!2")
                                  (("1" (expand "swap")
                                    (("1" (expand "finseq_appl")
                                      (("1" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (inst 4 "k")
                                (("2" (expand "swap")
                                  (("2" (expand "finseq_appl")
                                    (("2" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert)
                      (("2" (hide -2) (("2" (inst 3 "k") nil nil)) nil)) nil))
                    nil))
                  nil)
                 ("2" (assert)
                  (("2" (case "x!1`seq(x!2 - 1) > x!1`seq(x!2)")
                    (("1" (assert)
                      (("1" (inst -2 "swap(x!1)(x!2 - 1, x!2)" "1+ x!2" "x!3")
                        (("1" (inst -2 "k")
                          (("1" (postpone) nil nil) ("2" (postpone) nil nil))
                          nil)
                         ("2" (postpone) nil nil))
                        nil))
                      nil)
                     ("2" (postpone) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (postpone) nil nil) ("3" (postpone) nil nil)
     ("4" (postpone) nil nil) ("5" (postpone) nil nil)
     ("6" (postpone) nil nil) ("7" (postpone) nil nil)
     ("8" (postpone) nil nil) ("9" (postpone) nil nil)
     ("10" (postpone) nil nil) ("11" (postpone) nil nil)
     ("12" (postpone) nil nil))
    nil)
   nil shostak))
 (move_max_preserves2_TCC1 0
  (move_max_preserves2_TCC1-1 nil 3654677151 ("" (subtype-tcc) nil nil) nil
   nil (move_max_preserves2 subtype "maxsort.l" "below[length(v)]")))
 (move_max_preserves2_TCC2 0
  (move_max_preserves2_TCC2-1 nil 3654677151
   ("" (skeep) (("" (rewrite "move_max_length") (("" (assert) nil nil)) nil))
    nil)
   nil nil
   (move_max_preserves2 subtype "maxsort.k"
    "below[length(move_max(v)(j, i))]")))
 (move_max_preserves2 0
  (move_max_preserves2-1 nil 3654677171
   ("" (measure-induct+ "j - i" ("v" "i" "j"))
    (("1" (expand "finseq_appl")
      (("1" (skeep)
        (("1" (case "length(x!1) < 2")
          (("1" (hide -2) (("1" (grind) nil nil)) nil)
           ("2" (expand "move_max" 2)
            (("2" (expand "finseq_appl")
              (("2" (case "x!2 = x!3")
                (("1" (assert)
                  (("1" (case "x!1`seq(x!2 - 1) > x!1`seq(x!2)")
                    (("1" (assert)
                      (("1" (typepred "k")
                        (("1" (hide -6)
                          (("1" (case "k=x!2")
                            (("1" (replaces -1)
                              (("1" (inst 2 "x!2-1")
                                (("1" (expand "swap")
                                  (("1" (expand "finseq_appl")
                                    (("1" (propax) nil nil)) nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (case "k=x!2-1")
                              (("1" (replaces -1)
                                (("1" (inst 3 "x!2")
                                  (("1" (expand "swap")
                                    (("1" (expand "finseq_appl")
                                      (("1" (propax) nil nil)) nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (inst 4 "k")
                                (("2" (expand "swap")
                                  (("2" (expand "finseq_appl")
                                    (("2" (assert) nil nil)) nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert)
                      (("2" (hide -2) (("2" (inst 3 "k") nil nil)) nil)) nil))
                    nil))
                  nil)
                 ("2" (assert)
                  (("2" (case "x!1`seq(x!2 - 1) > x!1`seq(x!2)")
                    (("1" (assert)
                      (("1" (typepred "k")
                        (("1" (case "k = x!2 - 1")
                          (("1" (replaces -1)
                            (("1" (hide -5)
                              (("1" (lemma "move_max_preserves_out")
                                (("1" (expand "finseq_appl")
                                  (("1"
                                    (inst -1 "swap(x!1)(x!2 - 1, x!2)"
                                     "1 + x!2" "x!3" "x!2 - 1")
                                    (("1" (expand "swap" -1 1)
                                      (("1"
                                        (expand "finseq_appl")
                                        (("1" (inst 3 "x!2") nil nil))
                                        nil))
                                      nil)
                                     ("2" (expand "swap" 1)
                                      (("2" (propax) nil nil)) nil)
                                     ("3" (expand "swap" 1)
                                      (("3"
                                        (hide -4 4)
                                        (("3" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil)
                           ("2" (inst?)
                            (("1" (assert)
                              (("1" (skeep)
                                (("1" (expand "swap" -5 1)
                                  (("1" (expand "finseq_appl")
                                    (("1" (lift-if)
                                      (("1"
                                        (prop)
                                        (("1" (inst 4 "x!2 - 1") nil nil)
                                         ("2" (inst 5 "l") nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (hide -4 5)
                              (("2" (expand "swap") (("2" (grind) nil nil))
                                nil))
                              nil)
                             ("3" (hide -4 5)
                              (("3" (expand "swap") (("3" (grind) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert)
                      (("2" (inst -1 "x!1" "1 + x!2" "x!3")
                        (("2" (inst -1 "k")
                          (("1" (assert)
                            (("1" (skeep) (("1" (inst 4 "l") nil nil)) nil))
                            nil)
                           ("2" (case "k=x!2-1")
                            (("1" (lemma "move_max_preserves_out")
                              (("1" (expand "finseq_appl")
                                (("1" (inst -1 "x!1" "1+x!2" "x!3" "k")
                                  (("1" (inst 5 "k") nil nil)
                                   ("2" (hide 6) (("2" (grind) nil nil)) nil))
                                  nil))
                                nil))
                              nil)
                             ("2" (assert) nil nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (skeep)
      (("2" (rewrite "move_max_length") (("2" (assert) nil nil)) nil)) nil)
     ("3" (skeep)
      (("3" (rewrite "move_max_length") (("3" (assert) nil nil)) nil)) nil)
     ("4" (skeep) (("4" (assert) nil nil)) nil)
     ("5" (skeep) (("5" (assert) nil nil)) nil)
     ("6" (skeep)
      (("6" (rewrite "move_max_length") (("6" (assert) nil nil)) nil)) nil)
     ("7" (skeep) (("7" (assert) nil nil)) nil)
     ("8" (skeep)
      (("8" (rewrite "move_max_length") (("8" (assert) nil nil)) nil)) nil)
     ("9" (skeep) (("9" (assert) nil nil)) nil)
     ("10" (skeep)
      (("10" (rewrite "move_max_length") (("10" (assert) nil nil)) nil)) nil)
     ("11" (skeep) (("11" (assert) nil nil)) nil)
     ("12" (skeep) (("12" (typepred "l1") (("12" (assert) nil nil)) nil)) nil)
     ("13" (skeep) (("13" (assert) nil nil)) nil)
     ("14" (skeep)
      (("14" (rewrite "move_max_length") (("14" (assert) nil nil)) nil)) nil)
     ("15" (skeep) (("15" (assert) nil nil)) nil)
     ("16" (skeep) (("16" (assert) nil nil)) nil)
     ("17" (skeep)
      (("17" (rewrite "move_max_length") (("17" (assert) nil nil)) nil)) nil)
     ("18" (skeep) (("18" (assert) nil nil)) nil)
     ("19" (rewrite "move_max_length") (("19" (assert) nil nil)) nil))
    nil)
   ((swap const-decl "finite_sequence[T]" sorting_seq nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (total_preorder? const-decl "bool" total_preorder nil))
   shostak))
 (move_max_works_TCC1 0
  (move_max_works_TCC1-1 nil 3654524586
   ("" (skeep)
    (("" (lemma "move_max_length")
      (("" (inst?) (("" (typepred "j") (("" (assert) nil nil)) nil)) nil))
      nil))
    nil)
   nil nil
   (move_max_works subtype "maxsort.j" "below[length(move_max(v)(j, i))]")))
 (move_max_works_TCC2 0
  (move_max_works_TCC2-1 nil 3654524586
   ("" (skeep) (("" (rewrite "move_max_length") (("" (assert) nil nil)) nil))
    nil)
   nil nil
   (move_max_works subtype "maxsort.k" "below[length(move_max(v)(j, i))]")))
 (move_max_works 0
  (move_max_works-3 nil 3731693792
   ("" (auto-rewrite "finseq_appl")
    (("" (assert)
      (("" (measure-induct+ "j - i" ("v" "i" "j"))
        (("1" (skeep)
          (("1" (expand "move_max" 1)
            (("1" (lift-if)
              (("1" (case "length(x!1) < 2")
                (("1" (hide -2 1)
                  (("1" (typepred "x!2" "x!3") (("1" (grind) nil nil)) nil))
                  nil)
                 ("2" (prop)
                  (("1" (expand "finseq_appl")
                    (("1" (hide -3)
                      (("1" (expand ">")
                        (("1" (expand "converse")
                          (("1" (use "lt_le")
                            (("1" (assert)
                              (("1" (hide -2)
                                (("1" (grind)
                                  (("1" (hide-all-but (2 3))
                                    (("1" (typepred "<=")
                                      (("1" (grind) nil nil)) nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide -2)
                    (("2" (expand "finseq_appl")
                      (("2" (typepred "k")
                        (("2" (replaces -3)
                          (("2" (expand ">")
                            (("2" (expand ">=")
                              (("2" (expand "converse")
                                (("2" (expand "<")
                                  (("2" (case "k = x!3 -1")
                                    (("1" (replaces -1) nil nil)
                                     ("2" (case "k=x!3")
                                      (("1"
                                        (replaces -1)
                                        (("1"
                                          (hide -)
                                          (("1"
                                            (typepred "<=")
                                            (("1" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (hide 3 4)
                                        (("2" (grind) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (inst -2 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2" "x!3")
                    (("1" (expand "finseq_appl")
                      (("1" (inst?)
                        (("1" (assert) nil nil)
                         ("2" (typepred "k")
                          (("2" (lemma "move_max_preserves")
                            (("2"
                              (inst -1 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2"
                               "x!3" "x!2")
                              (("1" (skeep)
                                (("1" (expand "finseq_appl")
                                  (("1" (expand "swap" -1 1)
                                    (("1" (expand "finseq_appl")
                                      (("1"
                                        (lemma "move_max_preserves_out")
                                        (("1"
                                          (inst
                                           -1
                                           "swap(x!1)(x!2 - 1, x!2)"
                                           "1 + x!2"
                                           "x!3"
                                           "x!2-1")
                                          (("1"
                                            (expand "finseq_appl")
                                            (("1"
                                              (expand "swap" -1 1)
                                              (("1"
                                                (expand "finseq_appl")
                                                (("1"
                                                  (case "k = x!2 -1")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (replace -1 2 rl)
                                                      (("1"
                                                        (reveal -5)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "swap(x!1)(x!2 - 1, x!2)"
                                                           "1 + x!2"
                                                           "x!3")
                                                          (("1"
                                                            (inst -1 "l")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (expand ">=")
                                                                (("1"
                                                                  (expand
                                                                   "converse")
                                                                  (("1"
                                                                    (name-replace
                                                                     "mm"
                                                                     "move_max(swap(x!1)(x!2 - 1, x!2))(x!3, 1 + x!2)")
                                                                    (("1"
                                                                      (expand
                                                                       ">")
                                                                      (("1"
                                                                        (expand
                                                                         "converse")
                                                                        (("1"
                                                                          (replaces
                                                                           -2)
                                                                          (("1"
                                                                            (replaces
                                                                             -2)
                                                                            (("1"
                                                                              (expand
                                                                               "<")
                                                                              (("1"
                                                                                (typepred
                                                                                 "<=")
                                                                                (("1"
                                                                                  (expand
                                                                                   "total_preorder?")
                                                                                  (("1"
                                                                                    (expand
                                                                                     "preorder?")
                                                                                    (("1"
                                                                                      (flatten)
                                                                                      (("1"
                                                                                        (hide
                                                                                         -1
                                                                                         1)
                                                                                        (("1"
                                                                                          (expand
                                                                                           "transitive?")
                                                                                          (("1"
                                                                                            (inst
                                                                                             -1
                                                                                             "mm`seq(x!2 - 1)"
                                                                                             "mm`seq(l)"
                                                                                             "mm`seq(x!3)")
                                                                                            (("1"
                                                                                              (assert)
                                                                                              (("1"
                                                                                                (expand
                                                                                                 "dichotomous?")
                                                                                                (("1"
                                                                                                  (inst?
                                                                                                   :where
                                                                                                   (1
                                                                                                    2))
                                                                                                  (("1"
                                                                                                    (assert)
                                                                                                    nil
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("2"
                                                                                              (hide
                                                                                               -
                                                                                               2
                                                                                               3)
                                                                                              (("2"
                                                                                                (expand
                                                                                                 "mm")
                                                                                                (("2"
                                                                                                  (rewrite
                                                                                                   "move_max_length")
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("3"
                                                                                              (hide
                                                                                               -
                                                                                               2
                                                                                               3)
                                                                                              (("3"
                                                                                                (expand
                                                                                                 "mm")
                                                                                                (("3"
                                                                                                  (rewrite
                                                                                                   "move_max_length")
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil)
                                                                                             ("4"
                                                                                              (hide
                                                                                               -
                                                                                               2
                                                                                               3)
                                                                                              (("4"
                                                                                                (expand
                                                                                                 "mm")
                                                                                                (("4"
                                                                                                  (rewrite
                                                                                                   "move_max_length")
                                                                                                  (("1"
                                                                                                    (grind)
                                                                                                    nil
                                                                                                    nil)
                                                                                                   ("2"
                                                                                                    (hide
                                                                                                     2)
                                                                                                    (("2"
                                                                                                      (grind)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand "swap" 1)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "swap" 1)
                                            (("2"
                                              (typepred "x!3")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (hide -1 3)
                                            (("3"
                                              (expand "swap")
                                              (("3" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (expand "swap" 1)
                                (("2" (typepred "x!3")
                                  (("2" (assert) nil nil)) nil))
                                nil)
                               ("3" (hide 3)
                                (("3" (expand "swap") (("3" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "swap" 1)
                      (("2" (typepred "x!3") (("2" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("4" (inst -1 "x!1" "1 + x!2" "x!3")
                    (("1" (expand "finseq_appl")
                      (("1" (inst?)
                        (("1" (assert) nil nil)
                         ("2" (typepred "k")
                          (("2" (lemma "move_max_preserves")
                            (("2" (inst -1 "x!1" "1 + x!2" "x!3" "x!2")
                              (("1" (skeep)
                                (("1" (expand "finseq_appl")
                                  (("1" (lemma "move_max_preserves_out")
                                    (("1"
                                      (inst -1 "x!1" "1 + x!2" "x!3" "x!2-1")
                                      (("1"
                                        (expand "finseq_appl")
                                        (("1"
                                          (case "k = x!2 -1")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (replace -1 3 rl)
                                              (("1"
                                                (reveal -5)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "x!1"
                                                   "1 + x!2"
                                                   "x!3")
                                                  (("1"
                                                    (inst -1 "l")
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand ">=")
                                                          (("1"
                                                            (expand
                                                             "converse")
                                                            (("1"
                                                              (replaces -2)
                                                              (("1"
                                                                (expand ">")
                                                                (("1"
                                                                  (expand
                                                                   "converse")
                                                                  (("1"
                                                                    (expand
                                                                     "<")
                                                                    (("1"
                                                                      (replaces
                                                                       -2)
                                                                      (("1"
                                                                        (typepred
                                                                         "<=")
                                                                        (("1"
                                                                          (expand
                                                                           "total_preorder?")
                                                                          (("1"
                                                                            (expand
                                                                             "preorder?")
                                                                            (("1"
                                                                              (flatten)
                                                                              (("1"
                                                                                (hide
                                                                                 -1
                                                                                 1)
                                                                                (("1"
                                                                                  (expand
                                                                                   "transitive?")
                                                                                  (("1"
                                                                                    (inst
                                                                                     -1
                                                                                     "move_max(x!1)(x!3, 1 + x!2)`seq(x!2 - 1)"
                                                                                     "move_max(x!1)(x!3, 1 + x!2)`seq(l)"
                                                                                     "move_max(x!1)(x!3, 1 + x!2)`seq(x!3)")
                                                                                    (("1"
                                                                                      (assert)
                                                                                      nil
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2" (assert) nil nil))
                                                      nil))
                                                    nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2" (assert) nil nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (rewrite "move_max_length") (("2" (assert) nil nil)) nil)
         ("3" (rewrite "move_max_length") (("3" (assert) nil nil)) nil)
         ("4" (rewrite "move_max_length") (("4" (assert) nil nil)) nil)
         ("5" (rewrite "move_max_length") (("5" (assert) nil nil)) nil)
         ("6" (skeep)
          (("6" (rewrite "move_max_length")
            (("6" (typepred "k1") (("6" (assert) nil nil)) nil)) nil))
          nil)
         ("7" (rewrite "move_max_length") (("7" (assert) nil nil)) nil)
         ("8" (rewrite "move_max_length") (("8" (assert) nil nil)) nil)
         ("9" (skeep)
          (("9" (rewrite "move_max_length") (("9" (assert) nil nil)) nil))
          nil)
         ("10" (assert) (("10" (skeep) (("10" (assert) nil nil)) nil)) nil)
         ("11" (rewrite "move_max_length") (("11" (assert) nil nil)) nil)
         ("12" (skeep) (("12" (assert) nil nil)) nil)
         ("13" (skeep)
          (("13" (rewrite "move_max_length") (("13" (assert) nil nil)) nil))
          nil)
         ("14" (rewrite "move_max_length")
          (("14" (skeep) (("14" (assert) nil nil)) nil)) nil)
         ("15" (rewrite "move_max_length") (("15" (assert) nil nil)) nil)
         ("16" (assert) nil nil)
         ("17" (rewrite "move_max_length") (("17" (assert) nil nil)) nil)
         ("18" (rewrite "move_max_length")
          (("18" (skeep) (("18" (assert) nil nil)) nil)) nil)
         ("19" (skeep) (("19" (assert) nil nil)) nil)
         ("20" (skeep)
          (("20" (rewrite "move_max_length") (("20" (assert) nil nil)) nil))
          nil)
         ("21" (rewrite "move_max_length") (("21" (assert) nil nil)) nil)
         ("22" (rewrite "move_max_length") (("22" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((swap const-decl "finite_sequence[T]" sorting_seq nil)
    (lt_le formula-decl nil sorting nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (< const-decl "bool" sorting nil)
    (>= const-decl "pred[[T, T]]" sorting nil)
    (total_preorder? const-decl "bool" total_preorder nil))
   nil)
  (move_max_works-2 nil 3654530484
   ("" (auto-rewrite "finseq_appl")
    (("" (assert)
      (("" (measure-induct+ "j - i" ("v" "i" "j"))
        (("1" (skeep)
          (("1" (expand "move_max" 1)
            (("1" (lift-if)
              (("1" (case "length(x!1) < 2")
                (("1" (hide -2 1)
                  (("1" (typepred "x!2" "x!3") (("1" (grind) nil nil)) nil))
                  nil)
                 ("2" (prop)
                  (("1" (expand "finseq_appl")
                    (("1" (hide -3)
                      (("1" (grind)
                        (("1" (hide-all-but (3 4))
                          (("1" (typepred "<=") (("1" (grind) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("2" (hide -2)
                    (("2" (expand "finseq_appl")
                      (("2" (typepred "k")
                        (("2" (replaces -3)
                          (("2" (expand ">")
                            (("2" (expand ">=")
                              (("2" (expand "converse")
                                (("2" (expand "<")
                                  (("2" (expand "difference")
                                    (("2" (expand "member")
                                      (("2"
                                        (split)
                                        (("1"
                                          (case "k = x!3 -1")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (hide -)
                                              (("1"
                                                (typepred "<=")
                                                (("1"
                                                  (expand "total_order?")
                                                  (("1"
                                                    (expand "dichotomous?")
                                                    (("1"
                                                      (flatten)
                                                      (("1"
                                                        (inst?)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (case "k=x!3")
                                            (("1"
                                              (replaces -1)
                                              (("1"
                                                (hide -)
                                                (("1"
                                                  (typepred "<=")
                                                  (("1" (grind) nil nil))
                                                  nil))
                                                nil))
                                              nil)
                                             ("2"
                                              (hide 3 4)
                                              (("2" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (case "k = x!3 -1")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (typepred "<=")
                                              (("1" (grind) nil nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (typepred "<=")
                                            (("2" (grind) nil nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (inst -2 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2" "x!3")
                    (("1" (expand "finseq_appl")
                      (("1" (inst?)
                        (("1" (assert) nil nil)
                         ("2" (typepred "k")
                          (("2" (lemma "move_max_preserves")
                            (("2"
                              (inst -1 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2"
                               "x!3" "x!2")
                              (("1" (skeep)
                                (("1" (expand "finseq_appl")
                                  (("1" (expand "swap" -1 1)
                                    (("1" (expand "finseq_appl")
                                      (("1"
                                        (lemma "move_max_preserves_out")
                                        (("1"
                                          (inst
                                           -1
                                           "swap(x!1)(x!2 - 1, x!2)"
                                           "1 + x!2"
                                           "x!3"
                                           "x!2-1")
                                          (("1"
                                            (expand "finseq_appl")
                                            (("1"
                                              (expand "swap" -1 1)
                                              (("1"
                                                (expand "finseq_appl")
                                                (("1"
                                                  (case "k = x!2 -1")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (replace -1 2 rl)
                                                      (("1"
                                                        (reveal -5)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "swap(x!1)(x!2 - 1, x!2)"
                                                           "1 + x!2"
                                                           "x!3")
                                                          (("1"
                                                            (inst -1 "l")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (expand ">=")
                                                                (("1"
                                                                  (expand
                                                                   "converse")
                                                                  (("1"
                                                                    (name-replace
                                                                     "mm"
                                                                     "move_max(swap(x!1)(x!2 - 1, x!2))(x!3, 1 + x!2)")
                                                                    (("1"
                                                                      (expand
                                                                       ">")
                                                                      (("1"
                                                                        (expand
                                                                         "converse")
                                                                        (("1"
                                                                          (replaces
                                                                           -2)
                                                                          (("1"
                                                                            (replaces
                                                                             -2)
                                                                            (("1"
                                                                              (expand
                                                                               "<")
                                                                              (("1"
                                                                                (expand
                                                                                 "difference")
                                                                                (("1"
                                                                                  (expand
                                                                                   "member")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (typepred
                                                                                       "<=")
                                                                                      (("1"
                                                                                        (expand
                                                                                         "total_order?")
                                                                                        (("1"
                                                                                          (expand
                                                                                           "partial_order?")
                                                                                          (("1"
                                                                                            (expand
                                                                                             "preorder?")
                                                                                            (("1"
                                                                                              (flatten)
                                                                                              (("1"
                                                                                                (hide
                                                                                                 -1
                                                                                                 -3
                                                                                                 -4
                                                                                                 -6
                                                                                                 -7
                                                                                                 1)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "transitive?")
                                                                                                  (("1"
                                                                                                    (inst
                                                                                                     -1
                                                                                                     "mm`seq(x!2 - 1)"
                                                                                                     "mm`seq(l)"
                                                                                                     "mm`seq(x!3)")
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil)
                                                                                                     ("2"
                                                                                                      (hide
                                                                                                       -
                                                                                                       2
                                                                                                       3)
                                                                                                      (("2"
                                                                                                        (expand
                                                                                                         "mm")
                                                                                                        (("2"
                                                                                                          (rewrite
                                                                                                           "move_max_length")
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("3"
                                                                                                      (hide
                                                                                                       -
                                                                                                       2
                                                                                                       3)
                                                                                                      (("3"
                                                                                                        (expand
                                                                                                         "mm")
                                                                                                        (("3"
                                                                                                          (rewrite
                                                                                                           "move_max_length")
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil)
                                                                                                     ("4"
                                                                                                      (hide
                                                                                                       -
                                                                                                       2
                                                                                                       3)
                                                                                                      (("4"
                                                                                                        (expand
                                                                                                         "mm")
                                                                                                        (("4"
                                                                                                          (rewrite
                                                                                                           "move_max_length")
                                                                                                          (("1"
                                                                                                            (grind)
                                                                                                            nil
                                                                                                            nil)
                                                                                                           ("2"
                                                                                                            (hide
                                                                                                             2)
                                                                                                            (("2"
                                                                                                              (grind)
                                                                                                              nil
                                                                                                              nil))
                                                                                                            nil))
                                                                                                          nil))
                                                                                                        nil))
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand "swap" 1)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "swap" 1)
                                            (("2"
                                              (typepred "x!3")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil)
                                           ("3"
                                            (hide -1 3)
                                            (("3"
                                              (expand "swap")
                                              (("3" (grind) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (expand "swap" 1)
                                (("2" (typepred "x!3")
                                  (("2" (assert) nil nil)) nil))
                                nil)
                               ("3" (hide 3)
                                (("3" (expand "swap") (("3" (grind) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "swap" 1)
                      (("2" (typepred "x!3") (("2" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("4" (inst -1 "x!1" "1 + x!2" "x!3")
                    (("1" (expand "finseq_appl")
                      (("1" (inst?)
                        (("1" (assert) nil nil)
                         ("2" (typepred "k")
                          (("2" (lemma "move_max_preserves")
                            (("2" (inst -1 "x!1" "1 + x!2" "x!3" "x!2")
                              (("1" (skeep)
                                (("1" (expand "finseq_appl")
                                  (("1" (lemma "move_max_preserves_out")
                                    (("1"
                                      (inst -1 "x!1" "1 + x!2" "x!3" "x!2-1")
                                      (("1"
                                        (expand "finseq_appl")
                                        (("1"
                                          (case "k = x!2 -1")
                                          (("1"
                                            (replaces -1)
                                            (("1"
                                              (replace -1 3 rl)
                                              (("1"
                                                (reveal -5)
                                                (("1"
                                                  (inst
                                                   -1
                                                   "x!1"
                                                   "1 + x!2"
                                                   "x!3")
                                                  (("1"
                                                    (inst -1 "l")
                                                    (("1"
                                                      (prop)
                                                      (("1"
                                                        (assert)
                                                        (("1"
                                                          (expand ">=")
                                                          (("1"
                                                            (expand
                                                             "converse")
                                                            (("1"
                                                              (replaces -2)
                                                              (("1"
                                                                (expand ">")
                                                                (("1"
                                                                  (expand
                                                                   "converse")
                                                                  (("1"
                                                                    (expand
                                                                     "<")
                                                                    (("1"
                                                                      (expand
                                                                       "difference")
                                                                      (("1"
                                                                        (expand
                                                                         "member")
                                                                        (("1"
                                                                          (replaces
                                                                           -2)
                                                                          (("1"
                                                                            (typepred
                                                                             "<=")
                                                                            (("1"
                                                                              (expand
                                                                               "total_order?")
                                                                              (("1"
                                                                                (expand
                                                                                 "partial_order?")
                                                                                (("1"
                                                                                  (expand
                                                                                   "preorder?")
                                                                                  (("1"
                                                                                    (flatten)
                                                                                    (("1"
                                                                                      (hide
                                                                                       -1
                                                                                       -3
                                                                                       -4
                                                                                       -6
                                                                                       -7
                                                                                       1)
                                                                                      (("1"
                                                                                        (expand
                                                                                         "transitive?")
                                                                                        (("1"
                                                                                          (inst
                                                                                           -1
                                                                                           "move_max(x!1)(x!3, 1 + x!2)`seq(x!2 - 1)"
                                                                                           "move_max(x!1)(x!3, 1 + x!2)`seq(l)"
                                                                                           "move_max(x!1)(x!3, 1 + x!2)`seq(x!3)")
                                                                                          (("1"
                                                                                            (assert)
                                                                                            (("1"
                                                                                              (hide
                                                                                               -1
                                                                                               3)
                                                                                              (("1"
                                                                                                (reveal
                                                                                                 -5)
                                                                                                (("1"
                                                                                                  (expand
                                                                                                   "dichotomous?")
                                                                                                  (("1"
                                                                                                    (inst?)
                                                                                                    (("1"
                                                                                                      (assert)
                                                                                                      nil
                                                                                                      nil))
                                                                                                    nil))
                                                                                                  nil))
                                                                                                nil))
                                                                                              nil))
                                                                                            nil))
                                                                                          nil))
                                                                                        nil))
                                                                                      nil))
                                                                                    nil))
                                                                                  nil))
                                                                                nil))
                                                                              nil))
                                                                            nil))
                                                                          nil))
                                                                        nil))
                                                                      nil))
                                                                    nil))
                                                                  nil))
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil)
                                                       ("2" (assert) nil nil))
                                                      nil))
                                                    nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2" (assert) nil nil))
                                          nil))
                                        nil)
                                       ("2"
                                        (typepred "x!3")
                                        (("2" (assert) nil nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (typepred "x!3") (("2" (assert) nil nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (typepred "x!3") (("2" (assert) nil nil)) nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (rewrite "move_max_length") (("2" (assert) nil nil)) nil)
         ("3" (rewrite "move_max_length") (("3" (assert) nil nil)) nil)
         ("4" (rewrite "move_max_length") (("4" (assert) nil nil)) nil)
         ("5" (rewrite "move_max_length") (("5" (assert) nil nil)) nil)
         ("6" (skeep)
          (("6" (rewrite "move_max_length")
            (("6" (typepred "k1") (("6" (assert) nil nil)) nil)) nil))
          nil)
         ("7" (rewrite "move_max_length") (("7" (assert) nil nil)) nil)
         ("8" (rewrite "move_max_length") (("8" (assert) nil nil)) nil)
         ("9" (skeep)
          (("9" (rewrite "move_max_length") (("9" (assert) nil nil)) nil))
          nil)
         ("10" (assert) (("10" (skeep) (("10" (assert) nil nil)) nil)) nil)
         ("11" (rewrite "move_max_length") (("11" (assert) nil nil)) nil)
         ("12" (skeep) (("12" (assert) nil nil)) nil)
         ("13" (skeep)
          (("13" (rewrite "move_max_length") (("13" (assert) nil nil)) nil))
          nil)
         ("14" (rewrite "move_max_length")
          (("14" (skeep) (("14" (assert) nil nil)) nil)) nil)
         ("15" (rewrite "move_max_length") (("15" (assert) nil nil)) nil)
         ("16" (assert) nil nil)
         ("17" (rewrite "move_max_length") (("17" (assert) nil nil)) nil)
         ("18" (rewrite "move_max_length")
          (("18" (skeep) (("18" (assert) nil nil)) nil)) nil)
         ("19" (skeep) (("19" (assert) nil nil)) nil)
         ("20" (skeep)
          (("20" (rewrite "move_max_length") (("20" (assert) nil nil)) nil))
          nil)
         ("21" (rewrite "move_max_length") (("21" (assert) nil nil)) nil)
         ("22" (rewrite "move_max_length") (("22" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((< const-decl "bool" sorting nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (swap const-decl "finite_sequence[T]" sorting_seq nil)
    (>= const-decl "pred[[T, T]]" sorting nil))
   nil)
  (move_max_works-1 nil 3654524788
   ("" (auto-rewrite "finseq_appl")
    (("" (assert)
      (("" (measure-induct+ "j - i" ("v" "i" "j"))
        (("1" (skeep)
          (("1" (expand "move_max" 1)
            (("1" (lift-if)
              (("1" (case "length(x!1) < 2")
                (("1" (hide -2 1)
                  (("1" (typepred "x!2" "x!3") (("1" (grind) nil nil)) nil))
                  nil)
                 ("2" (prop)
                  (("1" (expand "finseq_appl")
                    (("1" (hide -3) (("1" (grind) nil nil)) nil)) nil)
                   ("2" (expand "finseq_appl")
                    (("2" (hide -2) (("2" (grind) nil nil)) nil)) nil)
                   ("3" (inst -2 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2" "x!3")
                    (("1" (expand "finseq_appl")
                      (("1" (inst?)
                        (("1" (assert) nil nil)
                         ("2" (typepred "k")
                          (("2" (lemma "move_max_preserves")
                            (("2"
                              (inst -1 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2"
                               "x!3" "x!2")
                              (("1" (skeep)
                                (("1" (expand "finseq_appl")
                                  (("1" (expand "swap" -1 1)
                                    (("1" (expand "finseq_appl")
                                      (("1"
                                        (lemma "move_max_preserves_out")
                                        (("1"
                                          (inst
                                           -1
                                           "swap(x!1)(x!2 - 1, x!2)"
                                           "1 + x!2"
                                           "x!3"
                                           "x!2-1")
                                          (("1"
                                            (expand "finseq_appl")
                                            (("1"
                                              (expand "swap" -1 1)
                                              (("1"
                                                (expand "finseq_appl")
                                                (("1"
                                                  (case "k = x!2 -1")
                                                  (("1"
                                                    (replaces -1)
                                                    (("1"
                                                      (replace -1 2 rl)
                                                      (("1"
                                                        (reveal -5)
                                                        (("1"
                                                          (inst
                                                           -1
                                                           "swap(x!1)(x!2 - 1, x!2)"
                                                           "1 + x!2"
                                                           "x!3")
                                                          (("1"
                                                            (inst -1 "l")
                                                            (("1"
                                                              (prop)
                                                              (("1"
                                                                (assert)
                                                                nil
                                                                nil)
                                                               ("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil)
                                                             ("2"
                                                              (typepred "l")
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil)
                                                           ("2"
                                                            (expand "swap" 1)
                                                            (("2"
                                                              (assert)
                                                              nil
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil)
                                                   ("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil)
                                           ("2"
                                            (expand "swap" 1)
                                            (("2"
                                              (typepred "x!3")
                                              (("2" (assert) nil nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (expand "swap" 1)
                                (("2" (typepred "x!3")
                                  (("2" (assert) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil)
                     ("2" (expand "swap" 1)
                      (("2" (typepred "x!3") (("2" (assert) nil nil)) nil))
                      nil))
                    nil)
                   ("4" (postpone) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil)
         ("2" (lemma "move_max_length")
          (("2" (inst?) (("2" (typepred "k!1") (("2" (assert) nil nil)) nil))
            nil))
          nil)
         ("3" (lemma "move_max_length")
          (("3" (inst?) (("3" (typepred "y!3") (("3" (assert) nil nil)) nil))
            nil))
          nil)
         ("4" (skeep)
          (("4" (lemma "move_max_length")
            (("4" (inst?) (("4" (typepred "k") (("4" (assert) nil nil)) nil))
              nil))
            nil))
          nil)
         ("5" (skeep)
          (("5" (lemma "move_max_length")
            (("5" (inst?)
              (("5" (typepred "y!3") (("5" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("6" (skeep)
          (("6" (lemma "move_max_length")
            (("6" (inst?) (("6" (typepred "k1") (("6" (assert) nil nil)) nil))
              nil))
            nil))
          nil)
         ("7" (lemma "move_max_length")
          (("7" (inst?) (("7" (assert) nil nil)) nil)) nil)
         ("8" (lemma "move_max_length")
          (("8" (inst?) (("8" (assert) nil nil)) nil)) nil)
         ("9" (skeep)
          (("9" (lemma "move_max_length")
            (("9" (inst?)
              (("9" (typepred "x!1`3") (("9" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("10" (lemma "move_max_length")
          (("10" (inst?)
            (("10" (typepred "k!1") (("10" (assert) nil nil)) nil)) nil))
          nil)
         ("11" (lemma "move_max_length")
          (("11" (inst?) (("11" (assert) nil nil)) nil)) nil)
         ("12" (skeep)
          (("12" (lemma "move_max_length")
            (("12" (inst?)
              (("12" (typepred "k") (("12" (assert) nil nil)) nil)) nil))
            nil))
          nil)
         ("13" (skeep)
          (("13" (lemma "move_max_length")
            (("13" (inst?) (("13" (assert) nil nil)) nil)) nil))
          nil)
         ("14" (lemma "move_max_length")
          (("14" (inst?)
            (("14" (typepred "k!1") (("14" (assert) nil nil)) nil)) nil))
          nil)
         ("15" (lemma "move_max_length")
          (("15" (inst?)
            (("15" (typepred "j!1") (("15" (assert) nil nil)) nil)) nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (move_max_permutes 0
  (move_max_permutes-1 nil 3655027175
   ("" (measure-induct+ "j-i" ("v" "i" "j"))
    (("1" (expand "move_max" 1)
      (("1" (expand "finseq_appl")
        (("1" (lift-if)
          (("1" (prop)
            (("1" (rewrite "swap_permutes") nil nil)
             ("2" (hide-all-but 2) (("2" (grind) nil nil)) nil)
             ("3" (inst -2 "swap(x!1)(x!2 - 1, x!2)" "1 + x!2" "x!3")
              (("1" (assert)
                (("1" (lemma "swap_permutes")
                  (("1" (inst?)
                    (("1" (lemma "permutations_equiv")
                      (("1" (flatten)
                        (("1" (hide -1 -2)
                          (("1" (expand "transitive?")
                            (("1"
                              (inst -1 "x!1" "swap(x!1)(x!2 - 1, x!2)"
                               "move_max(swap(x!1)(x!2 - 1, x!2))(x!3, 1 + x!2)")
                              (("1" (assert) nil nil)) nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide 2) (("2" (grind) nil nil)) nil))
              nil)
             ("4" (inst -1 "x!1" "1+x!2" "x!3")
              (("1" (assert) nil nil) ("2" (assert) nil nil)) nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (assert) nil nil) ("3" (assert) nil nil))
    nil)
   ((swap const-decl "finite_sequence[T]" sorting_seq nil)
    (permutations_equiv formula-decl nil sorting_seq nil)
    (< const-decl "bool" sorting nil)
    (> const-decl "pred[[T, T]]" sorting nil)
    (swap_permutes formula-decl nil sorting_seq nil)
    (permutations const-decl "bool" sorting_seq nil)
    (total_preorder? const-decl "bool" total_preorder nil))
   shostak))
 (maxsort_aux_TCC1 0
  (maxsort_aux_TCC1-1 nil 3654519610 ("" (subtype-tcc) nil nil) nil nil
   (maxsort_aux subtype "1" "{i: integers.posnat | reals.>=(maxsort.j, i)}")))
 (maxsort_aux_TCC2 0
  (maxsort_aux_TCC2-1 nil 3654519610
   ("" (skeep) (("" (rewrite "move_max_length") (("" (ground) nil nil)) nil))
    nil)
   nil nil
   (maxsort_aux subtype "(number_fields.-)(maxsort.j, 1)"
    "below[length(move_max(v)(j, 1))]")))
 (maxsort_aux_TCC3 0
  (maxsort_aux_TCC3-1 nil 3654520497 ("" (termination-tcc) nil nil) nil nil
   (maxsort_aux termination
    "maxsort.maxsort_aux(maxsort.move_max(maxsort.v)(maxsort.j, 1))((number_fields.-)(maxsort.j, 1))"
    "nil")))
 (maxsort_aux_length 0
  (maxsort_aux_length-1 nil 3654523778
   ("" (measure-induct+ "j" ("v" "j"))
    (("" (expand "maxsort_aux" 1)
      (("" (lift-if)
        (("" (prop)
          (("" (inst -1 "move_max(x!1)(x!2, 1)" "x!2 - 1")
            (("1" (assert) (("1" (rewrite "move_max_length") nil nil)) nil)
             ("2" (assert) nil nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   nil shostak))
 (maxsort_aux_psorts_TCC1 0
  (maxsort_aux_psorts_TCC1-1 nil 3654622344 ("" (subtype-tcc) nil nil) nil nil
   (maxsort_aux_psorts subtype "(number_fields.+)(maxsort.j, 1)"
    "below[length(v)]")))
 (maxsort_aux_psorts_TCC2 0
  (maxsort_aux_psorts_TCC2-1 nil 3654622344 ("" (subtype-tcc) nil nil) nil nil
   (maxsort_aux_psorts subtype "(number_fields.-)(length(maxsort.v), 1)"
    "{j_1: nat_types[length(maxsort.v)].below | reals.<=((number_fields.+)(1, maxsort.j), j_1)}")))
 (maxsort_aux_psorts_TCC3 0
  (maxsort_aux_psorts_TCC3-1 nil 3654622344 ("" (subtype-tcc) nil nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (psorted const-decl "bool" sorting_seq nil))
   nil (maxsort_aux_psorts subtype "maxsort.i" "below[length(v)]")))
 (maxsort_aux_psorts_TCC4 0
  (maxsort_aux_psorts_TCC4-1 nil 3654622344
   ("" (skeep)
    (("" (rewrite "maxsort_aux_length") (("" (assert) nil nil)) nil)) nil)
   nil nil
   (maxsort_aux_psorts subtype "0" "below[length(maxsort_aux(v)(j))]")))
 (maxsort_aux_psorts_TCC5 0
  (maxsort_aux_psorts_TCC5-1 nil 3654622344
   ("" (skeep)
    (("" (rewrite "maxsort_aux_length") (("" (assert) nil nil)) nil)) nil)
   nil nil
   (maxsort_aux_psorts subtype "(number_fields.-)(length(maxsort.v), 1)"
    "{j_1: nat_types[length(maxsort.maxsort_aux(maxsort.v)(maxsort.j))].below | reals.<=(0, j_1)}")))
 (maxsort_aux_psorts_TCC6 0
  (maxsort_aux_psorts_TCC6-1 nil 3654622344 ("" (subtype-tcc) nil nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (psorted const-decl "bool" sorting_seq nil))
   nil (maxsort_aux_psorts subtype "maxsort.j" "below[length(v)]")))
 (maxsort_aux_psorts 0
  (maxsort_aux_psorts-1 nil 3654622600
   ("" (expand "finseq_appl")
    (("" (measure-induct+ "j" ("v" "j"))
      (("1" (case "length(x!1) < 2")
        (("1" (hide -2) (("1" (grind) nil nil)) nil)
         ("2" (expand "maxsort_aux" 2)
          (("2" (prop)
            (("1" (hide -2)
              (("1" (replaces -1)
                (("1" (assert)
                  (("1" (inst -2 0)
                    (("1" (expand "psorted")
                      (("1" (expand "finseq_appl")
                        (("1" (skeep)
                          (("1" (inst -2 "k") (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (inst -1 "move_max(x!1)(x!2, 1)" "x!2 - 1")
              (("1" (assert)
                (("1" (prop)
                  (("1" (rewrite "move_max_length") nil nil)
                   ("2" (hide 3)
                    (("2" (expand "psorted")
                      (("2" (flatten)
                        (("2" (skeep)
                          (("2" (expand "finseq_appl")
                            (("2" (case "x!2 = k")
                              (("1" (replaces -1)
                                (("1" (hide -1)
                                  (("1" (lemma "move_max_preserves_out")
                                    (("1" (expand "finseq_appl")
                                      (("1"
                                        (inst -1 "x!1" 1 "k" "k+1")
                                        (("1"
                                          (replace -1 3 rl)
                                          (("1"
                                            (hide -1)
                                            (("1"
                                              (lemma "move_max_preserves2")
                                              (("1"
                                                (inst -1 "x!1" 1 "k" "k")
                                                (("1"
                                                  (skeep)
                                                  (("1"
                                                    (expand "finseq_appl")
                                                    (("1"
                                                      (replace -1 3 rl)
                                                      (("1"
                                                        (inst -4 "l")
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil)
                                                         ("2"
                                                          (typepred "l")
                                                          (("2"
                                                            (hide-all-but
                                                             (-1 1))
                                                            (("2"
                                                              (reveal -9)
                                                              (("2"
                                                                (assert)
                                                                nil
                                                                nil))
                                                              nil))
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("2"
                                                  (hide -2 -3 4)
                                                  (("2"
                                                    (lemma "move_max_length")
                                                    (("2"
                                                      (inst?)
                                                      (("1"
                                                        (replaces -1)
                                                        (("1"
                                                          (assert)
                                                          nil
                                                          nil))
                                                        nil)
                                                       ("2"
                                                        (reveal -8)
                                                        (("2"
                                                          (typepred "x!2")
                                                          (("2"
                                                            (grind)
                                                            nil
                                                            nil))
                                                          nil))
                                                        nil))
                                                      nil))
                                                    nil))
                                                  nil)
                                                 ("3"
                                                  (hide -2 -3 4)
                                                  (("3"
                                                    (reveal -7)
                                                    (("3"
                                                      (typepred "x!2")
                                                      (("3" (grind) nil nil))
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("2"
                                          (hide -2 -3 4)
                                          (("2"
                                            (typepred "x!2")
                                            (("2"
                                              (reveal -5)
                                              (("2"
                                                (rewrite "move_max_length")
                                                (("2" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil)
                                         ("3"
                                          (hide -2 -3 4)
                                          (("3"
                                            (reveal -5)
                                            (("3"
                                              (typepred "x!2")
                                              (("3"
                                                (rewrite "move_max_length")
                                                (("3" (assert) nil nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (lemma "move_max_preserves_out")
                                (("2" (expand "finseq_appl")
                                  (("2" (inst -1 "x!1" 1 "x!2" "1+k")
                                    (("1" (replace -1 4 rl)
                                      (("1"
                                        (hide -1)
                                        (("1"
                                          (lemma "move_max_preserves_out")
                                          (("1"
                                            (expand "finseq_appl")
                                            (("1"
                                              (inst -1 "x!1" 1 "x!2" "k")
                                              (("1"
                                                (replace -1 4 rl)
                                                (("1"
                                                  (inst -4 "k")
                                                  (("1"
                                                    (assert)
                                                    (("1"
                                                      (rewrite
                                                       "move_max_length")
                                                      nil
                                                      nil))
                                                    nil))
                                                  nil))
                                                nil)
                                               ("2"
                                                (assert)
                                                (("2"
                                                  (rewrite "move_max_length")
                                                  (("2" (assert) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil)
                                     ("2" (assert)
                                      (("2"
                                        (hide -3 -4 5)
                                        (("2"
                                          (rewrite "move_max_length")
                                          (("2" (assert) nil nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil)
                   ("3" (skeep)
                    (("3" (typepred "i")
                      (("3" (lemma "move_max_works")
                        (("3" (hide 3)
                          (("3" (expand "finseq_appl")
                            (("3" (inst -1 "x!1" 1 "x!2" "i")
                              (("3" (expand ">=")
                                (("3" (expand "converse")
                                  (("3" (propax) nil nil)) nil))
                                nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil)
               ("2" (hide - 3)
                (("2" (rewrite "move_max_length") (("2" (grind) nil nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil)
       ("2" (rewrite "maxsort_aux_length") (("2" (assert) nil nil)) nil)
       ("3" (hide - 2)
        (("3" (rewrite "maxsort_aux_length") (("3" (grind) nil nil)) nil))
        nil)
       ("4" (typepred "x!1`2") (("4" (assert) nil nil)) nil)
       ("5" (assert)
        (("5" (rewrite "maxsort_aux_length") (("5" (assert) nil nil)) nil))
        nil)
       ("6" (assert)
        (("6" (rewrite "maxsort_aux_length") (("6" (assert) nil nil)) nil))
        nil)
       ("7" (skeep) (("7" (assert) nil nil)) nil)
       ("8" (skeep) (("8" (assert) nil nil)) nil)
       ("9" (typepred "x!1`1" "x!1`2") (("9" (assert) nil nil)) nil)
       ("10" (assert) nil nil) ("11" (assert) nil nil)
       ("12" (assert)
        (("12" (rewrite "maxsort_aux_length") (("12" (assert) nil nil)) nil))
        nil)
       ("13" (assert)
        (("13" (rewrite "maxsort_aux_length") (("13" (assert) nil nil)) nil))
        nil)
       ("14" (skeep) (("14" (assert) nil nil)) nil)
       ("15" (skeep) (("15" (assert) nil nil)) nil) ("16" (assert) nil nil)
       ("17" (assert) nil nil)
       ("18" (assert)
        (("18" (rewrite "maxsort_aux_length") (("18" (assert) nil nil)) nil))
        nil)
       ("19" (assert)
        (("19" (rewrite "maxsort_aux_length") (("19" (assert) nil nil)) nil))
        nil))
      nil))
    nil)
   ((psorted const-decl "bool" sorting_seq nil)
    (total_preorder? const-decl "bool" total_preorder nil)
    (>= const-decl "pred[[T, T]]" sorting nil))
   shostak))
 (maxsort_aux_permutes_TCC1 0
  (maxsort_aux_permutes_TCC1-1 nil 3655027107 ("" (subtype-tcc) nil nil) nil
   nil (maxsort_aux_permutes subtype "maxsort.j" "below[length(v)]")))
 (maxsort_aux_permutes 0
  (maxsort_aux_permutes-1 nil 3655027557
   ("" (measure-induct+ "j" ("v" "j"))
    (("1" (expand "maxsort_aux" 1)
      (("1" (lift-if)
        (("1" (prop)
          (("1" (hide -) (("1" (grind) nil nil)) nil)
           ("2" (inst -1 "move_max(x!1)(x!2, 1)" "x!2 - 1")
            (("1" (assert)
              (("1" (lemma "move_max_permutes")
                (("1" (inst?)
                  (("1" (lemma "permutations_equiv")
                    (("1" (flatten)
                      (("1" (expand "transitive?")
                        (("1" (hide -1 -2)
                          (("1"
                            (inst -1 "x!1" "move_max(x!1)(x!2, 1)"
                             "maxsort_aux(move_max(x!1)(x!2, 1))(x!2 - 1)")
                            (("1" (assert) nil nil)) nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil)
             ("2" (hide 3)
              (("2" (rewrite "move_max_length") (("2" (assert) nil nil)) nil))
              nil))
            nil))
          nil))
        nil))
      nil)
     ("2" (assert) nil nil) ("3" (assert) nil nil))
    nil)
   ((permutations_equiv formula-decl nil sorting_seq nil)
    (permutations const-decl "bool" sorting_seq nil)
    (total_preorder? const-decl "bool" total_preorder nil))
   shostak))
 (maxsort_TCC1 0
  (maxsort_TCC1-1 nil 3654519610 ("" (subtype-tcc) nil nil) nil nil
   (maxsort subtype "(number_fields.-)(length(maxsort.v), 1)"
    "below[length(v)]")))
 (maxsort_sorts 0
  (maxsort_sorts-1 nil 3654698678
   ("" (skeep)
    (("" (expand "sorted")
      (("" (flatten)
        (("" (expand "maxsort")
          (("" (lift-if)
            (("" (prop)
              (("1" (grind) nil nil)
               ("2" (lift-if)
                (("2" (prop)
                  (("2" (lemma "maxsort_aux_psorts")
                    (("2" (expand "finseq_appl")
                      (("2" (rewrite "maxsort_aux_length")
                        (("2" (expand "maxsort_aux" 2)
                          (("2" (prop)
                            (("1" (hide -2) (("1" (grind) nil nil)) nil)
                             ("2"
                              (inst -1 "move_max(v)(length(v) - 1, 1)"
                               "length(v) -2")
                              (("1" (prop)
                                (("1" (rewrite "move_max_length") nil nil)
                                 ("2" (hide 3)
                                  (("2" (rewrite "move_max_length")
                                    (("2" (assert) (("2" (grind) nil nil))
                                      nil))
                                    nil))
                                  nil)
                                 ("3" (hide 3)
                                  (("3" (skeep)
                                    (("3" (assert)
                                      (("3"
                                        (typepred "i")
                                        (("3"
                                          (lemma "move_max_works")
                                          (("3"
                                            (expand "finseq_appl")
                                            (("3"
                                              (inst
                                               -1
                                               "v"
                                               1
                                               "length(v) -1"
                                               "i")
                                              (("3"
                                                (expand ">=")
                                                (("3"
                                                  (expand "converse")
                                                  (("3" (propax) nil nil))
                                                  nil))
                                                nil))
                                              nil))
                                            nil))
                                          nil))
                                        nil))
                                      nil))
                                    nil))
                                  nil))
                                nil)
                               ("2" (hide 3)
                                (("2" (prop)
                                  (("1" (assert) nil nil)
                                   ("2" (rewrite "move_max_length")
                                    (("2" (assert) nil nil)) nil))
                                  nil))
                                nil)
                               ("3" (assert) nil nil))
                              nil))
                            nil))
                          nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((sorted const-decl "bool" sorting_seq nil)
    (psorted const-decl "bool" sorting_seq nil)
    (total_preorder? const-decl "bool" total_preorder nil)
    (>= const-decl "pred[[T, T]]" sorting nil))
   shostak))
 (maxsort_permutes 0
  (maxsort_permutes-1 nil 3655027734
   ("" (skeep)
    (("" (expand "maxsort")
      (("" (lift-if)
        (("" (prop)
          (("1" (grind) nil nil)
           ("2" (lemma "maxsort_aux_permutes")
            (("2" (expand "maxsort_aux" 2)
              (("2" (lift-if)
                (("2" (prop)
                  (("1" (hide - 2) (("1" (grind) nil nil)) nil)
                   ("2"
                    (inst -1 "move_max(v)(length(v) - 1, 1)" "length(v) - 2")
                    (("1" (lemma "move_max_permutes")
                      (("1" (inst?)
                        (("1" (lemma "permutations_equiv")
                          (("1" (flatten)
                            (("1" (hide -1 -2)
                              (("1" (expand "transitive?")
                                (("1"
                                  (inst -1 "v" "move_max(v)(length(v) - 1, 1)"
                                   "maxsort_aux(move_max(v)(length(v) - 1, 1))
                              (length(v) - 2)")
                                  (("1" (assert) nil nil)
                                   ("2" (assert) nil nil)
                                   ("3" (assert) nil nil))
                                  nil))
                                nil))
                              nil))
                            nil))
                          nil)
                         ("2" (assert) nil nil))
                        nil))
                      nil)
                     ("2" (rewrite "move_max_length") (("2" (assert) nil nil))
                      nil)
                     ("3" (assert) nil nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((total_preorder? const-decl "bool" total_preorder nil)
    (permutations const-decl "bool" sorting_seq nil)
    (permutations_equiv formula-decl nil sorting_seq nil))
   shostak))
 (maxsort_works 0
  (maxsort_works-1 nil 3655027943
   ("" (skeep)
    (("" (split)
      (("1" (rewrite "maxsort_sorts") nil nil)
       ("2" (rewrite "maxsort_permutes") nil nil))
      nil))
    nil)
   nil shostak)))

