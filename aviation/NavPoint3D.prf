(NavPoint3D
 (groundSpeed_TCC1 0
  (groundSpeed_TCC1-1 nil 3603620825 ("" (subtype-tcc) nil nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (real_lt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (/= const-decl "boolean" notequal nil))
   nil
   (groundSpeed subtype
    "real_defs.abs((number_fields.-)(NavPoint3D.n2`t, NavPoint3D.n1`t))"
    "nznum")))
 (groundSpeed_TCC2 0
  (groundSpeed_TCC2-1 nil 3603620825
   ("" (skosimp*) (("" (cross-mult 2) nil nil)) nil)
   ((div_mult_pos_ge1 formula-decl nil real_props nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (Vector type-eq-decl nil vectors_2D vectors)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (number nonempty-type-decl nil numbers nil)
    (boolean nonempty-type-decl nil booleans nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (> const-decl "bool" reals nil) (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (nnreal type-eq-decl nil real_types nil)
    (TCPType type-decl nil NavPoint3D nil)
    (NavPoint type-eq-decl nil NavPoint3D nil)
    (n2!1 skolem-const-decl "NavPoint" NavPoint3D nil)
    (n1!1 skolem-const-decl "NavPoint" NavPoint3D nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (groundSpeed subtype
    "number_fields./(vectors_2D.norm((vectors_2D.-)(NavPoint3D.v2, NavPoint3D.v1)), real_defs.abs((number_fields.-)(NavPoint3D.n2`t, NavPoint3D.n1`t)))"
    "nnreal")))
 (gs_nz 0
  (gs_nz-1 nil 3603620825
   ("" (skosimp*)
    (("" (typepred "v2!1")
      (("" (expand "nz_gs_navPoint")
        (("" (flatten)
          (("" (expand "groundSpeed")
            (("" (assert)
              (("" (cross-mult 3)
                (("" (lemma "vectors_2D.norm_eq_0")
                  (("" (inst?)
                    (("" (assert)
                      (("" (hide 3)
                        (("" (lemma "vectors_2D.sub_eq_zero")
                          (("" (inst?) (("" (assert) nil nil)) nil)) nil))
                        nil))
                      nil))
                    nil))
                  nil))
                nil))
              nil))
            nil))
          nil))
        nil))
      nil))
    nil)
   ((nz_gs_navPoint const-decl "bool" NavPoint3D nil)
    (NavPoint type-eq-decl nil NavPoint3D nil)
    (TCPType type-decl nil NavPoint3D nil)
    (nnreal type-eq-decl nil real_types nil)
    (Vect3 type-eq-decl nil vectors_3D_def vectors)
    (real nonempty-type-from-decl nil reals nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (real_div_nzreal_is_real application-judgement "real" reals nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (norm_eq_0 formula-decl nil vectors_2D vectors)
    (sub_eq_zero formula-decl nil vectors_2D vectors)
    (nnreal_times_nnreal_is_nnreal application-judgement "nnreal" real_types
     nil)
    (number nonempty-type-decl nil numbers nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (>= const-decl "bool" reals nil)
    (nonneg_real nonempty-type-eq-decl nil real_types nil)
    (> const-decl "bool" reals nil)
    (posreal nonempty-type-eq-decl nil real_types nil)
    (AND const-decl "[bool, bool -> bool]" booleans nil)
    (numfield nonempty-type-eq-decl nil number_fields nil)
    (- const-decl "[numfield -> numfield]" number_fields nil)
    (abs const-decl "{n: nonneg_real | n >= m AND n >= -m}" real_defs nil)
    (- const-decl "[numfield, numfield -> numfield]" number_fields nil)
    (Vector type-eq-decl nil vectors_2D vectors)
    (norm const-decl "nnreal" vectors_2D vectors)
    (- const-decl "Vector" vectors_2D vectors)
    (Vect2 type-eq-decl nil vectors_2D_def vectors)
    (vect2 const-decl "Vect2" vect_3D_2D vectors)
    (div_mult_pos_gt1 formula-decl nil extra_real_props nil)
    (groundSpeed const-decl "nnreal" NavPoint3D nil)
    (real_minus_real_is_real application-judgement "real" reals nil))
   nil
   (gs_nz subtype "NavPoint3D.groundSpeed(NavPoint3D.v1, NavPoint3D.v2)"
    "posreal")))
 (initialVelocity_TCC1 0
  (initialVelocity_TCC1-1 nil 3605438688 ("" (subtype-tcc) nil nil)
   ((nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (/= const-decl "boolean" notequal nil))
   nil (initialVelocity subtype "NavPoint3D.dt" "nznum")))
 (initialVelocity_TCC2 0
  (initialVelocity_TCC2-1 nil 3605438688 ("" (subtype-tcc) nil nil)
   ((real_minus_real_is_real application-judgement "real" reals nil)
    (real_ge_is_total_order name-judgement "(total_order?[real])" real_props
     nil)
    (real_gt_is_strict_total_order name-judgement
     "(strict_total_order?[real])" real_props nil)
    (minus_real_is_real application-judgement "real" reals nil)
    (nnreal type-eq-decl nil real_types nil) (>= const-decl "bool" reals nil)
    (real nonempty-type-from-decl nil reals nil)
    (real_pred const-decl "[number_field -> boolean]" reals nil)
    (number_field nonempty-type-from-decl nil number_fields nil)
    (number_field_pred const-decl "[number -> boolean]" number_fields nil)
    (number nonempty-type-decl nil numbers nil)
    (NOT const-decl "[bool -> bool]" booleans nil)
    (bool nonempty-type-eq-decl nil booleans nil)
    (boolean nonempty-type-decl nil booleans nil)
    (/= const-decl "boolean" notequal nil))
   nil (initialVelocity subtype "(number_fields.-)(NavPoint3D.dt)" "nznum"))))

